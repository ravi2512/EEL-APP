{"ast":null,"code":"/*!\n\tquery-string\n\tParse and stringify URL query strings\n\thttps://github.com/sindresorhus/query-string\n\tby Sindre Sorhus\n\tMIT License\n*/\n(function () {\n  'use strict';\n\n  var queryString = {};\n\n  queryString.parse = function (str) {\n    if (typeof str !== 'string') {\n      return {};\n    }\n\n    str = str.trim().replace(/^(\\?|#)/, '');\n\n    if (!str) {\n      return {};\n    }\n\n    return str.trim().split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key); // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n\n      return ret;\n    }, {});\n  };\n\n  queryString.stringify = function (obj) {\n    return obj ? Object.keys(obj).map(function (key) {\n      var val = obj[key];\n\n      if (Array.isArray(val)) {\n        return val.map(function (val2) {\n          return encodeURIComponent(key) + '=' + encodeURIComponent(val2);\n        }).join('&');\n      }\n\n      return encodeURIComponent(key) + '=' + encodeURIComponent(val);\n    }).join('&') : '';\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return queryString;\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = queryString;\n  } else {\n    self.queryString = queryString;\n  }\n})();","map":null,"metadata":{},"sourceType":"script"}