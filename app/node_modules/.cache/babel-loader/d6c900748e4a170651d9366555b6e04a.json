{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nrequire(\"../style/DateTimeRange.css\");\n\nvar _StyleUtils = require(\"../utils/StyleUtils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar RangeButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RangeButton, _React$Component);\n\n  function RangeButton(props) {\n    var _this;\n\n    _classCallCheck(this, RangeButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RangeButton).call(this, props));\n    _this.state = {\n      style: \"rangebuttonstyle\"\n    };\n    _this.mouseEnter = _this.mouseEnter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.mouseLeave = _this.mouseLeave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.keyDown = _this.keyDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RangeButton, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var focused = nextProps.focused[nextProps.index]; // If selected index or focused set to selected style\n\n      if (nextProps.index === nextProps.selectedRange || focused) {\n        this.setState({\n          style: \"rangeButtonSelectedStyle\"\n        });\n      } else {\n        this.setState({\n          style: \"rangebuttonstyle\"\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var isComponentViewing = this.props.index === this.props.viewingIndex;\n      var focused = this.props.focused;\n      var focusedOnARange = false;\n\n      for (var i = 0; i < focused.length; i++) {\n        if (focused[i] === true) {\n          focusedOnARange = true;\n          break;\n        }\n      } // If the component we are currently on is the selected viewing component\n      // and we are focused on it according to our focused matrix.\n      // Then add an event listener for this button and set it as focused\n\n\n      if (isComponentViewing && focusedOnARange) {\n        document.addEventListener(\"keydown\", this.keyDown, false);\n        this.button.focus();\n      }\n    }\n  }, {\n    key: \"mouseEnter\",\n    value: function mouseEnter() {\n      // Set hover style\n      this.setState({\n        style: \"rangeButtonSelectedStyle\"\n      });\n    }\n  }, {\n    key: \"mouseLeave\",\n    value: function mouseLeave(focused) {\n      var isFocused;\n\n      if (typeof focused === 'boolean') {\n        isFocused = focused;\n      } else {\n        isFocused = this.state.focused;\n      }\n\n      var isSelected = this.props.index === this.props.selectedRange; // If not selected and not focused then on mouse leave set to normal style\n\n      if (!isSelected && !isFocused) {\n        this.setState({\n          style: \"rangebuttonstyle\"\n        });\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.setState({\n        focused: true\n      });\n      this.props.setFocusedCallback(this.props.index, true);\n      this.mouseEnter(true);\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.setState({\n        focused: false\n      });\n      this.props.setFocusedCallback(this.props.index, false);\n      this.mouseLeave(false);\n      document.removeEventListener(\"keydown\", this.keyDown, false);\n    }\n  }, {\n    key: \"keyDown\",\n    value: function keyDown(e) {\n      var componentFocused = document.activeElement === _reactDom.default.findDOMNode(this.button); // Up Key\n\n\n      if (e.keyCode === 38 && componentFocused) {\n        e.preventDefault();\n        this.props.viewingIndexChangeCallback(this.props.index - 1);\n      } // Down Key\n      else if (e.keyCode === 40 && componentFocused) {\n          e.preventDefault();\n          this.props.viewingIndexChangeCallback(this.props.index + 1);\n        } // Space Bar and Enter\n        else if (e.keyCode === 32 || e.keyCode === 13) {\n            this.props.rangeSelectedCallback(this.props.index, this.props.label);\n          }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isViewingIndex = this.props.viewingIndex === this.props.index;\n      var tabIndex;\n\n      if (isViewingIndex) {\n        tabIndex = 0;\n      } else {\n        tabIndex = -1;\n      }\n\n      var focusStyle = {};\n      focusStyle = (0, _StyleUtils.addFocusStyle)(this.state.focused, focusStyle);\n      return _react.default.createElement(\"div\", {\n        ref: function ref(button) {\n          _this2.button = button;\n        },\n        className: this.state.style,\n        onMouseEnter: this.mouseEnter,\n        onMouseLeave: this.mouseLeave,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        tabIndex: tabIndex,\n        style: focusStyle\n      }, _react.default.createElement(\"div\", {\n        className: \"rangebuttontextstyle\",\n        onClick: function onClick() {\n          return _this2.props.rangeSelectedCallback(_this2.props.index, _this2.props.label);\n        }\n      }, this.props.label));\n    }\n  }]);\n\n  return RangeButton;\n}(_react.default.Component);\n\nvar _default = RangeButton;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}