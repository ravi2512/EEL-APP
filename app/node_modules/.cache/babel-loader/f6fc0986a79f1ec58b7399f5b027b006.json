{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Charts/ChartJs/Examples/mix.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nvar initialState = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'round',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nvar createReactClass = require('create-react-class');\n\nvar Graph = createReactClass({\n  displayName: 'Graph',\n  componentWillMount: function componentWillMount() {\n    this.setState(initialState);\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    setInterval(function () {\n      var oldDataSet = _this.state.datasets[0];\n      var newData = [];\n\n      for (var x = 0; x < _this.state.labels.length; x++) {\n        newData.push(Math.floor(Math.random() * 100));\n      }\n\n      var newDataSet = _objectSpread({}, oldDataSet);\n\n      newDataSet.data = newData;\n\n      var newState = _objectSpread({}, initialState, {\n        datasets: [newDataSet]\n      });\n\n      _this.setState(newState);\n    }, 5000);\n  },\n  render: function render() {\n    return React.createElement(Line, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }\n});\n\nvar MixExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MixExample, _React$Component);\n\n  function MixExample() {\n    _classCallCheck(this, MixExample);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MixExample).apply(this, arguments));\n  }\n\n  _createClass(MixExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Graph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MixExample;\n}(React.Component);\n\nexport default MixExample;","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Charts/ChartJs/Examples/mix.js"],"names":["React","Line","initialState","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","createReactClass","require","Graph","displayName","componentWillMount","setState","componentDidMount","_this","setInterval","oldDataSet","state","newData","x","length","push","Math","floor","random","newDataSet","newState","render","MixExample","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADS;AAEjBC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,KAAK,EAAE,kBADX;AAEIC,IAAAA,IAAI,EAAE,KAFV;AAGIC,IAAAA,WAAW,EAAE,GAHjB;AAIIC,IAAAA,eAAe,EAAE,sBAJrB;AAKIC,IAAAA,WAAW,EAAE,oBALjB;AAMIC,IAAAA,cAAc,EAAE,OANpB;AAOIC,IAAAA,UAAU,EAAE,EAPhB;AAQIC,IAAAA,gBAAgB,EAAE,GARtB;AASIC,IAAAA,eAAe,EAAE,OATrB;AAUIC,IAAAA,gBAAgB,EAAE,oBAVtB;AAWIC,IAAAA,oBAAoB,EAAE,MAX1B;AAYIC,IAAAA,gBAAgB,EAAE,CAZtB;AAaIC,IAAAA,gBAAgB,EAAE,CAbtB;AAcIC,IAAAA,yBAAyB,EAAE,oBAd/B;AAeIC,IAAAA,qBAAqB,EAAE,qBAf3B;AAgBIC,IAAAA,qBAAqB,EAAE,CAhB3B;AAiBIC,IAAAA,WAAW,EAAE,CAjBjB;AAkBIC,IAAAA,cAAc,EAAE,EAlBpB;AAmBIC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAnBV,GADM;AAFO,CAArB;;AA2BA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AAEA,IAAMC,KAAK,GAAGF,gBAAgB,CAAC;AAC3BG,EAAAA,WAAW,EAAE,OADc;AAE3BC,EAAAA,kBAF2B,gCAEP;AAChB,SAAKC,QAAL,CAAc3B,YAAd;AACH,GAJ0B;AAK3B4B,EAAAA,iBAL2B,+BAKR;AAEf,QAAIC,KAAK,GAAG,IAAZ;;AAEAC,IAAAA,WAAW,CAAC,YAAU;AAClB,UAAIC,UAAU,GAAGF,KAAK,CAACG,KAAN,CAAY9B,QAAZ,CAAqB,CAArB,CAAjB;AACA,UAAI+B,OAAO,GAAG,EAAd;;AAEA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEL,KAAK,CAACG,KAAN,CAAY/B,MAAZ,CAAmBkC,MAAnC,EAA2CD,CAAC,EAA5C,EAA+C;AAC3CD,QAAAA,OAAO,CAACG,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACH;;AAED,UAAIC,UAAU,qBACPT,UADO,CAAd;;AAIAS,MAAAA,UAAU,CAACnB,IAAX,GAAkBY,OAAlB;;AAEA,UAAIQ,QAAQ,qBACLzC,YADK;AAERE,QAAAA,QAAQ,EAAE,CAACsC,UAAD;AAFF,QAAZ;;AAKAX,MAAAA,KAAK,CAACF,QAAN,CAAec,QAAf;AACH,KApBU,EAoBR,IApBQ,CAAX;AAqBH,GA9B0B;AA+B3BC,EAAAA,MA/B2B,oBA+BlB;AACL,WACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AAnC0B,CAAD,CAA9B;;IAsCMW,U;;;;;;;;;;;;;6BAEO;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EARoB7C,KAAK,CAAC8C,S;;AAY/B,eAAeD,UAAf","sourcesContent":["import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nconst initialState = {\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n    datasets: [\r\n        {\r\n            label: 'My First dataset',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'round',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [65, 59, 80, 81, 56, 55, 40]\r\n        }\r\n    ]\r\n};\r\n\r\nvar createReactClass = require('create-react-class');\r\n\r\nconst Graph = createReactClass({\r\n    displayName: 'Graph',\r\n    componentWillMount(){\r\n        this.setState(initialState);\r\n    },\r\n    componentDidMount(){\r\n\r\n        var _this = this;\r\n\r\n        setInterval(function(){\r\n            var oldDataSet = _this.state.datasets[0];\r\n            var newData = [];\r\n\r\n            for(var x=0; x< _this.state.labels.length; x++){\r\n                newData.push(Math.floor(Math.random() * 100));\r\n            }\r\n\r\n            var newDataSet = {\r\n                ...oldDataSet\r\n            };\r\n\r\n            newDataSet.data = newData;\r\n\r\n            var newState = {\r\n                ...initialState,\r\n                datasets: [newDataSet]\r\n            };\r\n\r\n            _this.setState(newState);\r\n        }, 5000);\r\n    },\r\n    render() {\r\n        return (\r\n            <Line data={this.state} />\r\n        );\r\n    }\r\n});\r\n\r\nclass MixExample extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Graph />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MixExample;"]},"metadata":{},"sourceType":"module"}