{"ast":null,"code":"var _jsxFileName = \"/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Components/TreeView/Examples/SampleData.js\";\nimport React from 'react';\nvar maxDepth = 5;\n\nvar renderDepthTitle = function renderDepthTitle(_ref) {\n  var path = _ref.path;\n  return \"Depth: \".concat(path.length);\n};\n\nvar treeData = [{\n  title: '`title`',\n  subtitle: '`subtitle`',\n  expanded: true,\n  children: [{\n    title: 'Child Node',\n    subtitle: 'Defined in `children` array belonging to parent'\n  }, {\n    title: 'Nested structure is rendered virtually',\n    subtitle: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"The tree uses\\xA0\", React.createElement(\"a\", {\n      href: \"https://github.com/bvaughn/react-virtualized\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"react-virtualized\"), \"\\xA0and the relationship lines are more of a visual trick.\")\n  }]\n}, {\n  expanded: true,\n  title: 'Any node can be the parent or child of any other node',\n  children: [{\n    expanded: true,\n    title: 'Chicken',\n    children: [{\n      title: 'Egg'\n    }]\n  }]\n}, {\n  title: 'Button(s) can be added to the node',\n  subtitle: 'Node info is passed when generating so you can use it in your onClick handler'\n}, {\n  title: 'Show node children by setting `expanded`',\n  subtitle: function subtitle(_ref2) {\n    var node = _ref2.node;\n    return \"expanded: \".concat(node.expanded ? 'true' : 'false');\n  },\n  children: [{\n    title: 'Bruce',\n    subtitle: function subtitle(_ref3) {\n      var node = _ref3.node;\n      return \"expanded: \".concat(node.expanded ? 'true' : 'false');\n    },\n    children: [{\n      title: 'Bruce Jr.'\n    }, {\n      title: 'Brucette'\n    }]\n  }]\n}, {\n  title: 'Advanced',\n  subtitle: 'Settings, behavior, etc.',\n  children: [{\n    title: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'gray',\n        display: 'inline-block',\n        borderRadius: 10,\n        color: '#FFF',\n        padding: '0 5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Any Component\"), \"\\xA0can be used for `title`\")\n  }, {\n    expanded: true,\n    title: 'Limit nesting with `maxDepth`',\n    subtitle: \"It's set to \".concat(maxDepth, \" for this example\"),\n    children: [{\n      expanded: true,\n      title: renderDepthTitle,\n      children: [{\n        expanded: true,\n        title: renderDepthTitle,\n        children: [{\n          title: renderDepthTitle\n        }, {\n          title: function title(_ref4) {\n            var path = _ref4.path;\n            return path.length >= maxDepth ? 'This cannot be dragged deeper' : 'This can be dragged deeper';\n          }\n        }]\n      }]\n    }]\n  }, {\n    title: 'Disable dragging on a per-node basis with the `canDrag` prop',\n    subtitle: 'Or set it to false to disable all dragging.',\n    noDragging: true\n  }, {\n    title: 'You cannot give this children',\n    subtitle: 'Dropping is prevented via the `canDrop` API using `nextParent`',\n    noChildren: true\n  }, {\n    title: 'When node contents are really long, it will cause a horizontal scrollbar' + ' to appear. Deeply nested elements will also trigger the scrollbar.'\n  }]\n}];\nexport default treeData;","map":{"version":3,"sources":["/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Components/TreeView/Examples/SampleData.js"],"names":["React","maxDepth","renderDepthTitle","path","length","treeData","title","subtitle","expanded","children","node","backgroundColor","display","borderRadius","color","padding","noDragging","noChildren"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst maxDepth = 5;\r\n\r\nconst renderDepthTitle = ({ path }) => `Depth: ${path.length}`;\r\n\r\nconst treeData = [\r\n    {\r\n        title: '`title`',\r\n        subtitle: '`subtitle`',\r\n        expanded: true,\r\n        children: [\r\n            {\r\n                title: 'Child Node',\r\n                subtitle: 'Defined in `children` array belonging to parent',\r\n            },\r\n            {\r\n                title: 'Nested structure is rendered virtually',\r\n                subtitle: (\r\n                    <span>\r\n            The tree uses&nbsp;\r\n                        <a href=\"https://github.com/bvaughn/react-virtualized\">\r\n              react-virtualized\r\n            </a>\r\n                        &nbsp;and the relationship lines are more of a visual trick.\r\n          </span>\r\n                ),\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        expanded: true,\r\n        title: 'Any node can be the parent or child of any other node',\r\n        children: [\r\n            {\r\n                expanded: true,\r\n                title: 'Chicken',\r\n                children: [{ title: 'Egg' }],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'Button(s) can be added to the node',\r\n        subtitle:\r\n            'Node info is passed when generating so you can use it in your onClick handler',\r\n    },\r\n    {\r\n        title: 'Show node children by setting `expanded`',\r\n        subtitle: ({ node }) => `expanded: ${node.expanded ? 'true' : 'false'}`,\r\n        children: [\r\n            {\r\n                title: 'Bruce',\r\n                subtitle: ({ node }) => `expanded: ${node.expanded ? 'true' : 'false'}`,\r\n                children: [{ title: 'Bruce Jr.' }, { title: 'Brucette' }],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'Advanced',\r\n        subtitle: 'Settings, behavior, etc.',\r\n        children: [\r\n            {\r\n                title: (\r\n                    <div>\r\n                        <div\r\n                            style={{\r\n                                backgroundColor: 'gray',\r\n                                display: 'inline-block',\r\n                                borderRadius: 10,\r\n                                color: '#FFF',\r\n                                padding: '0 5px',\r\n                            }}\r\n                        >\r\n                            Any Component\r\n                        </div>\r\n                        &nbsp;can be used for `title`\r\n                    </div>\r\n                ),\r\n            },\r\n            {\r\n                expanded: true,\r\n                title: 'Limit nesting with `maxDepth`',\r\n                subtitle: `It's set to ${maxDepth} for this example`,\r\n                children: [\r\n                    {\r\n                        expanded: true,\r\n                        title: renderDepthTitle,\r\n                        children: [\r\n                            {\r\n                                expanded: true,\r\n                                title: renderDepthTitle,\r\n                                children: [\r\n                                    { title: renderDepthTitle },\r\n                                    {\r\n                                        title: ({ path }) =>\r\n                                            path.length >= maxDepth\r\n                                                ? 'This cannot be dragged deeper'\r\n                                                : 'This can be dragged deeper',\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                title: 'Disable dragging on a per-node basis with the `canDrag` prop',\r\n                subtitle: 'Or set it to false to disable all dragging.',\r\n                noDragging: true,\r\n            },\r\n            {\r\n                title: 'You cannot give this children',\r\n                subtitle:\r\n                    'Dropping is prevented via the `canDrop` API using `nextParent`',\r\n                noChildren: true,\r\n            },\r\n            {\r\n                title:\r\n                'When node contents are really long, it will cause a horizontal scrollbar' +\r\n                ' to appear. Deeply nested elements will also trigger the scrollbar.',\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default treeData;"]},"metadata":{},"sourceType":"module"}