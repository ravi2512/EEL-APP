{"ast":null,"code":"import _objectSpread from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport namor from \"namor\";\n\nvar range = function range(len) {\n  var arr = [];\n\n  for (var i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nvar newPerson = function newPerson() {\n  var statusChance = Math.random();\n  return {\n    firstName: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    lastName: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status: statusChance > 0.66 ? \"relationship\" : statusChance > 0.33 ? \"complicated\" : \"single\"\n  };\n};\n\nexport function makeData() {\n  var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5553;\n  return range(len).map(function (d) {\n    return _objectSpread({}, newPerson(), {\n      children: range(10).map(newPerson)\n    });\n  });\n}","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Tables/DataTables/Examples/utils.js"],"names":["namor","range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","generate","words","numbers","lastName","age","floor","visits","progress","status","makeData","map","d","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,GAAG,EAAI;AACjB,MAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1BD,IAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACH;;AACD,SAAOD,GAAP;AACH,CAND;;AAQA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAL,EAArB;AACA,SAAO;AACHC,IAAAA,SAAS,EAAEV,KAAK,CAACW,QAAN,CAAe;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAf,CADR;AAEHC,IAAAA,QAAQ,EAAEd,KAAK,CAACW,QAAN,CAAe;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAf,CAFP;AAGHE,IAAAA,GAAG,EAAEP,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACC,MAAL,KAAgB,EAA3B,CAHF;AAIHQ,IAAAA,MAAM,EAAET,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACC,MAAL,KAAgB,GAA3B,CAJL;AAKHS,IAAAA,QAAQ,EAAEV,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACC,MAAL,KAAgB,GAA3B,CALP;AAMHU,IAAAA,MAAM,EACFZ,YAAY,GAAG,IAAf,GACM,cADN,GAEMA,YAAY,GAAG,IAAf,GAAsB,aAAtB,GAAsC;AAT7C,GAAP;AAWH,CAbD;;AAeA,OAAO,SAASa,QAAT,GAA8B;AAAA,MAAZlB,GAAY,uEAAN,IAAM;AACjC,SAAOD,KAAK,CAACC,GAAD,CAAL,CAAWmB,GAAX,CAAe,UAAAC,CAAC,EAAI;AACvB,6BACOhB,SAAS,EADhB;AAEIiB,MAAAA,QAAQ,EAAEtB,KAAK,CAAC,EAAD,CAAL,CAAUoB,GAAV,CAAcf,SAAd;AAFd;AAIH,GALM,CAAP;AAMH","sourcesContent":["import namor from \"namor\";\r\n\r\nconst range = len => {\r\n    const arr = [];\r\n    for (let i = 0; i < len; i++) {\r\n        arr.push(i);\r\n    }\r\n    return arr;\r\n};\r\n\r\nconst newPerson = () => {\r\n    const statusChance = Math.random();\r\n    return {\r\n        firstName: namor.generate({ words: 1, numbers: 0 }),\r\n        lastName: namor.generate({ words: 1, numbers: 0 }),\r\n        age: Math.floor(Math.random() * 30),\r\n        visits: Math.floor(Math.random() * 100),\r\n        progress: Math.floor(Math.random() * 100),\r\n        status:\r\n            statusChance > 0.66\r\n                ? \"relationship\"\r\n                : statusChance > 0.33 ? \"complicated\" : \"single\"\r\n    };\r\n};\r\n\r\nexport function makeData(len = 5553) {\r\n    return range(len).map(d => {\r\n        return {\r\n            ...newPerson(),\r\n            children: range(10).map(newPerson)\r\n        };\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}