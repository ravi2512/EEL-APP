{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Forms/Components/Clipboard/index.js\";\nimport React, { Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { Row, Col, Card, CardBody, FormText, CardTitle, Button, InputGroup, Input, InputGroupAddon } from 'reactstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageTitle from '../../../../Layout/AppMain/PageTitle';\n\nvar FormClipboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormClipboard, _React$Component);\n\n  function FormClipboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormClipboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: 'Write here the text that you are copying. \\n This is a new text line!',\n      copied: false\n    };\n\n    _this.onChange = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.setState({\n        value: value,\n        copied: false\n      });\n    };\n\n    _this.onClick = function (_ref2) {\n      var innerHTML = _ref2.target.innerHTML;\n      console.log(\"Clicked on \\\"\".concat(innerHTML, \"\\\"!\")); // eslint-disable-line\n    };\n\n    _this.onCopy = function () {\n      _this.setState({\n        copied: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormClipboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(PageTitle, {\n        heading: \"Clipboard\",\n        subheading: \"You can copy/paste text with this React form widget.\",\n        icon: \"pe-7s-phone icon-gradient bg-premium-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(ReactCSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Text to Copy\"), React.createElement(\"textarea\", {\n        onChange: this.onChange,\n        rows: 2,\n        cols: 10,\n        className: \"form-control\",\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), this.state.copied ? React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-success mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Copied.\")) : null)), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Input Group Copy\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.value,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(CopyToClipboard, {\n        onCopy: this.onCopy,\n        text: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faCopy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))))), this.state.copied ? React.createElement(FormText, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Text has been copied.\") : null))), React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Button Copy\"), React.createElement(CopyToClipboard, {\n        onCopy: this.onCopy,\n        text: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"btn-shadow btn-pill btn-wide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Copy to clipboard with button\")))), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Element Copy\"), React.createElement(CopyToClipboard, {\n        onCopy: this.onCopy,\n        text: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Copy to clipboard with span\")))), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"onClick Copy\"), React.createElement(CopyToClipboard, {\n        onCopy: this.onCopy,\n        options: {\n          message: 'Whoa!'\n        },\n        text: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"btn-shadow btn-pill btn-wide\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Copy to clipboard with onClick prop\"))))))));\n    }\n  }]);\n\n  return FormClipboard;\n}(React.Component);\n\nexport { FormClipboard as default };","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Forms/Components/Clipboard/index.js"],"names":["React","Fragment","ReactCSSTransitionGroup","Row","Col","Card","CardBody","FormText","CardTitle","Button","InputGroup","Input","InputGroupAddon","CopyToClipboard","faCopy","FontAwesomeIcon","PageTitle","FormClipboard","state","value","copied","onChange","target","setState","onClick","innerHTML","console","log","onCopy","message","Component"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport {\r\n    Row, Col,\r\n    Card, CardBody, FormText,\r\n    CardTitle, Button, InputGroup, Input, InputGroupAddon\r\n} from 'reactstrap';\r\n\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n    faCopy\r\n\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nimport PageTitle from '../../../../Layout/AppMain/PageTitle';\r\n\r\nexport default class FormClipboard extends React.Component {\r\n    state = {value: 'Write here the text that you are copying. \\n This is a new text line!', copied: false};\r\n\r\n    onChange = ({target: {value}}) => {\r\n        this.setState({value, copied: false});\r\n    };\r\n\r\n    onClick = ({target: {innerHTML}}) => {\r\n        console.log(`Clicked on \"${innerHTML}\"!`); // eslint-disable-line\r\n    };\r\n\r\n    onCopy = () => {\r\n        this.setState({copied: true});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <PageTitle\r\n                    heading=\"Clipboard\"\r\n                    subheading=\"You can copy/paste text with this React form widget.\"\r\n                    icon=\"pe-7s-phone icon-gradient bg-premium-dark\"\r\n                />\r\n                <ReactCSSTransitionGroup\r\n                    component=\"div\"\r\n                    transitionName=\"TabsAnimation\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={0}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Text to Copy</CardTitle>\r\n                                    <textarea onChange={this.onChange} rows={2} cols={10} className=\"form-control\"\r\n                                              value={this.state.value}/>\r\n                                    {this.state.copied ?\r\n                                        <div className=\"text-center\"><h5 className=\"text-success mt-2\">Copied.</h5>\r\n                                        </div> : null}\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Input Group Copy</CardTitle>\r\n                                    <InputGroup>\r\n                                        <Input value={this.state.value} onChange={this.onChange} />\r\n                                        <InputGroupAddon addonType=\"append\">\r\n                                            <CopyToClipboard onCopy={this.onCopy} text={this.state.value}>\r\n                                                <Button color=\"primary\">\r\n                                                    <FontAwesomeIcon icon={faCopy}/>\r\n                                                </Button>\r\n                                            </CopyToClipboard>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n                                    {this.state.copied ?\r\n                                        <FormText color=\"success\">\r\n                                            Text has been copied.\r\n                                        </FormText>\r\n                                        : null}\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Button Copy</CardTitle>\r\n                                    <CopyToClipboard onCopy={this.onCopy} text={this.state.value}>\r\n                                        <Button color=\"primary\" className=\"btn-shadow btn-pill btn-wide\">Copy to\r\n                                            clipboard with button</Button>\r\n                                    </CopyToClipboard>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Element Copy</CardTitle>\r\n                                    <CopyToClipboard onCopy={this.onCopy} text={this.state.value}>\r\n                                        <span>Copy to clipboard with span</span>\r\n                                    </CopyToClipboard>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>onClick Copy</CardTitle>\r\n                                    <CopyToClipboard\r\n                                        onCopy={this.onCopy}\r\n                                        options={{message: 'Whoa!'}}\r\n                                        text={this.state.value}>\r\n                                        <Button color=\"primary\" className=\"btn-shadow btn-pill btn-wide\"\r\n                                                onClick={this.onClick}>Copy to clipboard with onClick prop\r\n                                        </Button>\r\n                                    </CopyToClipboard>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </ReactCSSTransitionGroup>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}