{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  text-decoration: none;\\n  font-size: \", \";\\n  background: \", \";\\n  color: \", \";\\n  \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: \", \";\\n  background-color: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { fontFamily, headingSizes, themeColors } from './settings';\nvar styles = \"\\n    border: 0;\\n    border-radius: 4px;\\n    outline: 0;\\n    color: white;\\n    padding: .5em 1em;\\n    margin-left: .25em;\\n    margin-right: .25em;\\n\\n    &:hover {\\n        opacity: .9;\\n    }\\n\";\nvar Button = styled.button(_templateObject(), styles);\nvar Link = styled.a(_templateObject2(), styles);\nvar StyledButton = styled(Button)(_templateObject3(), function (props) {\n  return props.h ? headingSizes[props.h - 1] : 'inherit';\n}, function (props) {\n  return themeColors[props.color] || themeColors.dark;\n});\nvar StyledLink = styled(Link)(_templateObject4(), function (props) {\n  return props.h ? headingSizes[props.h - 1] : 'inherit';\n}, function (props) {\n  return props.bg ? themeColors[props.bg] : 'none';\n}, function (props) {\n  return props.bg ? 'white' : props.color ? themeColors[props.color] : themeColors.black;\n}, function (props) {\n  return props.nospaces && \"\\n    display: inline-block;\\n    padding: 0;\\n    margin: 0;\\n  \";\n});\nexport { StyledButton as Button };\nexport { StyledLink as Link };","map":{"version":3,"sources":["/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Components/GuidedTours/Examples/Button.js"],"names":["styled","fontFamily","headingSizes","themeColors","styles","Button","button","Link","a","StyledButton","props","h","color","dark","StyledLink","bg","black","nospaces"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,QAAsD,YAAtD;AAEA,IAAMC,MAAM,6MAAZ;AAaA,IAAMC,MAAM,GAAGL,MAAM,CAACM,MAAV,oBACRF,MADQ,CAAZ;AAGA,IAAMG,IAAI,GAAGP,MAAM,CAACQ,CAAV,qBACNJ,MADM,CAAV;AAIA,IAAMK,YAAY,GAAGT,MAAM,CAACK,MAAD,CAAT,qBACH,UAAAK,KAAK;AAAA,SAAKA,KAAK,CAACC,CAAN,GAAUT,YAAY,CAACQ,KAAK,CAACC,CAAN,GAAU,CAAX,CAAtB,GAAsC,SAA3C;AAAA,CADF,EAEI,UAAAD,KAAK;AAAA,SAAIP,WAAW,CAACO,KAAK,CAACE,KAAP,CAAX,IAA4BT,WAAW,CAACU,IAA5C;AAAA,CAFT,CAAlB;AAKA,IAAMC,UAAU,GAAGd,MAAM,CAACO,IAAD,CAAT,qBAED,UAAAG,KAAK;AAAA,SAAKA,KAAK,CAACC,CAAN,GAAUT,YAAY,CAACQ,KAAK,CAACC,CAAN,GAAU,CAAX,CAAtB,GAAsC,SAA3C;AAAA,CAFJ,EAGA,UAAAD,KAAK;AAAA,SAAKA,KAAK,CAACK,EAAN,GAAWZ,WAAW,CAACO,KAAK,CAACK,EAAP,CAAtB,GAAmC,MAAxC;AAAA,CAHL,EAIL,UAAAL,KAAK;AAAA,SACZA,KAAK,CAACK,EAAN,GACI,OADJ,GAEIL,KAAK,CAACE,KAAN,GACET,WAAW,CAACO,KAAK,CAACE,KAAP,CADb,GAEET,WAAW,CAACa,KALN;AAAA,CAJA,EAUZ,UAAAN,KAAK;AAAA,SACLA,KAAK,CAACO,QAAN,uEADK;AAAA,CAVO,CAAhB;AAmBA,SAASR,YAAY,IAAIJ,MAAzB;AACA,SAASS,UAAU,IAAIP,IAAvB","sourcesContent":["import styled from 'styled-components'\r\nimport { fontFamily, headingSizes, themeColors } from './settings'\r\n\r\nconst styles = `\r\n    border: 0;\r\n    border-radius: 4px;\r\n    outline: 0;\r\n    color: white;\r\n    padding: .5em 1em;\r\n    margin-left: .25em;\r\n    margin-right: .25em;\r\n\r\n    &:hover {\r\n        opacity: .9;\r\n    }\r\n`\r\nconst Button = styled.button`\r\n  ${styles};\r\n`\r\nconst Link = styled.a`\r\n  ${styles};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  font-size: ${props => (props.h ? headingSizes[props.h - 1] : 'inherit')};\r\n  background-color: ${props => themeColors[props.color] || themeColors.dark};\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  font-size: ${props => (props.h ? headingSizes[props.h - 1] : 'inherit')};\r\n  background: ${props => (props.bg ? themeColors[props.bg] : 'none')};\r\n  color: ${props =>\r\n    props.bg\r\n      ? 'white'\r\n      : props.color\r\n        ? themeColors[props.color]\r\n        : themeColors.black};\r\n  ${props =>\r\n    props.nospaces &&\r\n    `\r\n    display: inline-block;\r\n    padding: 0;\r\n    margin: 0;\r\n  `};\r\n`\r\n\r\nexport { StyledButton as Button }\r\nexport { StyledLink as Link }\r\n"]},"metadata":{},"sourceType":"module"}