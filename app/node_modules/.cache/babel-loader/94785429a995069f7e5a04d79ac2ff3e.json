{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nrequire(\"../style/DateTimeRange.css\");\n\nvar _reactBootstrap = require(\"react-bootstrap\");\n\nvar _StyleUtils = require(\"../utils/StyleUtils.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar MonthYearSelector =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MonthYearSelector, _React$Component);\n\n  function MonthYearSelector(props) {\n    var _this;\n\n    _classCallCheck(this, MonthYearSelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MonthYearSelector).call(this, props));\n    _this.state = {\n      monthFocus: false,\n      yearFocus: false\n    };\n    _this.monthFocus = _this.monthFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.yearFocus = _this.yearFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.monthBlur = _this.monthBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.yearBlur = _this.yearBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MonthYearSelector, [{\n    key: \"createCalendarMonths\",\n    value: function createCalendarMonths(months) {\n      return this.mapToOption(months);\n    }\n  }, {\n    key: \"createYears\",\n    value: function createYears(years) {\n      return this.mapToOption(years);\n    }\n  }, {\n    key: \"monthFocus\",\n    value: function monthFocus() {\n      this.setState({\n        monthFocus: true\n      });\n    }\n  }, {\n    key: \"monthBlur\",\n    value: function monthBlur() {\n      this.setState({\n        monthFocus: false\n      });\n    }\n  }, {\n    key: \"yearFocus\",\n    value: function yearFocus() {\n      this.setState({\n        yearFocus: true\n      });\n    }\n  }, {\n    key: \"yearBlur\",\n    value: function yearBlur() {\n      this.setState({\n        yearFocus: false\n      });\n    }\n  }, {\n    key: \"mapToOption\",\n    value: function mapToOption(variableArray) {\n      return variableArray.map(function (varInstance, i) {\n        return _react.default.createElement(\"option\", {\n          key: i\n        }, varInstance);\n      });\n    }\n  }, {\n    key: \"createGlyph\",\n    value: function createGlyph(icon, onClickHandler, previous, next) {\n      return _react.default.createElement(_reactBootstrap.Glyphicon, {\n        glyph: icon,\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: function onClick() {\n          return onClickHandler(previous, next);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var months = this.createCalendarMonths(this.props.months);\n      var years = this.createYears(this.props.years);\n      var leftArrow = this.createGlyph(\"chevron-left\", this.props.changeMonthArrowsCallback, true, false);\n      var rightArrow = this.createGlyph(\"chevron-right\", this.props.changeMonthArrowsCallback, false, true);\n      var monthFocusStyle = {};\n      monthFocusStyle = (0, _StyleUtils.addFocusStyle)(this.state.monthFocus, monthFocusStyle);\n      var yearFocusStyle = {};\n      yearFocusStyle = (0, _StyleUtils.addFocusStyle)(this.state.yearFocus, yearFocusStyle);\n      return _react.default.createElement(\"div\", {\n        className: \"monthYearContainer\"\n      }, _react.default.createElement(\"div\", {\n        className: \"multipleContentOnLine leftChevron\"\n      }, leftArrow), _react.default.createElement(\"div\", {\n        className: \"multipleContentOnLine\",\n        onFocus: this.monthFocus,\n        onBlur: this.monthBlur,\n        style: monthFocusStyle\n      }, _react.default.createElement(\"select\", {\n        value: this.props.months[this.props.month],\n        onChange: this.props.changeMonthCallback\n      }, months)), _react.default.createElement(\"div\", {\n        className: \"multipleContentOnLine\",\n        onFocus: this.yearFocus,\n        onBlur: this.yearBlur,\n        style: yearFocusStyle\n      }, _react.default.createElement(\"select\", {\n        value: this.props.year,\n        onChange: this.props.changeYearCallback\n      }, years)), _react.default.createElement(\"div\", {\n        className: \"multipleContentOnLine rightChevron\"\n      }, rightArrow));\n    }\n  }]);\n\n  return MonthYearSelector;\n}(_react.default.Component);\n\nvar _default = MonthYearSelector;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}