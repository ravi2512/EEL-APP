{"ast":null,"code":"import _regeneratorRuntime from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/EEL-APP/app/src/DemoPages/SolarDashboards/DispatchDetails/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Row, Col, Button, CardHeader, Container, Card, CardBody, CardFooter, UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Table, Input, FormText, CardTitle } from 'reactstrap';\nimport Rodal from 'rodal';\nimport DatePicker from 'react-datepicker';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ReactTable from \"react-table\";\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport $ from 'jquery';\nimport dt from 'datatables.net';\nimport dtstyle from 'datatables.net-bs4'; //  import responsive from 'datatables.net-responsive';\n\nimport dtresponsive from 'datatables.net-responsive-bs4';\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport Select from 'react-select';\nvar options = [{\n  value: '1',\n  label: 'Today'\n}, {\n  value: '2',\n  label: 'Yesterday'\n}, {\n  value: '3',\n  label: 'Select Date'\n}];\n\nvar MyExportCSV = function MyExportCSV(props) {\n  var handleClick = function handleClick() {\n    props.onExport();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Export to CSV\"));\n};\n\nvar columns = [{\n  dataField: 'Record.date',\n  text: 'Date'\n}, {\n  dataField: 'Record.vendor',\n  text: 'Vendor'\n}, {\n  dataField: 'Record.part_no',\n  text: 'Part No'\n}, {\n  dataField: 'Record.part_description',\n  text: 'Part Description',\n  style: {\n    width: '45%'\n  }\n}, {\n  dataField: 'Record.to_supply',\n  text: 'Quantity'\n}, {\n  dataField: 'Record.uom',\n  text: 'UOM'\n}, {\n  dataField: 'Record.dispatch_details.dispatched_quantity',\n  text: 'Dispatch Qty'\n}, {\n  dataField: 'Record.dispatch_details.dispatched_date',\n  text: 'Dispatch Date'\n}, {\n  dataField: 'Record.dispatch_details.eta',\n  text: 'ETA'\n}, {\n  dataField: 'Record.dispatch_details.vehicle_number',\n  text: 'Vehicle No'\n}, {\n  dataField: 'Record.dispatch_details.driver_name',\n  text: 'Driver Name'\n}, {\n  dataField: 'Record.dispatch_details.driver_contact_no',\n  text: 'Driver Mobile'\n}];\n\nvar customTotal = function customTotal(from, to, size) {\n  return React.createElement(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Showing \", from, \" to \", to, \" of \", size, \" Results\");\n};\n\nvar pageoptions = {\n  paginationSize: 4,\n  pageStartIndex: 1,\n  alwaysShowAllBtns: true,\n  // Always show next and previous button\n  withFirstAndLast: false,\n  // Hide the going to First and Last page button\n  hideSizePerPage: false,\n  // Hide the sizePerPage dropdown always\n  hidePageListOnlyOnePage: false,\n  // Hide the pagination list when only one page\n  firstPageText: 'First',\n  prePageText: 'Back',\n  nextPageText: 'Next',\n  lastPageText: 'Last',\n  nextPageTitle: 'First page',\n  prePageTitle: 'Pre page',\n  firstPageTitle: 'Next page',\n  lastPageTitle: 'Last page',\n  showTotal: true,\n  paginationTotalRenderer: customTotal,\n  sizePerPageList: [{\n    text: '5',\n    value: 5\n  }, {\n    text: '10',\n    value: 10\n  }, {\n    text: '50',\n    value: 50\n  }]\n};\n\nvar DispatchDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DispatchDetails, _Component);\n\n  function DispatchDetails() {\n    var _this;\n\n    _classCallCheck(this, DispatchDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DispatchDetails).call(this));\n\n    _this.handleChange = function (selectedOption) {\n      var today = new Date();\n      var date = new Date().getDate();\n      var month = new Date().getMonth() + 1;\n      var year = new Date().getFullYear();\n      var finaldate = \"Today \" + date + \"/\" + month + \"/\" + year;\n\n      if (selectedOption.value == 1) {\n        _this.setState({\n          currentdate: finaldate,\n          apidate: today\n        }, function () {\n          _this.callAPI();\n        });\n      } else if (selectedOption.value == 2) {\n        finaldate = \"Yesterday \" + (date - 1) + \"/\" + month + \"/\" + year;\n\n        _this.setState({\n          currentdate: finaldate,\n          apidate: today.setDate(today.getDate() - 1)\n        }, function () {\n          _this.callAPI();\n        });\n      } else if (selectedOption.value == 3) {\n        _this.showdatepicker();\n      } //alert(JSON.stringify(selectedOption));\n\n\n      _this.setState({\n        selectedOption: selectedOption\n      });\n    };\n\n    _this.state = {\n      parameter: '',\n      userdetails: '',\n      currentdate: '',\n      apidate: new Date(),\n      data: [],\n      criticaldata: [],\n      Aknowledgedata: [],\n      Dispatchdata: [],\n      Escallatedata: [],\n      selectedOption: null,\n      datepickervisible: false,\n      datepickerdate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(DispatchDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var onload = {\n        value: \"1\",\n        label: \"Today\"\n      };\n      this.handleChange(onload);\n      this.setState({\n        parameter: this.props.match.params.type\n      }, function () {\n        _this2.callAPI();\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var _this3 = this;\n\n      this.setState({\n        parameter: props.match.params.type\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this3.callAPI();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    }\n  }, {\n    key: \"callAPI\",\n    value: function callAPI() {\n      var _this4 = this;\n\n      var today = new Date();\n      var data = {\n        'date': this.state.apidate\n      };\n      fetch('/getInventory', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        console.log('Dispatch Details', responseData);\n\n        if (responseData.code == 200) {\n          _this4.setState({\n            data: responseData.data.filter(function (o) {\n              return o.Record.dispatch_details.dispatched_quantity != '';\n            })\n          }, function () {//this.dataresult();\n          });\n        } else {}\n      });\n    }\n  }, {\n    key: \"showdatepicker\",\n    value: function showdatepicker() {\n      this.setState({\n        datepickervisible: true\n      });\n    }\n  }, {\n    key: \"hidedatepicker\",\n    value: function hidedatepicker() {\n      this.setState({\n        datepickervisible: false\n      });\n    }\n  }, {\n    key: \"setdatepickerdate\",\n    value: function setdatepickerdate() {\n      var _this5 = this;\n\n      var dt = this.state.datepickerdate;\n      var date = new Date(dt).getDate();\n      var month = new Date(dt).getMonth() + 1;\n      var year = new Date(dt).getFullYear();\n      var finaldate = \"Selected Date \" + date + \"/\" + month + \"/\" + year;\n      this.setState({\n        datepickervisible: false,\n        apidate: this.state.datepickerdate,\n        currentdate: finaldate\n      }, function () {\n        _this5.callAPI();\n      });\n    }\n  }, {\n    key: \"dataresult\",\n    value: function dataresult() {\n      var _this6 = this;\n\n      if (this.state.parameter == \"critical\") {\n        this.setState({\n          data: this.state.data.filter(function (o) {\n            return o.Record.criticalty === \"Critical\";\n          }),\n          head: 'Critical List'\n        });\n      } else if (this.state.parameter == \"pendingack\") {\n        this.setState({\n          data: this.state.data.filter(function (o) {\n            return o.Record.acknowledgement_details.acknowledgement_status === \"No\";\n          }),\n          head: 'Pending List'\n        });\n      } else if (this.state.parameter == \"dispatch\") {\n        this.setState({\n          data: this.state.data.filter(function (o) {\n            return o.Record.dispatch_details.dispatched_date === _this6.state.apidate;\n          }),\n          head: 'Dispatch List'\n        });\n      } else if (this.state.parameter == \"escalate\") {\n        this.setState({\n          data: this.state.data.filter(function (o) {\n            return o.Record.dispatch_details.escalation_remark != '';\n          }),\n          head: 'Escalate List'\n        });\n      } else if (this.state.parameter == \"today\") {\n        this.setState({\n          head: 'Todays List'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var selectedOption = this.state.selectedOption;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(PageTitle, {\n        heading: \"Dispatch List\",\n        subheading: \"\",\n        icon: \"pe-7s-notebook icon-gradient bg-mixed-hopes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"card-header-tab z-index-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-title font-size-lg text-capitalize font-weight-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"header-icon lnr-charts icon-gradient bg-happy-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \" \"), this.state.currentdate), React.createElement(\"div\", {\n        className: \"btn-actions-pane-right text-capitalize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-inline-block ml-2\",\n        style: {\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChange,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      })))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(ToolkitProvider, {\n        keyField: \"id\",\n        data: this.state.data,\n        columns: columns,\n        exportCSV: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, React.createElement(MyExportCSV, Object.assign({}, props.csvProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }), React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n          pagination: paginationFactory(pageoptions),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        })));\n      })))))), React.createElement(Rodal, {\n        visible: this.state.datepickervisible,\n        onClose: this.hidedatepicker.bind(this),\n        showMask: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Select Date\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        inline: true,\n        selected: this.state.datepickerdate,\n        onChange: function onChange(e) {\n          _this7.setState({\n            datepickerdate: e\n          });\n        },\n        calendarClassName: \"no-shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }))))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"link\",\n        onClick: this.hidedatepicker.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.setdatepickerdate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \"Yes\")))));\n    }\n  }]);\n\n  return DispatchDetails;\n}(Component);\n\nexport { DispatchDetails as default };","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/SolarDashboards/DispatchDetails/index.js"],"names":["React","Component","Fragment","Row","Col","Button","CardHeader","Container","Card","CardBody","CardFooter","UncontrolledButtonDropdown","DropdownItem","DropdownMenu","DropdownToggle","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Table","Input","FormText","CardTitle","Rodal","DatePicker","VerticalTimeline","VerticalTimelineElement","BootstrapTable","filterFactory","textFilter","ReactTable","PageTitle","$","dt","dtstyle","dtresponsive","ToolkitProvider","CSVExport","paginationFactory","Select","options","value","label","MyExportCSV","props","handleClick","onExport","columns","dataField","text","style","width","customTotal","from","to","size","pageoptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","hidePageListOnlyOnePage","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","sizePerPageList","DispatchDetails","handleChange","selectedOption","today","Date","date","getDate","month","getMonth","year","getFullYear","finaldate","setState","currentdate","apidate","callAPI","setDate","showdatepicker","state","parameter","userdetails","data","criticaldata","Aknowledgedata","Dispatchdata","Escallatedata","datepickervisible","datepickerdate","onload","match","params","type","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseData","console","log","code","filter","o","Record","dispatch_details","dispatched_quantity","criticalty","head","acknowledgement_details","acknowledgement_status","dispatched_date","escalation_remark","csvProps","baseProps","hidedatepicker","bind","e","setdatepickerdate"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {\n    Row, Col,\n    Button,\n    CardHeader,\n    Container,\n    Card,\n    CardBody,\n    CardFooter,\n    UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, ModalHeader, ModalBody, ModalFooter, Form,\n    FormGroup, Label,\n    Table,\n    Input, FormText, CardTitle\n} from 'reactstrap';\n\nimport Rodal from 'rodal';\nimport DatePicker from 'react-datepicker';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ReactTable from \"react-table\";\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport $ from 'jquery';\nimport dt from 'datatables.net';\nimport dtstyle from 'datatables.net-bs4';\n//  import responsive from 'datatables.net-responsive';\nimport dtresponsive from 'datatables.net-responsive-bs4'\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nimport Select from 'react-select';\n\nconst options = [\n    { value: '1', label: 'Today' },\n    { value: '2', label: 'Yesterday' },\n    { value: '3', label: 'Select Date' },\n];\n\nconst MyExportCSV = (props) => {\n    const handleClick = () => {\n        props.onExport();\n    };\n    return (\n        <div>\n            <button className=\"btn btn-success\" onClick={handleClick}>Export to CSV</button>\n        </div>\n    );\n};\nconst columns = [\n    {\n        dataField: 'Record.date',\n        text: 'Date'\n    },\n    {\n        dataField: 'Record.vendor',\n        text: 'Vendor'\n    },\n    {\n        dataField: 'Record.part_no',\n        text: 'Part No'\n    },\n    {\n        dataField: 'Record.part_description',\n        text: 'Part Description',\n        style: {\n            width: '45%'\n        }\n    },\n    {\n        dataField: 'Record.to_supply',\n        text: 'Quantity'\n    },\n    {\n        dataField: 'Record.uom',\n        text: 'UOM'\n    },\n    {\n        dataField: 'Record.dispatch_details.dispatched_quantity',\n        text: 'Dispatch Qty'\n    },\n    {\n        dataField: 'Record.dispatch_details.dispatched_date',\n        text: 'Dispatch Date'\n    },\n    {\n        dataField: 'Record.dispatch_details.eta',\n        text: 'ETA'\n    },\n    {\n        dataField: 'Record.dispatch_details.vehicle_number',\n        text: 'Vehicle No'\n    },\n    {\n        dataField: 'Record.dispatch_details.driver_name',\n        text: 'Driver Name'\n    },\n    {\n        dataField: 'Record.dispatch_details.driver_contact_no',\n        text: 'Driver Mobile'\n    },\n];\n\nconst customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n        Showing {from} to {to} of {size} Results\n    </span>\n);\n\nconst pageoptions = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    alwaysShowAllBtns: true, // Always show next and previous button\n    withFirstAndLast: false, // Hide the going to First and Last page button\n    hideSizePerPage: false, // Hide the sizePerPage dropdown always\n    hidePageListOnlyOnePage: false, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    sizePerPageList: [\n        {\n            text: '5', value: 5\n        }, {\n            text: '10', value: 10\n        },\n        {\n            text: '50', value: 50\n        }\n    ]\n};\n\nexport default class DispatchDetails extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            parameter: '',\n            userdetails: '',\n            currentdate: '',\n            apidate: new Date(),\n            data: [],\n            criticaldata: [],\n            Aknowledgedata: [],\n            Dispatchdata: [],\n            Escallatedata: [],\n            selectedOption: null,\n            datepickervisible:false,\n            datepickerdate:new Date(),\n        };\n\n    }\n\n    componentDidMount() {\n         var onload = { value: \"1\", label: \"Today\" }\n        this.handleChange(onload)\n        this.setState({\n            parameter: this.props.match.params.type\n        }, () => {\n            this.callAPI();\n\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            parameter: props.match.params.type,\n        }, async () => {\n            this.callAPI()\n        })\n    }\n\n\n    callAPI() {\n        var today = new Date()\n        var data = {\n            'date': this.state.apidate,\n        }\n\n\n        fetch('/getInventory', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }).then((response) => response.json())\n            .then((responseData) => {\n                console.log('Dispatch Details', responseData)\n                if (responseData.code == 200) {\n                    this.setState({\n                        data: responseData.data.filter(o => o.Record.dispatch_details.dispatched_quantity != '')\n                    }, () => {\n                        //this.dataresult();\n                    });\n                } else {\n\n                }\n\n            });\n\n    }\n\n    showdatepicker() {\n        this.setState({\n            datepickervisible: true,\n        });\n    }\n\n    hidedatepicker() {\n        this.setState({datepickervisible: false});\n    }\n\n    setdatepickerdate(){\n        var dt = this.state.datepickerdate;\n        var date = new Date(dt).getDate();\n        var month = new Date(dt).getMonth() + 1;\n        var year = new Date(dt).getFullYear();\n\n        var finaldate = \"Selected Date \" + date + \"/\" + month + \"/\" + year\n        this.setState({\n            datepickervisible: false,\n            apidate:this.state.datepickerdate,\n            currentdate:finaldate\n        },()=>{\n                this.callAPI()\n        });\n\n    }\n\n     handleChange = (selectedOption) => {\n\n        var today = new Date();\n        var date = new Date().getDate();\n        var month = new Date().getMonth() + 1;\n        var year = new Date().getFullYear();\n\n        var finaldate = \"Today \" + date + \"/\" + month + \"/\" + year\n        if (selectedOption.value == 1) {\n            this.setState({\n                currentdate: finaldate,\n                apidate: today\n            }, () => {\n                this.callAPI()\n            })\n        } else if (selectedOption.value == 2) {\n            finaldate = \"Yesterday \" + (date - 1) + \"/\" + month + \"/\" + year\n            this.setState({\n                currentdate: finaldate,\n                apidate: today.setDate(today.getDate() - 1)\n            }, () => {\n                this.callAPI()\n            })\n        }else if(selectedOption.value ==3){\n            this.showdatepicker();\n        }\n        //alert(JSON.stringify(selectedOption));\n        this.setState({ selectedOption });\n    };\n\n    dataresult() {\n\n        if (this.state.parameter == \"critical\") {\n            this.setState({\n                data: this.state.data.filter(o => o.Record.criticalty === \"Critical\"),\n                head: 'Critical List'\n\n            })\n        } else if (this.state.parameter == \"pendingack\") {\n            this.setState({\n                data: this.state.data.filter(o => o.Record.acknowledgement_details.acknowledgement_status === \"No\"),\n                head: 'Pending List'\n\n            })\n        } else if (this.state.parameter == \"dispatch\") {\n            this.setState({\n                data: this.state.data.filter(o => o.Record.dispatch_details.dispatched_date === this.state.apidate),\n                head: 'Dispatch List'\n\n            })\n\n        } else if (this.state.parameter == \"escalate\") {\n\n            this.setState({\n                data: this.state.data.filter(o => o.Record.dispatch_details.escalation_remark != ''),\n                head: 'Escalate List'\n\n            })\n\n        } else if (this.state.parameter == \"today\") {\n\n            this.setState({\n                head: 'Todays List'\n\n            })\n\n        }\n    }\n\n    render() {\nconst { selectedOption } = this.state;\n        return (\n            <Fragment>\n                <PageTitle\n                    heading='Dispatch List'\n                    subheading=\"\"\n                    icon=\"pe-7s-notebook icon-gradient bg-mixed-hopes\"\n                />\n                <Container fluid>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardHeader className=\"card-header-tab z-index-6\">\n                                    <div\n                                        className=\"card-header-title font-size-lg text-capitalize font-weight-normal\">\n                                        <i className=\"header-icon lnr-charts icon-gradient bg-happy-green\"> </i>\n                                        {this.state.currentdate}\n                                    </div>\n                                    <div className=\"btn-actions-pane-right text-capitalize\">\n                                        <span className=\"d-inline-block ml-2\" style={{ width: 200 }}>\n                                            <Select\n                                                value={selectedOption}\n                                                onChange={this.handleChange}\n                                                options={options}\n                                            />\n                                        </span>\n                                    </div>\n                                </CardHeader>\n                                <CardBody>\n\n                                    {/* <Table  responsive striped bordered>\n                                        <thead>\n                                        <tr>\n                                            <th className=\"text-center\">SNO</th>\n                                            <th className=\"text-center\">PO No</th>\n                                            <th className=\"text-center\">Part No</th>\n                                            <th className=\"text-center\">Date</th>\n                                            <th className=\"text-center\">Part Description</th>\n                                            <th className=\"text-center\">UOM</th>\n                                            <th className=\"text-center\">Max Stock</th>\n                                            <th className=\"text-center\">Min Stock</th>\n                                            <th className=\"text-center\">Opening Stock</th>\n                                            <th className=\"text-center\">Consumption/Day</th>\n                                            <th className=\"text-center\">Consumption Next 3 days</th>\n                                            <th className=\"text-center\">To Supply</th>\n                                            <th className=\"text-center\">Criticality</th>\n                                            <th className=\"text-center\">Aknowledgement</th>\n                                            <th className=\"text-center\">Remark</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.state.data.map((records, index) => (\n                                            <tr>\n                                                <td className=\"text-center\">{index+1}</td>\n                                                <td className=\"text-center\">{records.Record.purchase_order}</td>\n                                                <td className=\"text-center\">{records.Record.part_no}</td>\n                                                <td className=\"text-center\">{records.Record.date}</td>\n                                                <td className=\"text-center\">{records.Record.part_description}</td>\n                                                <td className=\"text-center\">{records.Record.uom}</td>\n                                                <td className=\"text-center\">{records.Record.max_stock}</td>\n                                                <td className=\"text-center\">{records.Record.min_stock}</td>\n                                                <td className=\"text-center\">{records.Record.opening_stock}</td>\n                                                <td className=\"text-center\">{records.Record.consumption_per_day}</td>\n                                                <td className=\"text-center\">{records.Record.consumption_per_3d}</td>\n                                                <td className=\"text-center\">{records.Record.to_supply}</td>\n                                                <td className=\"text-center\">{records.Record.criticalty}</td>\n                                                <td className=\"text-center\">{records.Record.acknowledgement_details.acknowledgement_status}</td>\n                                                <td className=\"text-center\">{records.Record.remark}</td>\n                                            </tr>\n                                        ))}\n                                        </tbody>\n                                    </Table> */}\n                                    <div className=\"table-responsive\">\n                                    <ToolkitProvider\n                                        keyField=\"id\"\n                                        data={this.state.data}\n                                        columns={columns}\n                                        exportCSV\n                                    >\n                                        {\n                                            props => (\n                                                <div>\n\n                                                    <MyExportCSV {...props.csvProps} />\n                                                    <hr />\n\n                                                    <BootstrapTable {...props.baseProps} pagination={paginationFactory(pageoptions)} />\n\n                                                </div>\n                                            )\n                                        }\n                                    </ToolkitProvider>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Rodal visible={this.state.datepickervisible}\n                        onClose={this.hidedatepicker.bind(this)}\n                        showMask={false}\n                    >\n                        <ModalHeader>Select Date</ModalHeader>\n                        <ModalBody>\n                        <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <div className=\"text-center\">\n                                        <DatePicker\n                                            inline\n                                            selected={this.state.datepickerdate}\n                                            onChange={(e) => {\n                                                            this.setState({\n                                                                datepickerdate: e\n                                                            })\n                                                        }}\n                                            calendarClassName=\"no-shadow\"\n                                        />\n                                    </div>\n                                </CardBody>\n                        </Card>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"link\" onClick={this.hidedatepicker.bind(this)}>Cancel</Button>\n                            <Button color=\"primary\" onClick={this.setdatepickerdate.bind(this)}>Yes</Button>\n                        </ModalFooter> \n                    </Rodal>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}