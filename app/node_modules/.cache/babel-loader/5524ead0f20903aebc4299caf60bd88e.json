{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/Practice-APP/app/src/DemoPages/SolarDashboards/CriticalBreakDown/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Row, Col, Button, CardHeader, Container, Card, CardBody, CardFooter, UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, CardTitle, Nav, NavItem, NavLink } from 'reactstrap';\nimport Rodal from 'rodal';\nimport DatePicker from 'react-datepicker';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport CountUp from 'react-countup';\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { Sparklines, SparklinesCurve } from 'react-sparklines';\nimport Ionicon from 'react-ionicons';\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport { faAngleUp, faAngleDown, faCalendarAlt, faEllipsisH, faCheck, faTrashAlt, faBusinessTime, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport { Redirect } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nvar options = [{\n  value: '1',\n  label: 'Today'\n}, {\n  value: '2',\n  label: 'Week'\n}, {\n  value: '3',\n  label: 'Quaterly'\n}, {\n  value: '4',\n  label: 'Yearly'\n}];\nvar yearoptions = [{\n  value: '2019',\n  label: '2019'\n}, {\n  value: '2020',\n  label: '2020'\n}];\n\nvar CriticalBreakDown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CriticalBreakDown, _Component);\n\n  function CriticalBreakDown() {\n    var _this;\n\n    _classCallCheck(this, CriticalBreakDown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CriticalBreakDown).call(this));\n    _this.state = {\n      head: \"Critical Analysis\",\n      parameter: '',\n      datalabels: ['Today'],\n      datavalues: [4]\n    };\n    return _this;\n  }\n\n  _createClass(CriticalBreakDown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('Date', this.props.match.params);\n      this.setState({\n        parameter: this.props.match.params.type\n      }, function () {\n        _this2.callApi();\n      });\n    }\n  }, {\n    key: \"callApi\",\n    value: function callApi() {\n      var _this3 = this;\n\n      var data = {};\n\n      if (this.state.parameter.indexOf(',') > -1) {\n        var daysarr = this.state.parameter.split(',');\n        data = {\n          date: '',\n          days: daysarr,\n          key: 'year'\n        };\n      } else {\n        data = {\n          date: this.state.parameter,\n          days: '',\n          key: ''\n        };\n      }\n\n      fetch('/criticalInnerData', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        console.log('Breakdown Response', responseData);\n\n        if (responseData.code == 200) {\n          _this3.setState({\n            datalabels: responseData.dataLabel,\n            datavalues: responseData.filterData\n          }, function () {// this.dataresult();\n          });\n        } else {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = {\n        labels: this.state.datalabels,\n        datasets: [{\n          label: 'No. of Critical Product',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          borderCapStyle: 'round',\n          data: this.state.datavalues\n        }]\n      };\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(PageTitle, {\n        heading: \"BreakDown Analysis\",\n        subheading: \"\",\n        icon: \"pe-7s-bandaid icon-gradient bg-amy-crisp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"card-header-tab \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-title font-size-lg text-capitalize font-weight-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"header-icon lnr-charts icon-gradient bg-happy-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \" \"), this.state.currentdate), React.createElement(\"div\", {\n        className: \"btn-actions-pane-right text-capitalize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-inline-block ml-2\",\n        style: {\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: data,\n        width: 100,\n        height: 50,\n        options: {\n          maintainAspectRatio: true,\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return CriticalBreakDown;\n}(Component);\n\nexport { CriticalBreakDown as default };","map":{"version":3,"sources":["/home/ravi/Desktop/Practice-APP/app/src/DemoPages/SolarDashboards/CriticalBreakDown/index.js"],"names":["React","Component","Fragment","Row","Col","Button","CardHeader","Container","Card","CardBody","CardFooter","UncontrolledButtonDropdown","DropdownItem","DropdownMenu","DropdownToggle","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormText","CardTitle","Nav","NavItem","NavLink","Rodal","DatePicker","VerticalTimeline","VerticalTimelineElement","PerfectScrollbar","BootstrapTable","filterFactory","textFilter","CountUp","ToolkitProvider","CSVExport","paginationFactory","Sparklines","SparklinesCurve","Ionicon","PageTitle","faAngleUp","faAngleDown","faCalendarAlt","faEllipsisH","faCheck","faTrashAlt","faBusinessTime","faTimes","FontAwesomeIcon","Select","moment","Redirect","Bar","options","value","label","yearoptions","CriticalBreakDown","state","head","parameter","datalabels","datavalues","console","log","props","match","params","setState","type","callApi","data","indexOf","daysarr","split","date","days","key","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseData","code","dataLabel","filterData","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","borderCapStyle","currentdate","width","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {\n    Row, Col,\n    Button,\n    CardHeader,\n    Container,\n    Card,\n    CardBody,\n    CardFooter,\n    UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, ModalHeader, ModalBody, ModalFooter, Form,\n    FormGroup, Label,\n    Input, FormText, CardTitle,\n    Nav,\n    NavItem,\n    NavLink,\n} from 'reactstrap';\n\nimport Rodal from 'rodal';\nimport DatePicker from 'react-datepicker';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport CountUp from 'react-countup';\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport {\n    Sparklines,\n    SparklinesCurve\n} from 'react-sparklines';\n\nimport Ionicon from 'react-ionicons';\n\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\n\nimport {\n    faAngleUp,\n    faAngleDown,\n    faCalendarAlt,\n    faEllipsisH,\n    faCheck,\n    faTrashAlt,\n    faBusinessTime,\n    faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Select from 'react-select';\n\nimport moment from 'moment';\nimport { Redirect } from 'react-router-dom'\nimport { Bar } from 'react-chartjs-2';\n\nconst options = [\n    { value: '1', label: 'Today' },\n    { value: '2', label: 'Week' },\n    { value: '3', label: 'Quaterly' },\n    { value: '4', label: 'Yearly' },\n];\nconst yearoptions = [\n    { value: '2019', label: '2019' },\n    { value: '2020', label: '2020' },\n];\n\n\nexport default class CriticalBreakDown extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            head: \"Critical Analysis\",\n            parameter:'',\n            datalabels: ['Today'],\n            datavalues: [4],\n        };\n\n    }\n\n    componentDidMount() {\n        console.log('Date',this.props.match.params)\n        this.setState({\n            parameter:this.props.match.params.type\n        },() => {\n            this.callApi();\n        })\n    }\n\n    callApi() {\n\n    var data ={}\n\n    if (this.state.parameter.indexOf(',') > -1){\n\n        var daysarr =this.state.parameter.split(',');\n            data = {\n                date: '',\n                days: daysarr,\n                key:'year'\n            }\n\n    }else{\n\n        data = {\n            date: this.state.parameter,\n            days: '',\n            key: ''\n        }\n\n    }\n    \n        fetch('/criticalInnerData', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }).then((response) => response.json())\n            .then((responseData) => {\n                console.log('Breakdown Response', responseData)\n                if (responseData.code == 200) {\n                    this.setState({\n                        datalabels:responseData.dataLabel,\n                        datavalues: responseData.filterData\n                    }, () => {\n                        // this.dataresult();\n                    });\n                } else {\n\n                }\n\n            });\n    }\n\n    \n\n\n\n    render() {\n        const data = {\n            labels: this.state.datalabels,\n            datasets: [\n                {\n                    label: 'No. of Critical Product',\n                    backgroundColor: 'rgba(255,99,132,0.2)',\n                    borderColor: 'rgba(255,99,132,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                    hoverBorderColor: 'rgba(255,99,132,1)',\n                    borderCapStyle: 'round',\n                    data: this.state.datavalues\n                }\n            ]\n        };\n        return (\n            <Fragment>\n                <PageTitle\n                    heading= 'BreakDown Analysis'\n                    subheading=\"\"\n                    icon=\"pe-7s-bandaid icon-gradient bg-amy-crisp\"\n                />\n                <Container fluid>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardHeader className=\"card-header-tab \">\n                                    <div\n                                        className=\"card-header-title font-size-lg text-capitalize font-weight-normal\">\n                                        <i className=\"header-icon lnr-charts icon-gradient bg-happy-green\"> </i>\n                                        {this.state.currentdate}\n                                    </div>\n                                    <div className=\"btn-actions-pane-right text-capitalize\">\n                                        <span className=\"d-inline-block ml-2\" style={{ width: 200 }}>\n\n                                        </span>\n                                    </div>\n                                </CardHeader>\n                                <CardBody>\n                                    <div>\n                                        <Bar\n                                            data={data}\n                                            width={100}\n                                            height={50}\n                                            options={{\n                                                maintainAspectRatio: true,\n                                                scales: {\n                                                    yAxes: [{\n                                                        ticks: {\n                                                          beginAtZero: true  \n                                                        }\n                                                    }]\n                                                }\n                                            }}\n                                        />\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}