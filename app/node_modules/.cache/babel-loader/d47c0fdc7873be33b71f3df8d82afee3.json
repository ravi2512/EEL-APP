{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Components/ProgressBar/Examples/Advanced/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { Progress } from 'react-sweet-progress';\nimport { Row, Col, Card, CardBody, CardTitle, Button, ButtonGroup, Container } from 'reactstrap';\nimport Circle from 'react-circle';\n\nvar ProgressBarAdvancedExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProgressBarAdvancedExample, _Component);\n\n  function ProgressBarAdvancedExample(props) {\n    var _this;\n\n    _classCallCheck(this, ProgressBarAdvancedExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProgressBarAdvancedExample).call(this, props));\n\n    _this.onDecClick = function () {\n      _this.setState({\n        percent: _this.state.percent - 10 > 0 ? _this.state.percent - 10 : 0\n      });\n    };\n\n    _this.onIncClick = function () {\n      _this.setState({\n        percent: _this.state.percent + 10 < 100 ? _this.state.percent + 10 : 100\n      });\n    };\n\n    _this.state = {\n      percent: props.percent || 55\n    };\n    return _this;\n  }\n\n  _createClass(ProgressBarAdvancedExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(ReactCSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Colors\"), React.createElement(Progress, {\n        className: \"mb-3\",\n        percent: this.state.percent,\n        theme: this.props.theme,\n        width: this.props.width,\n        strokeWidth: this.props.strokeWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Progress, {\n        className: \"mb-3\",\n        percent: this.state.percent,\n        status: \"success\",\n        theme: this.props.theme,\n        width: this.props.width,\n        strokeWidth: this.props.strokeWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Progress, {\n        percent: this.state.percent,\n        status: \"error\",\n        theme: this.props.theme,\n        width: this.props.width,\n        strokeWidth: this.props.strokeWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onDecClick,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"-\"), React.createElement(Button, {\n        onClick: this.onIncClick,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"+\"))))), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Colors\"), React.createElement(Progress, {\n        percent: this.state.percent,\n        width: this.props.width,\n        strokeWidth: this.props.strokeWidth,\n        theme: {\n          error: {\n            symbol: this.state.percent + '%',\n            trailColor: 'pink',\n            color: 'red'\n          },\n          default: {\n            symbol: this.state.percent + '%',\n            trailColor: 'lightblue',\n            color: 'blue'\n          },\n          active: {\n            symbol: this.state.percent + '%',\n            trailColor: 'yellow',\n            color: 'orange'\n          },\n          success: {\n            symbol: this.state.percent + '%',\n            trailColor: 'lime',\n            color: 'green'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onDecClick,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"-\"), React.createElement(Button, {\n        onClick: this.onIncClick,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"+\"))))), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Progress Circle Alternate\"), React.createElement(Row, {\n        className: \"text-center mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Circle, {\n        animate: true // Boolean: Animated/Static progress\n        ,\n        animationDuration: \"1s\" // String: Length of animation\n        ,\n        responsive: false // Boolean: Make SVG adapt to parent size\n        ,\n        size: \"100\" // String: Defines the size of the circle.\n        ,\n        lineWidth: \"25\" // String: Defines the thickness of the circle's stroke.\n        ,\n        progress: \"25\" // String: Update to change the progress and percentage.\n        ,\n        progressColor: \"rgb(76, 154, 255)\" // String: Color of \"progress\" portion of circle.\n        ,\n        bgColor: \"#ecedf0\" // String: Color of \"empty\" portion of circle.\n        ,\n        textColor: \"#6b778c\" // String: Color of percentage text color.\n        ,\n        textStyle: {\n          font: 'bold 4rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n\n        },\n        percentSpacing: 10 // Number: Adjust spacing of \"%\" symbol and number.\n        ,\n        roundedStroke: true // Boolean: Rounded/Flat line ends\n        ,\n        showPercentage: true // Boolean: Show/hide percentage.\n        ,\n        showPercentageSymbol: true // Boolean: Show/hide only the \"%\" symbol.\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Circle, {\n        animate: true // Boolean: Animated/Static progress\n        ,\n        animationDuration: \"1s\" // String: Length of animation\n        ,\n        responsive: false // Boolean: Make SVG adapt to parent size\n        ,\n        size: \"100\" // String: Defines the size of the circle.\n        ,\n        lineWidth: \"25\" // String: Defines the thickness of the circle's stroke.\n        ,\n        progress: \"25\" // String: Update to change the progress and percentage.\n        ,\n        progressColor: \"#d92550\" // String: Color of \"progress\" portion of circle.\n        ,\n        bgColor: \"#ecedf0\" // String: Color of \"empty\" portion of circle.\n        ,\n        textColor: \"#d92550\" // String: Color of percentage text color.\n        ,\n        textStyle: {\n          font: 'bold 3rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n\n        },\n        percentSpacing: 10 // Number: Adjust spacing of \"%\" symbol and number.\n        ,\n        roundedStroke: true // Boolean: Rounded/Flat line ends\n        ,\n        showPercentage: true // Boolean: Show/hide percentage.\n        ,\n        showPercentageSymbol: true // Boolean: Show/hide only the \"%\" symbol.\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Circle, {\n        className: \"ml-3\",\n        animate: true // Boolean: Animated/Static progress\n        ,\n        animationDuration: \"1s\" // String: Length of animation\n        ,\n        responsive: false // Boolean: Make SVG adapt to parent size\n        ,\n        size: \"60\" // String: Defines the size of the circle.\n        ,\n        lineWidth: \"20\" // String: Defines the thickness of the circle's stroke.\n        ,\n        progress: \"56\" // String: Update to change the progress and percentage.\n        ,\n        progressColor: \"rgb(76, 154, 255)\" // String: Color of \"progress\" portion of circle.\n        ,\n        bgColor: \"#ecedf0\" // String: Color of \"empty\" portion of circle.\n        ,\n        textColor: \"#6b778c\" // String: Color of percentage text color.\n        ,\n        percentSpacing: 5 // Number: Adjust spacing of \"%\" symbol and number.\n        ,\n        roundedStroke: true // Boolean: Rounded/Flat line ends\n        ,\n        showPercentage: false // Boolean: Show/hide percentage.\n        ,\n        showPercentageSymbol: false // Boolean: Show/hide only the \"%\" symbol.\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Circle, {\n        className: \"ml-3\",\n        animate: true // Boolean: Animated/Static progress\n        ,\n        animationDuration: \"1s\" // String: Length of animation\n        ,\n        responsive: false // Boolean: Make SVG adapt to parent size\n        ,\n        size: \"70\" // String: Defines the size of the circle.\n        ,\n        lineWidth: \"30\" // String: Defines the thickness of the circle's stroke.\n        ,\n        progress: \"47\" // String: Update to change the progress and percentage.\n        ,\n        progressColor: \"#f7b924\" // String: Color of \"progress\" portion of circle.\n        ,\n        bgColor: \"#ecedf0\" // String: Color of \"empty\" portion of circle.\n        ,\n        textColor: \"#ccc\" // String: Color of percentage text color.\n        ,\n        textStyle: {\n          font: 'bold 6rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\n\n        },\n        percentSpacing: 5 // Number: Adjust spacing of \"%\" symbol and number.\n        ,\n        roundedStroke: true // Boolean: Rounded/Flat line ends\n        ,\n        showPercentage: true // Boolean: Show/hide percentage.\n        ,\n        showPercentageSymbol: false // Boolean: Show/hide only the \"%\" symbol.\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Circles\"), React.createElement(Row, {\n        className: \"text-center mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        percent: this.state.percent,\n        theme: this.props.theme,\n        type: \"circle\",\n        width: 90,\n        strokeWidth: this.props.strokeWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        percent: this.state.percent,\n        status: \"success\",\n        theme: this.props.theme,\n        type: \"circle\",\n        width: 92,\n        strokeWidth: this.props.strokeWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        percent: this.state.percent,\n        status: \"error\",\n        theme: this.props.theme,\n        type: \"circle\",\n        width: 90,\n        strokeWidth: this.props.strokeWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"text-center mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onDecClick,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"-\"), React.createElement(Button, {\n        onClick: this.onIncClick,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"+\"))))), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Circle variations\"), React.createElement(Row, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        type: \"circle\",\n        width: 52,\n        percent: 62,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        type: \"circle\",\n        width: 72,\n        percent: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        type: \"circle\",\n        strokeWidth: 2,\n        percent: 70,\n        status: \"error\",\n        width: 92,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        type: \"circle\",\n        percent: 34,\n        width: 112,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return ProgressBarAdvancedExample;\n}(Component);\n\nexport { ProgressBarAdvancedExample as default };","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Components/ProgressBar/Examples/Advanced/index.js"],"names":["React","Component","Fragment","ReactCSSTransitionGroup","Progress","Row","Col","Card","CardBody","CardTitle","Button","ButtonGroup","Container","Circle","ProgressBarAdvancedExample","props","onDecClick","setState","percent","state","onIncClick","theme","width","strokeWidth","error","symbol","trailColor","color","default","active","success","font"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport {Progress} from 'react-sweet-progress';\r\nimport {\r\n    Row, Col,\r\n    Card, CardBody,\r\n    CardTitle, Button, ButtonGroup, Container\r\n} from 'reactstrap';\r\n\r\nimport Circle from 'react-circle';\r\n\r\nexport default class ProgressBarAdvancedExample extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            percent: props.percent || 55\r\n        }\r\n    }\r\n\r\n    onDecClick = () => {\r\n        this.setState({percent: this.state.percent - 10 > 0 ? this.state.percent - 10 : 0});\r\n    }\r\n\r\n    onIncClick = () => {\r\n        this.setState({percent: this.state.percent + 10 < 100 ? this.state.percent + 10 : 100});\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <ReactCSSTransitionGroup\r\n                    component=\"div\"\r\n                    transitionName=\"TabsAnimation\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={0}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Card className=\"main-card mb-3\">\r\n                                    <CardBody>\r\n                                        <CardTitle>Colors</CardTitle>\r\n                                        <Progress className=\"mb-3\"\r\n                                                  percent={this.state.percent}\r\n                                                  theme={this.props.theme}\r\n                                                  width={this.props.width}\r\n                                                  strokeWidth={this.props.strokeWidth}\r\n                                        />\r\n                                        <Progress className=\"mb-3\"\r\n                                                  percent={this.state.percent}\r\n                                                  status=\"success\"\r\n                                                  theme={this.props.theme}\r\n                                                  width={this.props.width}\r\n                                                  strokeWidth={this.props.strokeWidth}\r\n                                        />\r\n                                        <Progress\r\n                                            percent={this.state.percent}\r\n                                            status=\"error\"\r\n                                            theme={this.props.theme}\r\n                                            width={this.props.width}\r\n                                            strokeWidth={this.props.strokeWidth}\r\n                                        />\r\n                                        <div className=\"text-center mt-3\">\r\n                                            <ButtonGroup>\r\n                                                <Button onClick={this.onDecClick} color=\"primary\">-</Button>\r\n                                                <Button onClick={this.onIncClick} color=\"primary\">+</Button>\r\n                                            </ButtonGroup>\r\n                                        </div>\r\n                                    </CardBody>\r\n\r\n                                </Card>\r\n                                <Card className=\"main-card mb-3\">\r\n                                    <CardBody>\r\n                                        <CardTitle>Colors</CardTitle>\r\n                                        <Progress\r\n                                            percent={this.state.percent}\r\n                                            width={this.props.width}\r\n                                            strokeWidth={this.props.strokeWidth}\r\n                                            theme={\r\n                                                {\r\n                                                    error: {\r\n                                                        symbol: this.state.percent + '%',\r\n                                                        trailColor: 'pink',\r\n                                                        color: 'red'\r\n                                                    },\r\n                                                    default: {\r\n                                                        symbol: this.state.percent + '%',\r\n                                                        trailColor: 'lightblue',\r\n                                                        color: 'blue'\r\n                                                    },\r\n                                                    active: {\r\n                                                        symbol: this.state.percent + '%',\r\n                                                        trailColor: 'yellow',\r\n                                                        color: 'orange'\r\n                                                    },\r\n                                                    success: {\r\n                                                        symbol: this.state.percent + '%',\r\n                                                        trailColor: 'lime',\r\n                                                        color: 'green'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        />\r\n                                        <div className=\"text-center mt-3\">\r\n                                            <ButtonGroup>\r\n                                                <Button onClick={this.onDecClick} color=\"primary\">-</Button>\r\n                                                <Button onClick={this.onIncClick} color=\"primary\">+</Button>\r\n                                            </ButtonGroup>\r\n                                        </div>\r\n                                    </CardBody>\r\n\r\n                                </Card>\r\n                                <Card className=\"main-card mb-3\">\r\n                                    <CardBody>\r\n                                        <CardTitle>\r\n                                            Progress Circle Alternate\r\n                                        </CardTitle>\r\n                                        <Row className=\"text-center mb-3\">\r\n                                            <Col>\r\n                                                <Circle\r\n                                                    animate={true} // Boolean: Animated/Static progress\r\n                                                    animationDuration=\"1s\" // String: Length of animation\r\n                                                    responsive={false} // Boolean: Make SVG adapt to parent size\r\n                                                    size=\"100\" // String: Defines the size of the circle.\r\n                                                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\r\n                                                    progress=\"25\" // String: Update to change the progress and percentage.\r\n                                                    progressColor=\"rgb(76, 154, 255)\" // String: Color of \"progress\" portion of circle.\r\n                                                    bgColor=\"#ecedf0\" // String: Color of \"empty\" portion of circle.\r\n                                                    textColor=\"#6b778c\" // String: Color of percentage text color.\r\n                                                    textStyle={{\r\n                                                        font: 'bold 4rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\r\n                                                    }}\r\n                                                    percentSpacing={10} // Number: Adjust spacing of \"%\" symbol and number.\r\n                                                    roundedStroke={true} // Boolean: Rounded/Flat line ends\r\n                                                    showPercentage={true} // Boolean: Show/hide percentage.\r\n                                                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Circle\r\n                                                    animate={true} // Boolean: Animated/Static progress\r\n                                                    animationDuration=\"1s\" // String: Length of animation\r\n                                                    responsive={false} // Boolean: Make SVG adapt to parent size\r\n                                                    size=\"100\" // String: Defines the size of the circle.\r\n                                                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\r\n                                                    progress=\"25\" // String: Update to change the progress and percentage.\r\n                                                    progressColor=\"#d92550\" // String: Color of \"progress\" portion of circle.\r\n                                                    bgColor=\"#ecedf0\" // String: Color of \"empty\" portion of circle.\r\n                                                    textColor=\"#d92550\" // String: Color of percentage text color.\r\n                                                    textStyle={{\r\n                                                        font: 'bold 3rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\r\n                                                    }}\r\n                                                    percentSpacing={10} // Number: Adjust spacing of \"%\" symbol and number.\r\n                                                    roundedStroke={true} // Boolean: Rounded/Flat line ends\r\n                                                    showPercentage={true} // Boolean: Show/hide percentage.\r\n                                                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Circle className=\"ml-3\"\r\n                                                        animate={true} // Boolean: Animated/Static progress\r\n                                                        animationDuration=\"1s\" // String: Length of animation\r\n                                                        responsive={false} // Boolean: Make SVG adapt to parent size\r\n                                                        size=\"60\" // String: Defines the size of the circle.\r\n                                                        lineWidth=\"20\" // String: Defines the thickness of the circle's stroke.\r\n                                                        progress=\"56\" // String: Update to change the progress and percentage.\r\n                                                        progressColor=\"rgb(76, 154, 255)\" // String: Color of \"progress\" portion of circle.\r\n                                                        bgColor=\"#ecedf0\" // String: Color of \"empty\" portion of circle.\r\n                                                        textColor=\"#6b778c\" // String: Color of percentage text color.\r\n                                                        percentSpacing={5} // Number: Adjust spacing of \"%\" symbol and number.\r\n                                                        roundedStroke={true} // Boolean: Rounded/Flat line ends\r\n                                                        showPercentage={false} // Boolean: Show/hide percentage.\r\n                                                        showPercentageSymbol={false} // Boolean: Show/hide only the \"%\" symbol.\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Circle className=\"ml-3\"\r\n                                                        animate={true} // Boolean: Animated/Static progress\r\n                                                        animationDuration=\"1s\" // String: Length of animation\r\n                                                        responsive={false} // Boolean: Make SVG adapt to parent size\r\n                                                        size=\"70\" // String: Defines the size of the circle.\r\n                                                        lineWidth=\"30\" // String: Defines the thickness of the circle's stroke.\r\n                                                        progress=\"47\" // String: Update to change the progress and percentage.\r\n                                                        progressColor=\"#f7b924\" // String: Color of \"progress\" portion of circle.\r\n                                                        bgColor=\"#ecedf0\" // String: Color of \"empty\" portion of circle.\r\n                                                        textColor=\"#ccc\" // String: Color of percentage text color.\r\n                                                        textStyle={{\r\n                                                            font: 'bold 6rem Helvetica, Arial, sans-serif' // CSSProperties: Custom styling for percentage.\r\n                                                        }}\r\n                                                        percentSpacing={5} // Number: Adjust spacing of \"%\" symbol and number.\r\n                                                        roundedStroke={true} // Boolean: Rounded/Flat line ends\r\n                                                        showPercentage={true} // Boolean: Show/hide percentage.\r\n                                                        showPercentageSymbol={false} // Boolean: Show/hide only the \"%\" symbol.\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <Card className=\"main-card mb-3\">\r\n                                    <CardBody>\r\n                                        <CardTitle>Circles</CardTitle>\r\n                                        <Row className=\"text-center mb-3\">\r\n                                            <Col>\r\n                                                <Progress\r\n                                                    percent={this.state.percent}\r\n                                                    theme={this.props.theme}\r\n                                                    type=\"circle\"\r\n                                                    width={90}\r\n                                                    strokeWidth={this.props.strokeWidth}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Progress\r\n                                                    percent={this.state.percent}\r\n                                                    status=\"success\"\r\n                                                    theme={this.props.theme}\r\n                                                    type=\"circle\"\r\n                                                    width={92}\r\n                                                    strokeWidth={this.props.strokeWidth}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Progress\r\n                                                    percent={this.state.percent}\r\n                                                    status=\"error\"\r\n                                                    theme={this.props.theme}\r\n                                                    type=\"circle\"\r\n                                                    width={90}\r\n                                                    strokeWidth={this.props.strokeWidth}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div className=\"text-center mt-3\">\r\n                                            <ButtonGroup>\r\n                                                <Button onClick={this.onDecClick} color=\"primary\">-</Button>\r\n                                                <Button onClick={this.onIncClick} color=\"primary\">+</Button>\r\n                                            </ButtonGroup>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                <Card className=\"main-card mb-3\">\r\n                                    <CardBody>\r\n                                        <CardTitle>Circle variations</CardTitle>\r\n                                        <Row className=\"text-center\">\r\n                                            <Col>\r\n                                                <Progress\r\n                                                    type=\"circle\"\r\n                                                    width={52}\r\n                                                    percent={62}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Progress\r\n                                                    type=\"circle\"\r\n                                                    width={72}\r\n                                                    percent={23}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Progress\r\n                                                    type=\"circle\"\r\n                                                    strokeWidth={2}\r\n                                                    percent={70}\r\n                                                    status=\"error\"\r\n                                                    width={92}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Progress\r\n                                                    type=\"circle\"\r\n                                                    percent={34}\r\n                                                    width={112}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ReactCSSTransitionGroup>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}