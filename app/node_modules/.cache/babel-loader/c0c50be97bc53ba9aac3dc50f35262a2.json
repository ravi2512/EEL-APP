{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Elements/ScreenVisibility/Examples/Fade.js\";\nimport React, { Fragment } from 'react';\nimport cx from 'classnames';\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nvar lists = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\nvar FadeVisibility =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FadeVisibility, _React$Component);\n\n  function FadeVisibility(props) {\n    var _this;\n\n    _classCallCheck(this, FadeVisibility);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FadeVisibility).call(this, props));\n    _this.state = {\n      getElement: null\n    };\n    return _this;\n  }\n\n  _createClass(FadeVisibility, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState(function () {\n        return {\n          getElement: document.getElementById(\"sample\")\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var containmentDOMRect = this.state.getElement ? this.state.getElement : null;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"sample\",\n        className: \"scroll-area-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(PerfectScrollbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        flush: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, lists.map(function (list) {\n        return containmentDOMRect ? React.createElement(VisibilitySensor, {\n          key: list,\n          containment: containmentDOMRect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, function (_ref) {\n          var isVisible = _ref.isVisible;\n          return React.createElement(ListGroupItem, {\n            className: cx(\"animated\", {\n              'fadeIn': isVisible,\n              'fadeOut': !isVisible\n            }),\n            style: {\n              background: isVisible ? \"transparent\" : \"#f65ca2\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \"I am #\", list);\n        }) : null;\n      })))));\n    }\n  }]);\n\n  return FadeVisibility;\n}(React.Component);\n\nexport { FadeVisibility as default };","map":{"version":3,"sources":["/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Elements/ScreenVisibility/Examples/Fade.js"],"names":["React","Fragment","cx","VisibilitySensor","ListGroup","ListGroupItem","PerfectScrollbar","lists","FadeVisibility","props","state","getElement","setState","document","getElementById","containmentDOMRect","map","list","isVisible","background","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,SACIC,SADJ,EACeC,aADf,QAEO,YAFP;AAIA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,IAAMC,KAAK,GAAG,CACV,CADU,EAEV,CAFU,EAGV,CAHU,EAIV,CAJU,EAKV,CALU,EAMV,CANU,EAOV,CAPU,EAQV,CARU,EASV,CATU,EAUV,EAVU,EAWV,EAXU,EAYV,EAZU,EAaV,EAbU,EAcV,EAdU,EAeV,EAfU,EAgBV,EAhBU,EAiBV,EAjBU,EAkBV,EAlBU,EAmBV,EAnBU,EAoBV,EApBU,CAAd;;IAsBqBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAHe;AAMlB;;;;wCAEmB;AAChB,WAAKC,QAAL,CAAc,YAAM;AAChB,eAAO;AACHD,UAAAA,UAAU,EAAEE,QAAQ,CAACC,cAAT,CAAwB,QAAxB;AADT,SAAP;AAGH,OAJD;AAKH;;;6BAEQ;AACL,UAAIC,kBAAkB,GAAG,KAAKL,KAAL,CAAWC,UAAX,GACnB,KAAKD,KAAL,CAAWC,UADQ,GAEnB,IAFN;AAIA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,KAAK,CAACS,GAAN,CAAU,UAAAC,IAAI,EAAI;AACf,eAAOF,kBAAkB,GACrB,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEE,IAAvB;AAA6B,UAAA,WAAW,EAAEF,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,gBAAiB;AAAA,cAAfG,SAAe,QAAfA,SAAe;AACd,iBACI,oBAAC,aAAD;AAAe,YAAA,SAAS,EAAEhB,EAAE,CAAC,UAAD,EAAa;AACrC,wBAAUgB,SAD2B;AAErC,yBAAW,CAACA;AAFyB,aAAb,CAA5B;AAIe,YAAA,KAAK,EAAE;AACHC,cAAAA,UAAU,EAAED,SAAS,GAAG,aAAH,GAAmB;AADrC,aAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQWD,IARX,CADJ;AAYH,SAdL,CADqB,GAiBrB,IAjBJ;AAkBH,OAnBA,CADL,CADJ,CADJ,CADJ,CADJ;AA8BH;;;;EApDuCjB,KAAK,CAACoB,S;;SAA7BZ,c","sourcesContent":["import React, {Fragment} from 'react';\r\n\r\nimport cx from 'classnames';\r\n\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport {\r\n    ListGroup, ListGroupItem\r\n} from 'reactstrap';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst lists = [\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    13,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    20\r\n];\r\nexport default class FadeVisibility extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            getElement: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(() => {\r\n            return {\r\n                getElement: document.getElementById(\"sample\"),\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var containmentDOMRect = this.state.getElement\r\n            ? this.state.getElement\r\n            : null;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div id=\"sample\" className=\"scroll-area-md\">\r\n                    <PerfectScrollbar>\r\n                        <ListGroup flush>\r\n                            {lists.map(list => {\r\n                                return containmentDOMRect ? (\r\n                                    <VisibilitySensor key={list} containment={containmentDOMRect}>\r\n                                        {({isVisible}) => {\r\n                                            return (\r\n                                                <ListGroupItem className={cx(\"animated\", {\r\n                                                    'fadeIn': isVisible,\r\n                                                    'fadeOut': !isVisible\r\n                                                })}\r\n                                                               style={{\r\n                                                                   background: isVisible ? \"transparent\" : \"#f65ca2\",\r\n                                                               }}\r\n                                                >\r\n                                                    I am #{list}\r\n                                                </ListGroupItem>\r\n                                            );\r\n                                        }}\r\n                                    </VisibilitySensor>\r\n                                ) : null;\r\n                            })}\r\n                        </ListGroup>\r\n                    </PerfectScrollbar>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}