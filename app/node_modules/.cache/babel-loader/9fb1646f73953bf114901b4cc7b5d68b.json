{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/EEL-APP/app/src/DemoPages/SolarDashboards/WeeklyPlan/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Row, Col, Button, CardHeader, Container, Card, CardBody, CardFooter, UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText, CardTitle } from 'reactstrap';\nimport Rodal from 'rodal';\nimport DatePicker from 'react-datepicker';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport Select from 'react-select';\nvar options = [{\n  value: '1',\n  label: 'Today'\n}, {\n  value: '2',\n  label: 'Yesterday'\n}, {\n  value: '3',\n  label: 'Select Date'\n}];\n\nvar MyExportCSV = function MyExportCSV(props) {\n  var handleClick = function handleClick() {\n    props.onExport();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Export to CSV\"));\n};\n\nvar customTotal = function customTotal(from, to, size) {\n  return React.createElement(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Showing \", from, \" to \", to, \" of \", size, \" Results\");\n};\n\nvar pageoptions = {\n  paginationSize: 4,\n  pageStartIndex: 1,\n  alwaysShowAllBtns: true,\n  // Always show next and previous button\n  withFirstAndLast: false,\n  // Hide the going to First and Last page button\n  hideSizePerPage: false,\n  // Hide the sizePerPage dropdown always\n  hidePageListOnlyOnePage: false,\n  // Hide the pagination list when only one page\n  firstPageText: 'First',\n  prePageText: 'Back',\n  nextPageText: 'Next',\n  lastPageText: 'Last',\n  nextPageTitle: 'First page',\n  prePageTitle: 'Pre page',\n  firstPageTitle: 'Next page',\n  lastPageTitle: 'Last page',\n  showTotal: true,\n  paginationTotalRenderer: customTotal,\n  sizePerPageList: [{\n    text: '100',\n    value: 100\n  }, {\n    text: '150',\n    value: 150\n  }]\n};\n\nvar WeeklyCards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeeklyCards, _Component);\n\n  function WeeklyCards() {\n    var _this;\n\n    _classCallCheck(this, WeeklyCards);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeeklyCards).call(this));\n\n    _this.handleChange = function (selectedOption) {\n      var today = new Date();\n      var date = new Date().getDate();\n      var month = new Date().getMonth() + 1;\n      var year = new Date().getFullYear();\n      var finaldate = \"Today \" + date + \"/\" + month + \"/\" + year;\n\n      if (selectedOption.value == 1) {\n        _this.setState({\n          currentdate: finaldate,\n          apidate: today\n        }, function () {\n          _this.callbApi();\n        });\n      } else if (selectedOption.value == 2) {\n        finaldate = \"Yesterday \" + (date - 1) + \"/\" + month + \"/\" + year;\n\n        _this.setState({\n          currentdate: finaldate,\n          apidate: today.setDate(today.getDate() - 1)\n        }, function () {\n          _this.callbApi();\n        });\n      } else if (selectedOption.value == 3) {\n        _this.showdatepicker();\n      } //alert(JSON.stringify(selectedOption));\n\n\n      _this.setState({\n        selectedOption: selectedOption\n      });\n    };\n\n    _this.state = {\n      userdetails: '',\n      data: [],\n      apidate: new Date(),\n      selectedOption: null,\n      datepickervisible: false,\n      datepickerdate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(WeeklyCards, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var onload = {\n        value: \"1\",\n        label: \"Today\"\n      };\n      this.handleChange(onload);\n      this.setState({\n        userdetails: JSON.parse(localStorage.getItem('user_data'))\n      }, function () {\n        _this2.callbApi();\n      });\n    }\n  }, {\n    key: \"callbApi\",\n    value: function callbApi() {\n      var _this3 = this;\n\n      var data = {\n        'colVal': this.state.userdetails.user_id,\n        'date': this.state.apidate\n      };\n      console.log('userdeatils in Weekly plan', this.state.userdetails);\n      fetch('/getUserData', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        console.log('Weekly details', responseData);\n\n        if (responseData.code == 200) {\n          _this3.setState({\n            data: responseData.user_data\n          });\n        } else {}\n      });\n    }\n  }, {\n    key: \"showdatepicker\",\n    value: function showdatepicker() {\n      this.setState({\n        datepickervisible: true\n      });\n    }\n  }, {\n    key: \"hidedatepicker\",\n    value: function hidedatepicker() {\n      this.setState({\n        datepickervisible: false\n      });\n    }\n  }, {\n    key: \"setdatepickerdate\",\n    value: function setdatepickerdate() {\n      var _this4 = this;\n\n      var dt = this.state.datepickerdate;\n      var date = new Date(dt).getDate();\n      var month = new Date(dt).getMonth() + 1;\n      var year = new Date(dt).getFullYear();\n      var finaldate = \"Selected Date \" + date + \"/\" + month + \"/\" + year;\n      this.setState({\n        datepickervisible: false,\n        apidate: this.state.datepickerdate,\n        currentdate: finaldate\n      }, function () {\n        _this4.callbApi();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var columns = [{\n        dataField: 'Record.date',\n        text: 'Date',\n        sort: true\n      }, {\n        dataField: 'Record.inventory_type',\n        text: 'Procurement Type',\n        sort: true\n      }, {\n        dataField: 'Record.part_no',\n        text: 'Part No',\n        sort: true\n      }, {\n        dataField: 'Record.part_description',\n        text: 'Part Description',\n        sort: true\n      }, {\n        dataField: 'Record.uom',\n        text: 'UOM',\n        sort: true\n      }, {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 1',\n        sort: true\n      }, {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 2',\n        sort: true\n      }, {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 3',\n        sort: true\n      }, {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 4',\n        sort: true\n      }, {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 5',\n        sort: true\n      }, {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 6',\n        sort: true\n      }, {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 7',\n        sort: true\n      }];\n      var defaultSorted = [{\n        dataField: 'name',\n        order: 'desc'\n      }];\n      var selectedOption = this.state.selectedOption;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(PageTitle, {\n        heading: \"Weekly Report\",\n        subheading: \"\",\n        icon: \"pe-7s-notebook icon-gradient bg-mixed-hopes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"card-header-tab z-index-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-title font-size-lg text-capitalize font-weight-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"header-icon lnr-charts icon-gradient bg-happy-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \" \"), this.state.currentdate), React.createElement(\"div\", {\n        className: \"btn-actions-pane-right text-capitalize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-inline-block ml-2\",\n        style: {\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChange,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(ToolkitProvider, {\n        keyField: \"id\",\n        data: this.state.data,\n        columns: columns,\n        exportCSV: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(MyExportCSV, Object.assign({}, props.csvProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }), React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n          pagination: paginationFactory(pageoptions),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        })));\n      })))))), React.createElement(Rodal, {\n        visible: this.state.datepickervisible,\n        onClose: this.hidedatepicker.bind(this),\n        showMask: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Select Date\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        inline: true,\n        selected: this.state.datepickerdate,\n        onChange: function onChange(e) {\n          _this5.setState({\n            datepickerdate: e\n          });\n        },\n        calendarClassName: \"no-shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }))))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"link\",\n        onClick: this.hidedatepicker.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.setdatepickerdate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"Yes\")))));\n    }\n  }]);\n\n  return WeeklyCards;\n}(Component);\n\nexport { WeeklyCards as default };","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/SolarDashboards/WeeklyPlan/index.js"],"names":["React","Component","Fragment","Row","Col","Button","CardHeader","Container","Card","CardBody","CardFooter","UncontrolledButtonDropdown","DropdownItem","DropdownMenu","DropdownToggle","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormText","CardTitle","Rodal","DatePicker","VerticalTimeline","VerticalTimelineElement","BootstrapTable","ToolkitProvider","CSVExport","paginationFactory","filterFactory","textFilter","PageTitle","Select","options","value","label","MyExportCSV","props","handleClick","onExport","customTotal","from","to","size","pageoptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","hidePageListOnlyOnePage","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","sizePerPageList","text","WeeklyCards","handleChange","selectedOption","today","Date","date","getDate","month","getMonth","year","getFullYear","finaldate","setState","currentdate","apidate","callbApi","setDate","showdatepicker","state","userdetails","data","datepickervisible","datepickerdate","onload","JSON","parse","localStorage","getItem","user_id","console","log","fetch","method","headers","Accept","body","stringify","then","response","json","responseData","code","user_data","dt","columns","dataField","sort","defaultSorted","order","width","csvProps","baseProps","hidedatepicker","bind","e","setdatepickerdate"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {\n    Row, Col,\n    Button,\n    CardHeader,\n    Container,\n    Card,\n    CardBody,\n    CardFooter,\n    UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle,ModalHeader, ModalBody, ModalFooter,Form,\n    FormGroup, Label,\n    Input, FormText,CardTitle\n} from 'reactstrap';\n\nimport Rodal from 'rodal';\nimport DatePicker from 'react-datepicker';\nimport {VerticalTimeline, VerticalTimelineElement} from 'react-vertical-timeline-component';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, {textFilter} from 'react-bootstrap-table2-filter';\n\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\n\nimport Select from 'react-select';\n\nconst options = [\n    {value: '1', label: 'Today'},\n    {value: '2', label: 'Yesterday'},\n    {value: '3', label: 'Select Date'},\n];\n\nconst MyExportCSV = (props) => {\n    const handleClick = () => {\n        props.onExport();\n    };\n    return (\n        <div>\n            <button className=\"btn btn-success\" onClick={handleClick}>Export to CSV</button>\n        </div>\n    );\n};\n\nconst customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n        Showing {from} to {to} of {size} Results\n    </span>\n);\n\nconst pageoptions = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    alwaysShowAllBtns: true, // Always show next and previous button\n    withFirstAndLast: false, // Hide the going to First and Last page button\n    hideSizePerPage: false, // Hide the sizePerPage dropdown always\n    hidePageListOnlyOnePage: false, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    sizePerPageList: [\n        {\n            text: '100', value: 100\n        }, {\n            text: '150', value: 150\n        },\n    ]\n};\n\nexport default class WeeklyCards extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            userdetails:'',\n            data:[],\n            apidate:new Date(),\n            selectedOption: null,\n            datepickervisible:false,\n            datepickerdate:new Date(),\n            };\n\n    }\n\n    componentDidMount() {\n        var onload = { value: \"1\", label: \"Today\" }\n        this.handleChange(onload)\n        this.setState({\n            userdetails: JSON.parse(localStorage.getItem('user_data'))\n\n        }, () => {\n            this.callbApi()\n        });  \n     }\n\n  callbApi() {\n\n         var data={\n            'colVal':this.state.userdetails.user_id,\n            'date': this.state.apidate\n        }\n        console.log('userdeatils in Weekly plan',this.state.userdetails);\n        \n        fetch('/getUserData', {\n        method: 'POST',\n        headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        },\n        body:JSON.stringify(data),\n        }).then((response) => response.json())\n        .then((responseData) => {\n        console.log('Weekly details',responseData)\n        if(responseData.code == 200){\n            this.setState({\n                data:responseData.user_data\n            });\n        }else {\n            \n        }\n    });\n\n  }\n\n\n  showdatepicker() {\n        this.setState({\n            datepickervisible: true,\n        });\n    }\n\n    hidedatepicker() {\n        this.setState({datepickervisible: false});\n    }\n\n    setdatepickerdate(){\n         var dt = this.state.datepickerdate;\n        var date = new Date(dt).getDate();\n        var month = new Date(dt).getMonth() + 1;\n        var year = new Date(dt).getFullYear();\n\n        var finaldate = \"Selected Date \" + date + \"/\" + month + \"/\" + year\n        this.setState({\n            datepickervisible: false,\n            apidate:this.state.datepickerdate,\n            currentdate:finaldate\n        },()=>{\n                this.callbApi()\n        });\n\n    }\n\n  handleChange = (selectedOption) => {\n\n    var today = new Date();\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1; \n    var year = new Date().getFullYear();\n\n    var finaldate =\"Today \"+date+\"/\"+month+\"/\"+year\n    if(selectedOption.value ==1){\n        this.setState({\n            currentdate:finaldate,\n            apidate:today\n        },()=>{\n            this.callbApi()\n        })\n    }else if(selectedOption.value ==2){\n        finaldate =\"Yesterday \"+(date-1)+\"/\"+month+\"/\"+year\n        this.setState({\n            currentdate:finaldate,\n            apidate:today.setDate(today.getDate()-1)\n        },()=>{\n            this.callbApi()\n        })\n    }else if(selectedOption.value ==3){\n            this.showdatepicker();\n        }\n    //alert(JSON.stringify(selectedOption));\n    this.setState({selectedOption});\n};\n\n    render() {\n        const columns = [\n     {\n        dataField: 'Record.date',\n        text: 'Date',\n        sort: true\n    },\n     {\n        dataField: 'Record.inventory_type',\n        text: 'Procurement Type',\n        sort: true\n    },\n    {\n        dataField: 'Record.part_no',\n        text: 'Part No',\n        sort: true\n    },\n    {\n        dataField: 'Record.part_description',\n        text: 'Part Description',\n        sort: true,\n    },\n    {\n        dataField: 'Record.uom',\n        text: 'UOM',\n        sort: true\n    },\n    {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 1',\n        sort: true\n    },\n    {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 2',\n        sort: true\n    },\n    {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 3',\n        sort: true,\n    },\n    {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 4',\n        sort: true,\n    },\n     {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 5',\n        sort: true,\n    },\n     {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 6',\n        sort: true,\n    },\n     {\n        dataField: 'Record.weekly_plan.day_1',\n        text: 'Day 7',\n        sort: true,\n    },\n];\n\nconst defaultSorted = [{\n    dataField: 'name',\n    order: 'desc'\n}];\nconst {selectedOption} = this.state;\n        return (\n            <Fragment>\n                 <PageTitle\n                heading='Weekly Report'\n                subheading=\"\"\n                icon=\"pe-7s-notebook icon-gradient bg-mixed-hopes\"\n            />\n                <Container fluid>\n                    <Row>\n                    <Col md=\"12\">\n                        <Card className=\"main-card mb-3\">\n                        <CardHeader className=\"card-header-tab z-index-6\">\n                            <div\n                                className=\"card-header-title font-size-lg text-capitalize font-weight-normal\">\n                                <i className=\"header-icon lnr-charts icon-gradient bg-happy-green\"> </i>\n                                {this.state.currentdate}\n                            </div>\n                            <div className=\"btn-actions-pane-right text-capitalize\">\n                                    <span className=\"d-inline-block ml-2\" style={{width: 200}}>\n                                        <Select\n                                            value={selectedOption}\n                                            onChange={this.handleChange}\n                                            options={options}\n                                        />\n                                    </span>\n                            </div>\n                        </CardHeader>\n                            <CardBody>\n                                <div className=\"table-responsive\">\n                                <ToolkitProvider\n                                        keyField=\"id\"\n                                        data={this.state.data}\n                                        columns={columns}\n                                        exportCSV\n                                    >\n                                        {\n                                            props => (\n                                                <div>\n\n                                                    <MyExportCSV {...props.csvProps} />\n                                                    <hr />\n\n                                                    <BootstrapTable {...props.baseProps} pagination={paginationFactory(pageoptions)} />\n\n                                                </div>\n                                            )\n                                        }\n                                    </ToolkitProvider>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Rodal visible={this.state.datepickervisible}\n                        onClose={this.hidedatepicker.bind(this)}\n                        showMask={false}\n                    >\n                        <ModalHeader>Select Date</ModalHeader>\n                        <ModalBody>\n                        <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <div className=\"text-center\">\n                                        <DatePicker\n                                            inline\n                                            selected={this.state.datepickerdate}\n                                            onChange={(e) => {\n                                                            this.setState({\n                                                                datepickerdate: e\n                                                            })\n                                                        }}\n                                            calendarClassName=\"no-shadow\"\n                                        />\n                                    </div>\n                                </CardBody>\n                        </Card>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"link\" onClick={this.hidedatepicker.bind(this)}>Cancel</Button>\n                            <Button color=\"primary\" onClick={this.setdatepickerdate.bind(this)}>Yes</Button>\n                        </ModalFooter> \n                    </Rodal>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}