{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nrequire(\"../style/DateTimeRange.css\");\n\nvar _RangeButton = _interopRequireDefault(require(\"./RangeButton\"));\n\nvar _DateTimeRangeContainer = require(\"../DateTimeRangeContainer\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar Ranges =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Ranges, _React$Component);\n\n  function Ranges(props) {\n    var _this;\n\n    _classCallCheck(this, Ranges);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Ranges).call(this, props));\n    var focused = [];\n    var ranges = Object.values(_this.props.ranges);\n\n    for (var i = 0; i < ranges.length; i++) {\n      focused.push(false);\n    }\n\n    _this.state = {\n      viewingIndex: 0,\n      focused: focused\n    };\n    _this.viewingIndexChangeCallback = _this.viewingIndexChangeCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setFocusedCallback = _this.setFocusedCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Ranges, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      // On Change of Selected Range reset viewing index to be the range index\n      if (this.props.selectedRange !== nextProps.selectedRange) {\n        this.setState({\n          viewingIndex: nextProps.selectedRange\n        });\n      }\n    }\n  }, {\n    key: \"viewingIndexChangeCallback\",\n    value: function viewingIndexChangeCallback(newIndex) {\n      // Allow a new item selected to be made\n      var length = this.state.focused.length;\n\n      if (newIndex >= 0 && newIndex < length) {\n        this.setState({\n          viewingIndex: newIndex\n        });\n      }\n    }\n  }, {\n    key: \"setFocusedCallback\",\n    value: function setFocusedCallback(index, focusedInput) {\n      // Set the focus value of indexed item, focusedInput is true or false\n      var focused = this.state.focused;\n      focused[index] = focusedInput;\n      this.setState({\n        focused: focused\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var displayI = '';\n\n      if (this.props.screenWidthToTheRight < _DateTimeRangeContainer.mobileBreakPoint) {\n        displayI = 'contents';\n      } // Map the range index and object name and value to a range button\n\n\n      return _react.default.createElement(\"div\", {\n        className: \"rangecontainer\",\n        style: {\n          display: displayI\n        }\n      }, Object.keys(this.props.ranges).map(function (range, i) {\n        return _react.default.createElement(_RangeButton.default, {\n          key: i,\n          index: i,\n          label: range,\n          value: _this2.props.ranges[range],\n          selectedRange: _this2.props.selectedRange,\n          rangeSelectedCallback: _this2.props.rangeSelectedCallback,\n          viewingIndex: _this2.state.viewingIndex,\n          viewingIndexChangeCallback: _this2.viewingIndexChangeCallback,\n          focused: _this2.state.focused,\n          setFocusedCallback: _this2.setFocusedCallback\n        });\n      }));\n    }\n  }]);\n\n  return Ranges;\n}(_react.default.Component);\n\nvar _default = Ranges;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}