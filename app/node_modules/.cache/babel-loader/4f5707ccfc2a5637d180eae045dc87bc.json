{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactResizeDetector = _interopRequireDefault(require(\"react-resize-detector\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.throttle\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _ShowMore = _interopRequireDefault(require(\"./components/ShowMore\"));\n\nvar _Tab = _interopRequireDefault(require(\"./components/Tab\"));\n\nvar _TabPanel = _interopRequireDefault(require(\"./components/TabPanel\"));\n\nvar _InkBar = _interopRequireDefault(require(\"./components/InkBar\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar tabPrefix = 'tab-';\nvar panelPrefix = 'panel-';\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tabs, _Component);\n\n  function Tabs(props) {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tabs).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onResize\", function () {\n      if (_this.tabsWrapper) {\n        var currentIsCollapsed = _this.getIsCollapsed();\n\n        _this.setState({\n          blockWidth: _this.tabsWrapper.offsetWidth\n        }, function () {\n          var items = _this.props.items;\n          var selectedTabKey = _this.state.selectedTabKey;\n\n          var nextIsCollapsed = _this.getIsCollapsed();\n\n          if (currentIsCollapsed && !nextIsCollapsed && selectedTabKey === -1 && items && items.length) {\n            var firstTabKey = items[0].key || 0;\n\n            _this.setState({\n              selectedTabKey: firstTabKey\n            });\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeTab\", function (nextTabKey) {\n      var onChange = _this.props.onChange;\n      var selectedTabKey = _this.state.selectedTabKey;\n\n      var isCollapsed = _this.getIsCollapsed();\n\n      if (isCollapsed && selectedTabKey === nextTabKey) {\n        // hide on mobile\n        _this.setState({\n          selectedTabKey: -1\n        });\n      } else {\n        // change active tab\n        _this.setState({\n          selectedTabKey: nextTabKey\n        });\n      }\n\n      if (onChange) {\n        onChange(nextTabKey);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onFocusTab\", function (focusedTabKey) {\n      return function () {\n        return _this.setState({\n          focusedTabKey: focusedTabKey\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onBlurTab\", function () {\n      return _this.setState({\n        focusedTabKey: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      var focusedTabKey = _this.state.focusedTabKey;\n\n      if (event.keyCode === 13 && focusedTabKey !== null) {\n        _this.setState({\n          selectedTabKey: focusedTabKey\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setTabsDimensions\", function () {\n      if (!_this.tabsWrapper) {\n        // it shouldn't happens evern. Just paranoic check\n        return;\n      } // initial wrapper width calculation\n\n\n      var blockWidth = _this.tabsWrapper.offsetWidth; // calculate width and offset for each tab\n\n      var tabsTotalWidth = 0;\n      var tabDimensions = {};\n      Object.keys(_this.tabRefs).forEach(function (key) {\n        if (_this.tabRefs[key]) {\n          var width = _this.tabRefs[key].tab.offsetWidth;\n          tabDimensions[key.replace(tabPrefix, '')] = {\n            width: width,\n            offset: tabsTotalWidth\n          };\n          tabsTotalWidth += width;\n        }\n      });\n\n      _this.setState({\n        tabDimensions: tabDimensions,\n        tabsTotalWidth: tabsTotalWidth,\n        blockWidth: blockWidth\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getTabs\", function () {\n      var _this$props = _this.props,\n          showMore = _this$props.showMore,\n          transform = _this$props.transform,\n          transformWidth = _this$props.transformWidth,\n          items = _this$props.items,\n          allowRemove = _this$props.allowRemove,\n          removeActiveOnly = _this$props.removeActiveOnly,\n          _onRemove = _this$props.onRemove;\n      var _this$state = _this.state,\n          blockWidth = _this$state.blockWidth,\n          tabsTotalWidth = _this$state.tabsTotalWidth,\n          tabDimensions = _this$state.tabDimensions,\n          showMoreWidth = _this$state.showMoreWidth;\n\n      var selectedTabKey = _this.getSelectedTabKey();\n\n      var collapsed = blockWidth && transform && blockWidth < transformWidth;\n      var tabIndex = 0;\n      var availableWidth = blockWidth - (tabsTotalWidth > blockWidth ? showMoreWidth : 0);\n      return items.reduce(function (result, item, index) {\n        var _item$key = item.key,\n            key = _item$key === void 0 ? index : _item$key,\n            title = item.title,\n            content = item.content,\n            getContent = item.getContent,\n            disabled = item.disabled,\n            tabClassName = item.tabClassName,\n            panelClassName = item.panelClassName;\n        var selected = selectedTabKey === key;\n        var payload = {\n          tabIndex: tabIndex,\n          collapsed: collapsed,\n          selected: selected,\n          disabled: disabled,\n          key: key\n        };\n\n        var tabPayload = _objectSpread({}, payload, {\n          title: title,\n          onRemove: function onRemove(evt) {\n            if (typeof _onRemove === 'function') {\n              _onRemove(key, evt);\n            }\n          },\n          allowRemove: allowRemove && (!removeActiveOnly || selected),\n          className: tabClassName\n        });\n\n        var panelPayload = _objectSpread({}, payload, {\n          content: content,\n          getContent: getContent,\n          className: panelClassName\n        });\n\n        var tabWidth = tabDimensions[key] ? tabDimensions[key].width : 0;\n        tabIndex += 1;\n        /* eslint-disable no-param-reassign */\n\n        if ( // don't need to `Show more` button\n        !showMore // initial call\n        || !blockWidth // collapsed mode\n        || collapsed // all tabs are fit into the block\n        || blockWidth > tabsTotalWidth // current tab fit into the block\n        || availableWidth - tabWidth > 0) {\n          result.tabsVisible.push(tabPayload);\n        } else {\n          result.tabsHidden.push(tabPayload);\n          if (selected) result.isSelectedTabHidden = true;\n        }\n        /* eslint-enable no-param-reassign */\n\n\n        result.panels[key] = panelPayload; // eslint-disable-line no-param-reassign\n\n        availableWidth -= tabWidth;\n        return result;\n      }, {\n        tabsVisible: [],\n        tabsHidden: [],\n        panels: {},\n        isSelectedTabHidden: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getTabProps\", function (_ref) {\n      var title = _ref.title,\n          key = _ref.key,\n          selected = _ref.selected,\n          collapsed = _ref.collapsed,\n          tabIndex = _ref.tabIndex,\n          disabled = _ref.disabled,\n          className = _ref.className,\n          onRemove = _ref.onRemove,\n          allowRemove = _ref.allowRemove;\n      return {\n        selected: selected,\n        allowRemove: allowRemove,\n        children: title,\n        key: tabPrefix + key,\n        id: tabPrefix + key,\n        ref: function ref(e) {\n          return _this.tabRefs[tabPrefix + key] = e;\n        },\n        originalKey: key,\n        onClick: _this.onChangeTab,\n        onFocus: _this.onFocusTab,\n        onBlur: _this.onBlurTab,\n        onRemove: onRemove,\n        panelId: panelPrefix + key,\n        classNames: _this.getClassNamesFor('tab', {\n          selected: selected,\n          collapsed: collapsed,\n          tabIndex: tabIndex,\n          disabled: disabled,\n          className: className\n        })\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getPanelProps\", function (_ref2) {\n      var key = _ref2.key,\n          content = _ref2.content,\n          getContent = _ref2.getContent,\n          className = _ref2.className;\n      return {\n        getContent: getContent,\n        children: content,\n        key: panelPrefix + key,\n        id: panelPrefix + key,\n        tabId: tabPrefix + key,\n        classNames: _this.getClassNamesFor('panel', {\n          className: className\n        })\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getShowMoreProps\", function (isShown, isSelectedTabHidden, showMoreLabel) {\n      return {\n        onShowMoreChanged: _this.showMoreChanged,\n        isShown: isShown,\n        label: showMoreLabel,\n        hasChildSelected: isSelectedTabHidden\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getClassNamesFor\", function (type, _ref3) {\n      var selected = _ref3.selected,\n          collapsed = _ref3.collapsed,\n          tabIndex = _ref3.tabIndex,\n          disabled = _ref3.disabled,\n          _ref3$className = _ref3.className,\n          className = _ref3$className === void 0 ? '' : _ref3$className;\n      var _this$props2 = _this.props,\n          tabClass = _this$props2.tabClass,\n          panelClass = _this$props2.panelClass;\n\n      switch (type) {\n        case 'tab':\n          return (0, _classnames.default)('RRT__tab', className, tabClass, {\n            'RRT__tab--first': !tabIndex,\n            'RRT__tab--selected': selected,\n            'RRT__tab--disabled': disabled,\n            'RRT__tab--collapsed': collapsed\n          });\n\n        case 'panel':\n          return (0, _classnames.default)('RRT__panel', className, panelClass);\n\n        default:\n          return '';\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getSelectedTabKey\", function () {\n      var items = _this.props.items;\n      var selectedTabKey = _this.state.selectedTabKey;\n\n      if (typeof selectedTabKey === 'undefined') {\n        if (!items[0]) {\n          return undefined;\n        }\n\n        return items[0].key || 0;\n      }\n\n      return selectedTabKey;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getIsCollapsed\", function () {\n      var _this$props3 = _this.props,\n          transform = _this$props3.transform,\n          transformWidth = _this$props3.transformWidth;\n      var blockWidth = _this.state.blockWidth;\n      return blockWidth && transform && blockWidth < transformWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showMoreChanged\", function (element) {\n      if (!element) {\n        return;\n      }\n\n      var showMoreWidth = _this.state.showMoreWidth;\n      var offsetWidth = element.offsetWidth;\n\n      if (showMoreWidth === offsetWidth) {\n        return;\n      }\n\n      _this.setState({\n        showMoreWidth: offsetWidth\n      });\n    });\n\n    _this.tabRefs = {};\n    _this.state = {\n      tabDimensions: {},\n      blockWidth: 0,\n      tabsTotalWidth: 0,\n      showMoreWidth: 40,\n      selectedTabKey: props.selectedTabKey,\n      focusedTabKey: null\n    };\n    _this.onResizeThrottled = (0, _lodash.default)(_this.onResize, props.resizeThrottle, {\n      trailing: true\n    });\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setTabsDimensions();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var items = this.props.items;\n      var selectedTabKey = this.state.selectedTabKey;\n      var newState = {};\n\n      if (items !== nextProps.items) {\n        newState.blockWidth = 0;\n      }\n\n      if (selectedTabKey !== nextProps.selectedTabKey) {\n        newState.selectedTabKey = nextProps.selectedTabKey;\n      }\n\n      if (Object.keys(newState).length) {\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this$state2 = this.state,\n          selectedTabKey = _this$state2.selectedTabKey,\n          blockWidth = _this$state2.blockWidth,\n          showMoreWidth = _this$state2.showMoreWidth;\n      var _this$props4 = this.props,\n          items = _this$props4.items,\n          transform = _this$props4.transform,\n          showMore = _this$props4.showMore,\n          showInkBar = _this$props4.showInkBar,\n          allowRemove = _this$props4.allowRemove,\n          removeActiveOnly = _this$props4.removeActiveOnly;\n      return items !== nextProps.items || nextProps.transform !== transform || nextProps.showMore !== showMore || nextProps.showInkBar !== showInkBar || nextProps.allowRemove !== allowRemove || nextProps.removeActiveOnly !== removeActiveOnly || nextState.blockWidth !== blockWidth || nextState.showMoreWidth !== showMoreWidth || nextState.selectedTabKey !== selectedTabKey;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var blockWidth = this.state.blockWidth;\n\n      if (!blockWidth) {\n        this.setTabsDimensions();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          showInkBar = _this$props5.showInkBar,\n          containerClass = _this$props5.containerClass,\n          tabsWrapperClass = _this$props5.tabsWrapperClass,\n          showMore = _this$props5.showMore,\n          transform = _this$props5.transform,\n          showMoreLabel = _this$props5.showMoreLabel;\n      var tabDimensions = this.state.tabDimensions;\n\n      var _this$getTabs = this.getTabs(),\n          tabsVisible = _this$getTabs.tabsVisible,\n          tabsHidden = _this$getTabs.tabsHidden,\n          panels = _this$getTabs.panels,\n          isSelectedTabHidden = _this$getTabs.isSelectedTabHidden;\n\n      var isCollapsed = this.getIsCollapsed();\n      var selectedTabKey = this.getSelectedTabKey();\n      var selectedTabDimensions = tabDimensions[selectedTabKey] || {};\n      var containerClasses = (0, _classnames.default)('RRT__container', containerClass);\n      var tabsClasses = (0, _classnames.default)('RRT__tabs', tabsWrapperClass, {\n        RRT__accordion: isCollapsed\n      });\n      return _react.default.createElement(\"div\", {\n        className: containerClasses,\n        ref: function ref(e) {\n          return _this2.tabsWrapper = e;\n        },\n        onKeyDown: this.onKeyDown\n      }, _react.default.createElement(\"div\", {\n        className: tabsClasses\n      }, tabsVisible.reduce(function (result, tab) {\n        result.push(_react.default.createElement(_Tab.default, _this2.getTabProps(tab)));\n\n        if (isCollapsed && selectedTabKey === tab.key) {\n          result.push(_react.default.createElement(_TabPanel.default, _this2.getPanelProps(panels[tab.key])));\n        }\n\n        return result;\n      }, []), !isCollapsed && _react.default.createElement(_ShowMore.default, this.getShowMoreProps(showMore, isSelectedTabHidden, showMoreLabel), tabsHidden.map(function (tab) {\n        return _react.default.createElement(_Tab.default, _this2.getTabProps(tab));\n      }))), showInkBar && !isCollapsed && !isSelectedTabHidden && _react.default.createElement(_InkBar.default, {\n        left: selectedTabDimensions.offset || 0,\n        width: selectedTabDimensions.width || 0\n      }), !isCollapsed && panels[selectedTabKey] && _react.default.createElement(_TabPanel.default, this.getPanelProps(panels[selectedTabKey])), (showMore || transform) && _react.default.createElement(_reactResizeDetector.default, {\n        handleWidth: true,\n        onResize: this.onResizeThrottled\n      }));\n    }\n  }]);\n\n  return Tabs;\n}(_react.Component);\n\nexports.default = Tabs;\nTabs.propTypes = {\n  /* eslint-disable react/no-unused-prop-types */\n  // list of tabs\n  items: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n\n  /* eslint-enable react/no-unused-prop-types */\n  // selected tab key\n  selectedTabKey: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n  // show 'X' and remove tab\n  allowRemove: _propTypes.default.bool,\n  // show 'X' closing element only for active tab\n  removeActiveOnly: _propTypes.default.bool,\n  // move tabs to the special `Show more` tab if they don't fit into a screen\n  showMore: _propTypes.default.bool,\n  // materialUI-like rail under the selected tab\n  showInkBar: _propTypes.default.bool,\n  // transform to the accordion on small screens\n  transform: _propTypes.default.bool,\n  // tabs will be transformed to accodrion for screen sizes below `transformWidth`px\n  transformWidth: _propTypes.default.number,\n  // onChange active tab callback\n  onChange: _propTypes.default.func,\n  // onRemove callback\n  onRemove: _propTypes.default.func,\n  // frequency of onResize recalculation fires\n  resizeThrottle: _propTypes.default.number,\n  // classnames\n  containerClass: _propTypes.default.string,\n  tabsWrapperClass: _propTypes.default.string,\n  tabClass: _propTypes.default.string,\n  panelClass: _propTypes.default.string,\n  // labels\n  showMoreLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node])\n};\nTabs.defaultProps = {\n  items: [],\n  selectedTabKey: undefined,\n  showMore: true,\n  showInkBar: false,\n  allowRemove: false,\n  removeActiveOnly: false,\n  transform: true,\n  transformWidth: 800,\n  resizeThrottle: 100,\n  containerClass: undefined,\n  tabsWrapperClass: undefined,\n  tabClass: undefined,\n  panelClass: undefined,\n  showMoreLabel: '...',\n  onChange: function onChange() {\n    return null;\n  },\n  onRemove: function onRemove() {\n    return null;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}