{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _redux = require('redux');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _simpleAjax = require('simple-ajax');\n\nvar _simpleAjax2 = _interopRequireDefault(_simpleAjax);\n\nvar _Container = require('../containers/Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _DefaultLink = require('./DefaultLink');\n\nvar _DefaultLink2 = _interopRequireDefault(_DefaultLink);\n\nvar _internal = require('../reducers/internal');\n\nvar _internal2 = _interopRequireDefault(_internal);\n\nvar _content = require('../actions/content');\n\nvar _emitters = require('../actions/emitters');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * src/components/MetisMenu.jsx\n * Author: H.Alper Tuna <halpertuna@gmail.com>\n * Date: 16.09.2016\n */\n\n/* eslint react/forbid-prop-types: [ \"error\", { forbid: [ \"any\", \"array\" ] } ] */\n\n\nvar lastReduxUid = -1;\n\nvar MetisMenu = function (_React$Component) {\n  _inherits(MetisMenu, _React$Component);\n\n  function MetisMenu(props) {\n    _classCallCheck(this, MetisMenu);\n\n    var _this = _possibleConstructorReturn(this, (MetisMenu.__proto__ || Object.getPrototypeOf(MetisMenu)).call(this, props));\n\n    lastReduxUid += 1;\n    _this.reduxUid = lastReduxUid;\n    _this.useExternalReduxStore = props.useExternalReduxStore;\n    _this.reduxStoreName = props.reduxStoreName;\n\n    if (_this.useExternalReduxStore) {\n      _this.store = _this.useExternalReduxStore;\n    } else {\n      _this.store = (0, _redux.createStore)(_internal2.default);\n    }\n\n    if (props.onSelected) {\n      _this.store.dispatch((0, _emitters.updateListener)(_this.reduxUid, props.onSelected));\n    }\n\n    _this.LinkComponent = props.LinkComponent;\n\n    if (props.content) {\n      _this.updateContent(props.content);\n\n      _this.updateActiveLink(props);\n    } else if (props.ajax) {\n      _this.updateRemoteContent(props);\n    }\n\n    _this.classStore = {\n      classMainWrapper: (0, _classnames2.default)({\n        metismenu: !props.noBuiltInClassNames\n      }, props.className),\n      classContainer: typeof props.classNameContainer === 'function' ? props.classNameContainer : (0, _classnames2.default)({\n        'metismenu-container': !props.noBuiltInClassNames\n      }, props.classNameContainer),\n      classContainerVisible: (0, _classnames2.default)({\n        visible: !props.noBuiltInClassNames\n      }, props.classNameContainerVisible),\n      classItem: (0, _classnames2.default)({\n        'metismenu-item': !props.noBuiltInClassNames\n      }, props.classNameItem),\n      classLink: (0, _classnames2.default)({\n        'metismenu-link': !props.noBuiltInClassNames\n      }, props.classNameLink),\n      classItemActive: props.classNameItemActive,\n      classItemHasActiveChild: props.classNameItemHasActiveChild,\n      classItemHasVisibleChild: props.classNameItemHasVisibleChild,\n      classLinkActive: (0, _classnames2.default)({\n        active: !props.noBuiltInClassNames\n      }, props.classNameLinkActive),\n      classLinkHasActiveChild: (0, _classnames2.default)({\n        'has-active-child': !props.noBuiltInClassNames\n      }, props.classNameLinkHasActiveChild),\n      classIcon: (0, _classnames2.default)({\n        'metismenu-icon': !props.noBuiltInClassNames\n      }, props.classNameIcon),\n      classStateIcon: (0, _classnames2.default)({\n        'metismenu-state-icon': !props.noBuiltInClassNames\n      }, props.classNameStateIcon),\n      iconNamePrefix: props.iconNamePrefix,\n      iconNameStateHidden: props.iconNameStateHidden,\n      iconNameStateVisible: props.iconNameStateVisible\n    };\n    return _this;\n  }\n\n  _createClass(MetisMenu, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        classStore: this.classStore,\n        LinkComponent: this.LinkComponent\n      };\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.content !== nextProps.content) {\n        this.updateContent(nextProps.content);\n      }\n\n      if (this.props.ajax !== nextProps.ajax) {\n        this.updateRemoteContent(nextProps);\n      } else if (this.props.activeLinkId !== nextProps.activeLinkId || this.props.activeLinkTo !== nextProps.activeLinkTo || this.props.activeLinkLabel !== nextProps.activeLinkLabel || this.props.activeLinkFromLocation !== nextProps.activeLinkFromLocation) {\n        this.updateActiveLink(nextProps);\n      }\n    }\n  }, {\n    key: 'changeActiveLinkId',\n    value: function changeActiveLinkId(value) {\n      this.store.dispatch((0, _content.changeActiveLinkId)(this.reduxUid, value));\n    }\n  }, {\n    key: 'changeActiveLinkTo',\n    value: function changeActiveLinkTo(value) {\n      this.store.dispatch((0, _content.changeActiveLinkTo)(this.reduxUid, value));\n    }\n  }, {\n    key: 'changeActiveLinkLabel',\n    value: function changeActiveLinkLabel(value) {\n      this.store.dispatch((0, _content.changeActiveLinkLabel)(this.reduxUid, value));\n    }\n  }, {\n    key: 'changeActiveLinkFromLocation',\n    value: function changeActiveLinkFromLocation() {\n      this.store.dispatch((0, _content.changeActiveLinkFromLocation)(this.reduxUid));\n    }\n  }, {\n    key: 'updateActiveLink',\n    value: function updateActiveLink(props) {\n      if (props.activeLinkId) this.changeActiveLinkId(props.activeLinkId);else if (props.activeLinkTo) this.changeActiveLinkTo(props.activeLinkTo);else if (props.activeLinkLabel) this.changeActiveLinkLabel(props.activeLinkLabel);else if (props.activeLinkFromLocation) this.changeActiveLinkFromLocation();\n    }\n  }, {\n    key: 'updateRemoteContent',\n    value: function updateRemoteContent(props) {\n      var _this2 = this;\n\n      var ajax = new _simpleAjax2.default(props.ajax);\n      ajax.on('success', function (event) {\n        var content = void 0;\n        var responseText = event.target.responseText.target.responseText;\n\n        try {\n          content = JSON.parse(responseText);\n        } catch (e) {\n          throw new Error('MetisMenu: Ajax response expected to be json, but got; ' + responseText);\n        }\n\n        _this2.updateContent(content);\n\n        _this2.updateActiveLink(props);\n      });\n      ajax.send();\n    }\n  }, {\n    key: 'updateContent',\n    value: function updateContent(content) {\n      this.store.dispatch((0, _content.updateContent)(this.reduxUid, content));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var mainWrapper = _react2.default.createElement('div', {\n        className: this.classStore.classMainWrapper\n      }, _react2.default.createElement(_Container2.default, {\n        reduxStoreName: this.reduxStoreName,\n        reduxUid: this.reduxUid\n      }));\n\n      if (this.useExternalReduxStore) {\n        return mainWrapper;\n      }\n\n      return _react2.default.createElement(_reactRedux.Provider, {\n        store: this.store\n      }, mainWrapper);\n    }\n  }]);\n\n  return MetisMenu;\n}(_react2.default.Component);\n\nMetisMenu.defaultProps = {\n  content: [],\n  ajax: null,\n  LinkComponent: _DefaultLink2.default,\n  noBuiltInClassNames: false,\n  className: null,\n  classNameContainer: null,\n  classNameContainerVisible: null,\n  classNameItem: null,\n  classNameItemActive: null,\n  classNameItemHasActiveChild: null,\n  classNameItemHasVisibleChild: null,\n  classNameLink: null,\n  classNameLinkActive: null,\n  classNameLinkHasActiveChild: null,\n  classNameIcon: null,\n  classNameStateIcon: null,\n  iconNamePrefix: 'fa fa-',\n  iconNameStateHidden: 'caret-left',\n  iconNameStateVisible: 'caret-left rotate-minus-90',\n  activeLinkId: null,\n  activeLinkTo: null,\n  activeLinkLabel: null,\n  activeLinkFromLocation: false,\n  onSelected: null,\n  useExternalReduxStore: null,\n  reduxStoreName: 'metisMenuStore'\n};\nMetisMenu.propTypes = {\n  content: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  ajax: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),\n  LinkComponent: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]),\n  noBuiltInClassNames: _propTypes2.default.bool,\n  className: _propTypes2.default.string,\n  classNameContainer: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n  classNameContainerVisible: _propTypes2.default.string,\n  classNameItem: _propTypes2.default.string,\n  classNameItemActive: _propTypes2.default.string,\n  classNameItemHasActiveChild: _propTypes2.default.string,\n  classNameItemHasVisibleChild: _propTypes2.default.string,\n  classNameLink: _propTypes2.default.string,\n  classNameLinkActive: _propTypes2.default.string,\n  classNameLinkHasActiveChild: _propTypes2.default.string,\n  classNameIcon: _propTypes2.default.string,\n  classNameStateIcon: _propTypes2.default.string,\n  iconNamePrefix: _propTypes2.default.string,\n  iconNameStateHidden: _propTypes2.default.string,\n  iconNameStateVisible: _propTypes2.default.string,\n  activeLinkId: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  activeLinkTo: _propTypes2.default.string,\n  activeLinkLabel: _propTypes2.default.string,\n  activeLinkFromLocation: _propTypes2.default.bool,\n  onSelected: _propTypes2.default.func,\n  useExternalReduxStore: _propTypes2.default.object,\n  reduxStoreName: _propTypes2.default.string\n};\nMetisMenu.childContextTypes = {\n  classStore: _propTypes2.default.object.isRequired,\n  LinkComponent: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]).isRequired\n};\nexports.default = MetisMenu;","map":null,"metadata":{},"sourceType":"script"}