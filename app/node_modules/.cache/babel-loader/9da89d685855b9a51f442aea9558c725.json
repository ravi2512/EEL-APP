{"ast":null,"code":"import _defineProperty from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Components/Notifications/Examples/ToastifyAlerts.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { Row, Col, Card, CardBody, Button, CardTitle, CardFooter } from 'reactstrap';\nimport { ToastContainer, toast, Bounce, Slide, Flip, Zoom } from 'react-toastify';\nvar flags = [{\n  id: 'disableAutoClose',\n  label: 'Disable auto-close'\n}, {\n  id: 'hideProgressBar',\n  label: 'Hide progress bar(less fanciness!)'\n}, {\n  id: 'newestOnTop',\n  label: 'Newest on top*'\n}, {\n  id: 'closeOnClick',\n  label: 'Close on click'\n}, {\n  id: 'pauseOnHover',\n  label: 'Pause delay on hover'\n}, {\n  id: 'pauseOnFocusLoss',\n  label: 'Pause toast when the window loses focus'\n}, {\n  id: 'rtl',\n  label: 'Right to left layout*'\n}, {\n  id: 'draggable',\n  label: 'Allow to drag and close the toast'\n}];\nvar transitions = {\n  bounce: Bounce,\n  slide: Slide,\n  zoom: Zoom,\n  flip: Flip\n};\n\nvar Checkbox = function Checkbox(_ref) {\n  var label = _ref.label,\n      onChange = _ref.onChange,\n      id = _ref.id,\n      checked = _ref.checked;\n  return React.createElement(\"div\", {\n    className: \"form-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: id,\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    name: id,\n    checked: checked,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, label));\n};\n\nvar Radio = function Radio(_ref2) {\n  var options = _ref2.options,\n      name = _ref2.name,\n      onChange = _ref2.onChange,\n      _ref2$checked = _ref2.checked,\n      checked = _ref2$checked === void 0 ? false : _ref2$checked;\n  return Object.keys(options).map(function (k) {\n    var option = options[k];\n    return React.createElement(\"div\", {\n      className: \"form-check\",\n      key: \"\".concat(name, \"-\").concat(option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      id: option,\n      type: \"radio\",\n      name: name,\n      value: option,\n      checked: option === checked,\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, option));\n  });\n};\n\nfunction getType(type) {\n  switch (type) {\n    case 'default':\n    default:\n      return 'toast';\n\n    case 'success':\n      return 'toast.success';\n\n    case 'error':\n      return 'toast.error';\n\n    case 'info':\n      return 'toast.info';\n\n    case 'warning':\n      return 'toast.warn';\n  }\n}\n\nvar ToastifyAlerts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToastifyAlerts, _Component);\n\n  function ToastifyAlerts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToastifyAlerts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToastifyAlerts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = ToastifyAlerts.getDefaultState();\n\n    _this.handleReset = function () {\n      return _this.setState(_objectSpread({}, ToastifyAlerts.getDefaultState()));\n    };\n\n    _this.clearAll = function () {\n      return toast.dismiss();\n    };\n\n    _this.showToast = function () {\n      return _this.state.type === 'default' ? toast('This is the default toaster notification box!') : toast[_this.state.type]('This is a toaster screen notification with dummy color, position and extra texts!');\n    };\n\n    _this.handleAutoCloseDelay = function (e) {\n      return _this.setState({\n        autoClose: e.target.value > 0 ? parseInt(e.target.value, 10) : 1\n      });\n    };\n\n    _this.handleRadioOrSelect = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.toggleCheckbox = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, !_this.state[e.target.name]));\n    };\n\n    return _this;\n  }\n\n  _createClass(ToastifyAlerts, [{\n    key: \"isDefaultProps\",\n    value: function isDefaultProps() {\n      return this.state.position === 'top-right' && this.state.autoClose === 5000 && !this.state.disableAutoClose && !this.state.hideProgressBar && !this.state.newestOnTop && !this.state.rtl && this.state.pauseOnFocusLoss && this.state.pauseOnHover && this.state.closeOnClick && this.state.draggable;\n    }\n  }, {\n    key: \"renderFlags\",\n    value: function renderFlags() {\n      var _this2 = this;\n\n      return flags.map(function (_ref3) {\n        var id = _ref3.id,\n            label = _ref3.label;\n        return React.createElement(\"div\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          id: id,\n          className: \"form-check-input\",\n          label: label,\n          onChange: _this2.toggleCheckbox,\n          checked: _this2.state[id],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(ReactCSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Toastify Configurator\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Color States\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        options: toast.TYPE,\n        name: \"type\",\n        checked: this.state.type,\n        onChange: this.handleRadioOrSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Options\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.renderFlags())), React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Animation\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"transition\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Transition\"), React.createElement(\"select\", {\n        name: \"transition\",\n        id: \"transition\",\n        className: \"form-control\",\n        onChange: this.handleRadioOrSelect,\n        value: this.state.transition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, Object.keys(transitions).map(function (k) {\n        return React.createElement(\"option\", {\n          key: k,\n          value: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, k);\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"autoClose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Delay\"), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"autoClose\",\n        className: \"form-control\",\n        id: \"autoClose\",\n        value: this.state.autoClose,\n        onChange: this.handleAutoCloseDelay,\n        disabled: this.state.disableAutoClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))))))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        className: \"text-danger\",\n        onClick: this.clearAll,\n        color: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Clear All\"), React.createElement(Button, {\n        size: \"sm\",\n        className: \"text-primary\",\n        onClick: this.handleReset,\n        color: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(\"div\", {\n        className: \"ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        color: \"success\",\n        onClick: this.showToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Show Toast\"))))))));\n    }\n  }], [{\n    key: \"getDefaultState\",\n    value: function getDefaultState() {\n      return _objectSpread({}, ToastContainer.defaultProps, {\n        transition: 'bounce',\n        type: 'success',\n        disableAutoClose: false\n      });\n    }\n  }]);\n\n  return ToastifyAlerts;\n}(Component);\n\nexport default ToastifyAlerts;","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Components/Notifications/Examples/ToastifyAlerts.js"],"names":["React","Component","Fragment","ReactCSSTransitionGroup","Row","Col","Card","CardBody","Button","CardTitle","CardFooter","ToastContainer","toast","Bounce","Slide","Flip","Zoom","flags","id","label","transitions","bounce","slide","zoom","flip","Checkbox","onChange","checked","Radio","options","name","Object","keys","map","k","option","getType","type","ToastifyAlerts","state","getDefaultState","handleReset","setState","clearAll","dismiss","showToast","handleAutoCloseDelay","e","autoClose","target","value","parseInt","handleRadioOrSelect","toggleCheckbox","position","disableAutoClose","hideProgressBar","newestOnTop","rtl","pauseOnFocusLoss","pauseOnHover","closeOnClick","draggable","TYPE","renderFlags","transition","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport {\r\n    Row, Col,\r\n    Card, CardBody, Button,\r\n    CardTitle, CardFooter\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    ToastContainer,\r\n    toast,\r\n    Bounce,\r\n    Slide,\r\n    Flip,\r\n    Zoom\r\n} from 'react-toastify';\r\n\r\nconst flags = [\r\n    {\r\n        id: 'disableAutoClose',\r\n        label: 'Disable auto-close'\r\n    },\r\n    {\r\n        id: 'hideProgressBar',\r\n        label: 'Hide progress bar(less fanciness!)'\r\n    },\r\n    {\r\n        id: 'newestOnTop',\r\n        label: 'Newest on top*'\r\n    },\r\n    {\r\n        id: 'closeOnClick',\r\n        label: 'Close on click'\r\n    },\r\n    {\r\n        id: 'pauseOnHover',\r\n        label: 'Pause delay on hover'\r\n    },\r\n    {\r\n        id: 'pauseOnFocusLoss',\r\n        label: 'Pause toast when the window loses focus'\r\n    },\r\n    {\r\n        id: 'rtl',\r\n        label: 'Right to left layout*'\r\n    },\r\n    {\r\n        id: 'draggable',\r\n        label: 'Allow to drag and close the toast'\r\n    }\r\n];\r\n\r\nconst transitions = {\r\n    bounce: Bounce,\r\n    slide: Slide,\r\n    zoom: Zoom,\r\n    flip: Flip\r\n};\r\n\r\nconst Checkbox = ({label, onChange, id, checked}) => (\r\n    <div className=\"form-check\">\r\n        <input\r\n            id={id}\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            name={id}\r\n            checked={checked}\r\n            onChange={onChange}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor={id}>\r\n            {label}\r\n        </label>\r\n    </div>\r\n);\r\n\r\nconst Radio = ({options, name, onChange, checked = false}) => {\r\n    return Object.keys(options).map(k => {\r\n        const option = options[k];\r\n\r\n        return (\r\n            <div className=\"form-check\" key={`${name}-${option}`}>\r\n                <input\r\n                    className=\"form-check-input\"\r\n                    id={option}\r\n                    type=\"radio\"\r\n                    name={name}\r\n                    value={option}\r\n                    checked={option === checked}\r\n                    onChange={onChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={option}>\r\n                    {option}\r\n                </label>\r\n            </div>\r\n        );\r\n    });\r\n};\r\n\r\nfunction getType(type) {\r\n    switch (type) {\r\n        case 'default':\r\n        default:\r\n            return 'toast';\r\n        case 'success':\r\n            return 'toast.success';\r\n        case 'error':\r\n            return 'toast.error';\r\n        case 'info':\r\n            return 'toast.info';\r\n        case 'warning':\r\n            return 'toast.warn';\r\n    }\r\n}\r\n\r\nclass ToastifyAlerts extends Component {\r\n    state = ToastifyAlerts.getDefaultState();\r\n\r\n    static getDefaultState() {\r\n        return {\r\n            ...ToastContainer.defaultProps,\r\n            transition: 'bounce',\r\n            type: 'success',\r\n            disableAutoClose: false\r\n        };\r\n    }\r\n\r\n    handleReset = () =>\r\n        this.setState({\r\n            ...ToastifyAlerts.getDefaultState()\r\n        });\r\n\r\n    clearAll = () => toast.dismiss();\r\n\r\n    showToast = () =>\r\n        this.state.type === 'default'\r\n            ? toast('This is the default toaster notification box!')\r\n            : toast[this.state.type]('This is a toaster screen notification with dummy color, position and extra texts!');\r\n\r\n    handleAutoCloseDelay = e =>\r\n        this.setState({\r\n            autoClose: e.target.value > 0 ? parseInt(e.target.value, 10) : 1\r\n        });\r\n\r\n    isDefaultProps() {\r\n        return (\r\n            this.state.position === 'top-right' &&\r\n            (this.state.autoClose === 5000 && !this.state.disableAutoClose) &&\r\n            !this.state.hideProgressBar &&\r\n            !this.state.newestOnTop &&\r\n            !this.state.rtl &&\r\n            this.state.pauseOnFocusLoss &&\r\n            this.state.pauseOnHover &&\r\n            this.state.closeOnClick &&\r\n            this.state.draggable\r\n        );\r\n    }\r\n\r\n    handleRadioOrSelect = e =>\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    toggleCheckbox = e =>\r\n        this.setState({\r\n            [e.target.name]: !this.state[e.target.name]\r\n        });\r\n\r\n    renderFlags() {\r\n        return flags.map(({id, label}) => (\r\n            <div key={id}>\r\n                <Checkbox\r\n                    id={id}\r\n                    className=\"form-check-input\"\r\n                    label={label}\r\n                    onChange={this.toggleCheckbox}\r\n                    checked={this.state[id]}\r\n                />\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <ReactCSSTransitionGroup\r\n                    component=\"div\"\r\n                    transitionName=\"TabsAnimation\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={0}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Toastify Configurator</CardTitle>\r\n                                    <Row>\r\n                                        <Col md=\"2\">\r\n                                            <div>\r\n                                                <h5>Color States</h5>\r\n                                                <div>\r\n                                                    <Radio\r\n                                                        options={toast.TYPE}\r\n                                                        name=\"type\"\r\n                                                        checked={this.state.type}\r\n                                                        onChange={this.handleRadioOrSelect}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md=\"4\">\r\n                                            <h5>Options</h5>\r\n                                            <div>{this.renderFlags()}</div>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <div>\r\n                                                <h5>Animation</h5>\r\n                                                <div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"transition\">Transition</label>\r\n                                                        <select\r\n                                                            name=\"transition\"\r\n                                                            id=\"transition\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={this.handleRadioOrSelect}\r\n                                                            value={this.state.transition}\r\n                                                        >\r\n                                                            {Object.keys(transitions).map(k => (\r\n                                                                <option key={k} value={k}>\r\n                                                                    {k}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"autoClose\">Delay</label>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            name=\"autoClose\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"autoClose\"\r\n                                                            value={this.state.autoClose}\r\n                                                            onChange={this.handleAutoCloseDelay}\r\n                                                            disabled={this.state.disableAutoClose}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                                <CardFooter>\r\n                                    <div>\r\n                                        <Button size=\"sm\" className=\"text-danger\" onClick={this.clearAll} color=\"link\">Clear\r\n                                            All</Button>\r\n                                        <Button size=\"sm\" className=\"text-primary\" onClick={this.handleReset}\r\n                                                color=\"link\">Reset</Button>\r\n                                    </div>\r\n                                    <div className=\"ml-auto\">\r\n                                        <Button size=\"lg\" color=\"success\" onClick={this.showToast}>Show Toast</Button>\r\n                                    </div>\r\n                                </CardFooter>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </ReactCSSTransitionGroup>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToastifyAlerts;"]},"metadata":{},"sourceType":"module"}