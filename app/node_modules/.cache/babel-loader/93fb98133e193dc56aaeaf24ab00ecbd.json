{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require('react');\n\nvar Component = React.Component;\n\nvar ReactDOM = require('react-dom');\n\nvar deepExtend = require('deep-extend');\n\nvar PropTypes = require('prop-types');\n\nvar findDOMNode = ReactDOM.findDOMNode;\n\nvar Cropper = function (_Component) {\n  _inherits(Cropper, _Component);\n\n  function Cropper(props) {\n    _classCallCheck(this, Cropper);\n\n    var _this = _possibleConstructorReturn(this, (Cropper.__proto__ || Object.getPrototypeOf(Cropper)).call(this, props));\n\n    var originX = props.originX,\n        originY = props.originY,\n        width = props.width,\n        height = props.height,\n        fixedRatio = props.fixedRatio,\n        ratio = props.ratio,\n        styles = props.styles,\n        src = props.src;\n    _this.state = {\n      // image and clone image src\n      src: src,\n      // background image width\n      imgWidth: '100%',\n      // background image height\n      imgHeight: 'auto',\n      // cropper width, drag trigger changing\n      frameWidth4Style: width,\n      // cropper height, drag trigger changing\n      frameHeight4Style: fixedRatio ? width / ratio : height,\n      // cropper height, drag trigger changing\n      toImgTop4Style: 0,\n      toImgLeft4Style: 0,\n      // cropper original position(x axis), accroding to image left\n      originX: originX,\n      // cropper original position(y axis), accroding to image top\n      originY: originY,\n      // dragging start, position's pageX and pageY\n      startPageX: 0,\n      startPageY: 0,\n      // frame width, change only dragging stop\n      frameWidth: width,\n      // frame height, change only dragging stop\n      frameHeight: fixedRatio ? width / ratio : height,\n      dragging: false,\n      maxLeft: 0,\n      maxTop: 0,\n      action: null,\n      imgLoaded: false,\n      styles: deepExtend({}, defaultStyles, styles)\n    };\n    return _this;\n  } // initialize style, component did mount or component updated.\n\n\n  _createClass(Cropper, [{\n    key: 'initStyles',\n    value: function initStyles() {\n      var _this2 = this;\n\n      var container = findDOMNode(this.container);\n      this.setState({\n        imgWidth: container.offsetWidth\n      }, function () {\n        // calc frame width height\n        var _props = _this2.props,\n            originX = _props.originX,\n            originY = _props.originY,\n            disabled = _props.disabled;\n        if (disabled) return;\n        var _state = _this2.state,\n            imgWidth = _state.imgWidth,\n            imgHeight = _state.imgHeight;\n        var _state2 = _this2.state,\n            frameWidth = _state2.frameWidth,\n            frameHeight = _state2.frameHeight;\n        var maxLeft = imgWidth - frameWidth;\n        var maxTop = imgHeight - frameHeight;\n\n        if (originX + frameWidth >= imgWidth) {\n          originX = imgWidth - frameWidth;\n\n          _this2.setState({\n            originX: originX\n          });\n        }\n\n        if (originY + frameHeight >= imgHeight) {\n          originY = imgHeight - frameHeight;\n\n          _this2.setState({\n            originY: originY\n          });\n        }\n\n        _this2.setState({\n          maxLeft: maxLeft,\n          maxTop: maxTop\n        }); // calc clone position\n\n\n        _this2.calcPosition(frameWidth, frameHeight, originX, originY, function () {\n          var _state3 = _this2.state,\n              frameWidth4Style = _state3.frameWidth4Style,\n              frameHeight4Style = _state3.frameHeight4Style,\n              toImgTop4Style = _state3.toImgTop4Style,\n              toImgLeft4Style = _state3.toImgLeft4Style;\n\n          _this2.setState({\n            frameWidth: frameWidth4Style,\n            frameHeight: frameHeight4Style,\n            originX: toImgLeft4Style,\n            originY: toImgTop4Style\n          });\n        });\n      });\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // event\n      document.addEventListener('mousemove', this.handleDrag.bind(this));\n      document.addEventListener('touchmove', this.handleDrag.bind(this));\n      document.addEventListener('mouseup', this.handleDragStop.bind(this));\n      document.addEventListener('touchend', this.handleDragStop.bind(this));\n      this.imgGetSizeBeforeLoad();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // remove event\n      document.removeEventListener('mousemove', this.handleDrag.bind(this));\n      document.removeEventListener('touchmove', this.handleDrag.bind(this));\n      document.removeEventListener('mouseup', this.handleDragStop.bind(this));\n      document.removeEventListener('touchend', this.handleDragStop.bind(this));\n    } // props change to update frame\n\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          originX = _props2.originX,\n          originY = _props2.originY; // img src changed\n\n      if (this.props.src !== newProps.src) {\n        return this.setState({\n          src: newProps.src\n        }, this.imgGetSizeBeforeLoad);\n      }\n\n      if (width !== newProps.width || height !== newProps.height || originX !== newProps.originX || originY !== newProps.originY) {\n        // update frame\n        this.setState({\n          frameWidth: newProps.width,\n          frameHeight: newProps.height,\n          originX: newProps.originX,\n          originY: newProps.originY\n        }, function () {\n          return _this3.initStyles();\n        });\n      }\n    } // image onloaded hook\n\n  }, {\n    key: 'imgOnLoad',\n    value: function imgOnLoad() {\n      this.props.onImgLoad();\n    } // adjust image height when image size scaleing change, also initialize styles\n\n  }, {\n    key: 'imgGetSizeBeforeLoad',\n    value: function imgGetSizeBeforeLoad() {\n      var _this4 = this; // trick way to get natural width of image after component did mount\n\n\n      setTimeout(function () {\n        var img = findDOMNode(_this4.img);\n\n        if (img && img.naturalWidth) {\n          // image scaleing\n          var imgHeight = parseInt(img.offsetWidth / img.naturalWidth * img.naturalHeight); // resize imgHeight\n\n          _this4.setState({\n            imgHeight: imgHeight,\n            imgLoaded: true\n          }, _this4.initStyles); // before image loaded hook\n\n\n          _this4.props.beforeImgLoad();\n        } else if (img) {\n          // catch if image natural width is 0\n          _this4.imgGetSizeBeforeLoad();\n        }\n      }, 0);\n    } // frame width, frame height, position left, position top\n\n  }, {\n    key: 'calcPosition',\n    value: function calcPosition(width, height, left, top, callback) {\n      var _state4 = this.state,\n          imgWidth = _state4.imgWidth,\n          imgHeight = _state4.imgHeight;\n      var _props3 = this.props,\n          ratio = _props3.ratio,\n          fixedRatio = _props3.fixedRatio; // width < 0 or height < 0, frame invalid\n\n      if (width < 0 || height < 0) return false; // if ratio is fixed\n\n      if (fixedRatio) {\n        // adjust by width\n        if (width / imgWidth > height / imgHeight) {\n          if (width > imgWidth) {\n            width = imgWidth;\n            left = 0;\n            height = width / ratio;\n          }\n        } else {\n          // adjust by height\n          if (height > imgHeight) {\n            height = imgHeight;\n            top = 0;\n            width = height * ratio;\n          }\n        }\n      } // frame width plus offset left, larger than img's width\n\n\n      if (width + left > imgWidth) {\n        if (fixedRatio) {\n          // if fixed ratio, adjust left with width\n          left = imgWidth - width;\n        } else {\n          // resize width with left\n          width = width - (width + left - imgWidth);\n        }\n      } // frame heigth plust offset top, larger than img's height\n\n\n      if (height + top > imgHeight) {\n        if (fixedRatio) {\n          // if fixed ratio, adjust top with height\n          top = imgHeight - height;\n        } else {\n          // resize height with top\n          height = height - (height + top - imgHeight);\n        }\n      } // left is invalid\n\n\n      if (left < 0) {\n        left = 0;\n      } // top is invalid\n\n\n      if (top < 0) {\n        top = 0;\n      } // if frame width larger than img width\n\n\n      if (width > imgWidth) {\n        width = imgWidth;\n      } // if frame height larger than img height\n\n\n      if (height > imgHeight) {\n        height = imgHeight;\n      }\n\n      this.setState({\n        toImgLeft4Style: left,\n        toImgTop4Style: top,\n        frameWidth4Style: width,\n        frameHeight4Style: height\n      }, function () {\n        if (callback) callback();\n      });\n    } // create a new frame, and drag, so frame width and height is became larger.\n\n  }, {\n    key: 'createNewFrame',\n    value: function createNewFrame(e) {\n      if (this.state.dragging) {\n        // click or touch event\n        var _ref = e.pageX ? e : e.targetTouches[0],\n            pageX = _ref.pageX,\n            pageY = _ref.pageY;\n\n        var _props4 = this.props,\n            ratio = _props4.ratio,\n            fixedRatio = _props4.fixedRatio;\n        var _state5 = this.state,\n            frameWidth = _state5.frameWidth,\n            frameHeight = _state5.frameHeight,\n            startPageX = _state5.startPageX,\n            startPageY = _state5.startPageY,\n            originX = _state5.originX,\n            originY = _state5.originY; // click or touch point's offset from source image top\n\n        var _x = pageX - startPageX;\n\n        var _y = pageY - startPageY; // frame new width, height, left, top\n\n\n        var _width = frameWidth + Math.abs(_x);\n\n        var _height = fixedRatio ? (frameWidth + Math.abs(_x)) / ratio : frameHeight + Math.abs(_y);\n\n        var _left = originX;\n        var _top = originY;\n\n        if (_y < 0) {\n          // drag and resize to top, top changing\n          _top = fixedRatio ? originY - Math.abs(_x) / ratio : originY - Math.abs(_y);\n        }\n\n        if (_x < 0) {\n          // drag and resize, go to left, left changing\n          _left = originX + _x;\n        } // calc position\n\n\n        return this.calcPosition(_width, _height, _left, _top);\n      }\n    } // frame move handler\n\n  }, {\n    key: 'frameMove',\n    value: function frameMove(e) {\n      var _state6 = this.state,\n          originX = _state6.originX,\n          originY = _state6.originY,\n          startPageX = _state6.startPageX,\n          startPageY = _state6.startPageY,\n          frameWidth = _state6.frameWidth,\n          frameHeight = _state6.frameHeight,\n          maxLeft = _state6.maxLeft,\n          maxTop = _state6.maxTop;\n\n      var _ref2 = e.pageX ? e : e.targetTouches[0],\n          pageX = _ref2.pageX,\n          pageY = _ref2.pageY;\n\n      var _x = pageX - startPageX + originX;\n\n      var _y = pageY - startPageY + originY;\n\n      if (pageX < 0 || pageY < 0) return false;\n      if (_x > maxLeft) _x = maxLeft;\n      if (_y > maxTop) _y = maxTop; // frame width, frame height not change, top and left changing\n\n      this.calcPosition(frameWidth, frameHeight, _x, _y);\n    } // drag dot to different direction\n\n  }, {\n    key: 'frameDotMove',\n    value: function frameDotMove(dir, e) {\n      var _ref3 = e.pageX ? e : e.targetTouches[0],\n          pageX = _ref3.pageX,\n          pageY = _ref3.pageY;\n\n      var _props5 = this.props,\n          ratio = _props5.ratio,\n          fixedRatio = _props5.fixedRatio;\n      var _state7 = this.state,\n          startPageX = _state7.startPageX,\n          startPageY = _state7.startPageY,\n          originX = _state7.originX,\n          originY = _state7.originY,\n          frameWidth4Style = _state7.frameWidth4Style,\n          frameHeight4Style = _state7.frameHeight4Style,\n          frameWidth = _state7.frameWidth,\n          frameHeight = _state7.frameHeight,\n          imgWidth = _state7.imgWidth,\n          imgHeight = _state7.imgHeight;\n\n      if (pageY !== 0 && pageX !== 0) {\n        // current drag position offset x and y to first drag start position\n        var _x = pageX - startPageX;\n\n        var _y = pageY - startPageY;\n\n        var _width = 0;\n        var _height = 0;\n        var _top = 0;\n        var _left = 0; // just calc width, height, left, top in each direction\n\n        switch (dir) {\n          case 'ne':\n            _width = frameWidth + _x;\n            _height = fixedRatio ? _width / ratio : frameHeight - _y;\n            _left = originX;\n            _top = fixedRatio ? originY - _x / ratio : originY + _y;\n            break;\n\n          case 'e':\n            _width = frameWidth + _x;\n            _height = fixedRatio ? _width / ratio : frameHeight;\n            _left = originX;\n            _top = fixedRatio ? originY - _x / ratio * 0.5 : originY;\n            break;\n\n          case 'se':\n            _width = frameWidth + _x;\n            _height = fixedRatio ? _width / ratio : frameHeight + _y;\n            _left = originX;\n            _top = originY;\n            break;\n\n          case 'n':\n            _height = frameHeight - _y;\n            _width = fixedRatio ? _height * ratio : frameWidth;\n            _left = fixedRatio ? originX + _y * ratio * 0.5 : originX;\n            _top = originY + _y;\n            break;\n\n          case 'nw':\n            _width = frameWidth - _x;\n            _height = fixedRatio ? _width / ratio : frameHeight - _y;\n            _left = originX + _x;\n            _top = fixedRatio ? originY + _x / ratio : originY + _y;\n            break;\n\n          case 'w':\n            _width = frameWidth - _x;\n            _height = fixedRatio ? _width / ratio : frameHeight;\n            _left = originX + _x;\n            _top = fixedRatio ? originY + _x / ratio * 0.5 : originY;\n            break;\n\n          case 'sw':\n            _width = frameWidth - _x;\n            _height = fixedRatio ? _width / ratio : frameHeight + _y;\n            _left = originX + _x;\n            _top = originY;\n            break;\n\n          case 's':\n            _height = frameHeight + _y;\n            _width = fixedRatio ? _height * ratio : frameWidth;\n            _left = fixedRatio ? originX - _y * ratio * 0.5 : originX;\n            _top = originY;\n            break;\n\n          default:\n            break;\n        }\n\n        if (_width > imgWidth || _height > imgHeight) {\n          if (frameWidth4Style >= imgWidth || frameHeight4Style >= imgHeight) {\n            return false;\n          }\n        }\n\n        return this.calcPosition(_width, _height, _left, _top);\n      }\n    } // judge whether to create new frame, frame or frame dot move acroding to action\n\n  }, {\n    key: 'handleDrag',\n    value: function handleDrag(e) {\n      if (this.state.dragging) {\n        e.preventDefault();\n        var action = this.state.action;\n        if (!action) return this.createNewFrame(e);\n        if (action === 'move') return this.frameMove(e);\n        this.frameDotMove(action, e);\n      }\n    } // starting dragging\n\n  }, {\n    key: 'handleDragStart',\n    value: function handleDragStart(e) {\n      var _this5 = this;\n\n      var allowNewSelection = this.props.allowNewSelection;\n      var action = e.target.getAttribute('data-action') ? e.target.getAttribute('data-action') : e.target.parentNode.getAttribute('data-action');\n\n      var _ref4 = e.pageX ? e : e.targetTouches[0],\n          pageX = _ref4.pageX,\n          pageY = _ref4.pageY; // if drag or move or allow new selection, change startPageX, startPageY, dragging state\n\n\n      if (action || allowNewSelection) {\n        e.preventDefault(); // drag start, set startPageX, startPageY for dragging start point\n\n        this.setState({\n          startPageX: pageX,\n          startPageY: pageY,\n          dragging: true,\n          action: action\n        });\n      } // if no action and allowNewSelection, then create a new frame\n\n\n      if (!action && allowNewSelection) {\n        var container = findDOMNode(this.container);\n        var offsetLeft = container.offsetLeft,\n            offsetTop = container.offsetTop;\n        this.setState({\n          // set offset left and top of new frame\n          originX: pageX - offsetLeft,\n          originY: pageY - offsetTop,\n          frameWidth: 2,\n          frameHeight: 2\n        }, function () {\n          return _this5.calcPosition(2, 2, pageX - offsetLeft, pageY - offsetTop);\n        });\n      }\n    } // crop image\n\n  }, {\n    key: 'crop',\n    value: function crop() {\n      var img = findDOMNode(this.img);\n      var canvas = document.createElement('canvas');\n      var _values$original = this.values().original,\n          x = _values$original.x,\n          y = _values$original.y,\n          width = _values$original.width,\n          height = _values$original.height;\n      canvas.width = width;\n      canvas.height = height;\n      canvas.getContext('2d').drawImage(img, x, y, width, height, 0, 0, width, height);\n      return canvas.toDataURL();\n    } // get current values\n\n  }, {\n    key: 'values',\n    value: function values() {\n      var img = findDOMNode(this.img);\n      var _state8 = this.state,\n          frameWidth = _state8.frameWidth,\n          frameHeight = _state8.frameHeight,\n          originX = _state8.originX,\n          originY = _state8.originY,\n          imgWidth = _state8.imgWidth,\n          imgHeight = _state8.imgHeight; // crop accroding image's natural width\n\n      var _scale = img.naturalWidth / imgWidth;\n\n      var realFrameWidth = frameWidth * _scale;\n      var realFrameHeight = frameHeight * _scale;\n      var realOriginX = originX * _scale;\n      var realOriginY = originY * _scale;\n      return {\n        display: {\n          width: frameWidth,\n          height: frameHeight,\n          x: originX,\n          y: originY,\n          imgWidth: imgWidth,\n          imgHeight: imgHeight\n        },\n        original: {\n          width: realFrameWidth,\n          height: realFrameHeight,\n          x: realOriginX,\n          y: realOriginY,\n          imgWidth: img.naturalWidth,\n          imgHeight: img.naturalHeight\n        }\n      };\n    } // stop dragging\n\n  }, {\n    key: 'handleDragStop',\n    value: function handleDragStop(e) {\n      var _this6 = this;\n\n      if (this.state.dragging) {\n        e.preventDefault();\n\n        var _findDOMNode = findDOMNode(this.frameNode),\n            offsetLeft = _findDOMNode.offsetLeft,\n            offsetTop = _findDOMNode.offsetTop,\n            offsetWidth = _findDOMNode.offsetWidth,\n            offsetHeight = _findDOMNode.offsetHeight;\n\n        var _state9 = this.state,\n            imgWidth = _state9.imgWidth,\n            imgHeight = _state9.imgHeight;\n        this.setState({\n          originX: offsetLeft,\n          originY: offsetTop,\n          dragging: false,\n          frameWidth: offsetWidth,\n          frameHeight: offsetHeight,\n          maxLeft: imgWidth - offsetWidth,\n          maxTop: imgHeight - offsetHeight,\n          action: null\n        }, function () {\n          var onChange = _this6.props.onChange;\n          if (onChange) onChange(_this6.values());\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this7 = this;\n\n      var _state10 = this.state,\n          dragging = _state10.dragging,\n          imgHeight = _state10.imgHeight,\n          imgWidth = _state10.imgWidth,\n          imgLoaded = _state10.imgLoaded,\n          styles = _state10.styles,\n          src = _state10.src;\n      var disabled = this.props.disabled;\n      var imageNode = React.createElement('div', {\n        style: styles.source,\n        ref: function ref(_ref6) {\n          _this7.sourceNode = _ref6;\n        }\n      }, React.createElement('img', {\n        crossOrigin: 'anonymous',\n        src: src,\n        width: imgWidth,\n        height: imgHeight,\n        ref: function ref(_ref5) {\n          _this7.img = _ref5;\n        },\n        style: deepExtend({}, styles.img, styles.source_img),\n        onLoad: this.imgOnLoad.bind(this)\n      })); // disabled cropper\n\n      if (disabled) {\n        return React.createElement('div', {\n          style: deepExtend({}, styles.container, {\n            'position': 'relative',\n            'height': imgHeight\n          }),\n          ref: function ref(_ref7) {\n            _this7.container = _ref7;\n          }\n        }, imageNode, React.createElement('div', {\n          style: deepExtend({}, styles.modal, styles.modal_disabled)\n        }));\n      }\n\n      return React.createElement('div', {\n        onMouseDown: this.handleDragStart.bind(this),\n        onTouchStart: this.handleDragStart.bind(this),\n        style: deepExtend({}, styles.container, {\n          'position': 'relative',\n          'height': imgHeight\n        }),\n        ref: function ref(_ref10) {\n          _this7.container = _ref10;\n        }\n      }, imageNode, imgLoaded ? React.createElement('div', null, React.createElement('div', {\n        style: styles.modal\n      }), React.createElement('div', {\n        style: deepExtend({}, styles.frame, dragging ? styles.dragging_frame : {}, {\n          display: 'block',\n          left: this.state.toImgLeft4Style,\n          top: this.state.toImgTop4Style,\n          width: this.state.frameWidth4Style,\n          height: this.state.frameHeight4Style\n        }),\n        ref: function ref(_ref9) {\n          _this7.frameNode = _ref9;\n        }\n      }, React.createElement('div', {\n        style: styles.clone\n      }, React.createElement('img', {\n        src: src,\n        crossOrigin: 'anonymous',\n        width: imgWidth,\n        height: imgHeight,\n        style: deepExtend({}, styles.img, {\n          marginLeft: -1 * this.state.toImgLeft4Style,\n          marginTop: -1 * this.state.toImgTop4Style\n        }),\n        ref: function ref(_ref8) {\n          _this7.cloneImg = _ref8;\n        }\n      })), React.createElement('span', {\n        'data-action': 'move',\n        style: styles.move\n      }), React.createElement('span', {\n        'data-action': 'move',\n        style: deepExtend({}, styles.dot, styles.dotCenter)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerCenterVertical)\n      }), React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerCenterHorizontal)\n      })), React.createElement('span', {\n        'data-action': 'ne',\n        style: deepExtend({}, styles.dot, styles.dotNE)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerNE)\n      })), React.createElement('span', {\n        'data-action': 'n',\n        style: deepExtend({}, styles.dot, styles.dotN)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerN)\n      })), React.createElement('span', {\n        'data-action': 'nw',\n        style: deepExtend({}, styles.dot, styles.dotNW)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerNW)\n      })), React.createElement('span', {\n        'data-action': 'e',\n        style: deepExtend({}, styles.dot, styles.dotE)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerE)\n      })), React.createElement('span', {\n        'data-action': 'w',\n        style: deepExtend({}, styles.dot, styles.dotW)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerW)\n      })), React.createElement('span', {\n        'data-action': 'se',\n        style: deepExtend({}, styles.dot, styles.dotSE)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerSE)\n      })), React.createElement('span', {\n        'data-action': 's',\n        style: deepExtend({}, styles.dot, styles.dotS)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerS)\n      })), React.createElement('span', {\n        'data-action': 'sw',\n        style: deepExtend({}, styles.dot, styles.dotSW)\n      }, React.createElement('span', {\n        style: deepExtend({}, styles.dotInner, styles.dotInnerSW)\n      })), React.createElement('span', {\n        'data-action': 'n',\n        style: deepExtend({}, styles.line, styles.lineN)\n      }), React.createElement('span', {\n        'data-action': 's',\n        style: deepExtend({}, styles.line, styles.lineS)\n      }), React.createElement('span', {\n        'data-action': 'w',\n        style: deepExtend({}, styles.line, styles.lineW)\n      }), React.createElement('span', {\n        'data-action': 'e',\n        style: deepExtend({}, styles.line, styles.lineE)\n      }))) : null);\n    }\n  }]);\n\n  return Cropper;\n}(Component);\n\nCropper.propTypes = {\n  src: PropTypes.string.isRequired,\n  originX: PropTypes.number,\n  originY: PropTypes.number,\n  ratio: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  fixedRatio: PropTypes.bool,\n  allowNewSelection: PropTypes.bool,\n  disabled: PropTypes.bool,\n  styles: PropTypes.object,\n  onImgLoad: PropTypes.func,\n  beforeImgLoad: PropTypes.func,\n  onChange: PropTypes.func\n};\nCropper.defaultProps = {\n  width: 200,\n  height: 200,\n  fixedRatio: true,\n  allowNewSelection: true,\n  ratio: 1,\n  originX: 0,\n  originY: 0,\n  styles: {},\n  onImgLoad: function onImgLoad() {},\n  beforeImgLoad: function beforeImgLoad() {}\n  /*\n  default inline styles\n  */\n\n};\nvar defaultStyles = {\n  container: {},\n  img: {\n    userDrag: 'none',\n    userSelect: 'none',\n    MozUserSelect: 'none',\n    WebkitUserDrag: 'none',\n    WebkitUserSelect: 'none',\n    WebkitTransform: 'translateZ(0)',\n    WebkitPerspective: 1000,\n    WebkitBackfaceVisibility: 'hidden'\n  },\n  clone: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'absolute',\n    left: 0,\n    top: 0\n  },\n  frame: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n    display: 'none'\n  },\n  dragging_frame: {\n    opacity: 0.8\n  },\n  source: {\n    overflow: 'hidden'\n  },\n  source_img: {\n    float: 'left'\n  },\n  modal: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n    opacity: 0.4,\n    backgroundColor: '#000'\n  },\n  modal_disabled: {\n    backgroundColor: '#666',\n    opacity: 0.7,\n    cursor: 'not-allowed'\n  },\n  move: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n    cursor: 'move',\n    outline: '1px dashed #88f',\n    backgroundColor: 'transparent'\n  },\n  dot: {\n    zIndex: 10\n  },\n  dotN: {\n    cursor: 'n-resize'\n  },\n  dotS: {\n    cursor: 's-resize'\n  },\n  dotE: {\n    cursor: 'e-resize'\n  },\n  dotW: {\n    cursor: 'w-resize'\n  },\n  dotNW: {\n    cursor: 'nw-resize'\n  },\n  dotNE: {\n    cursor: 'ne-resize'\n  },\n  dotSW: {\n    cursor: 'sw-resize'\n  },\n  dotSE: {\n    cursor: 'se-resize'\n  },\n  dotCenter: {\n    backgroundColor: 'transparent',\n    cursor: 'move'\n  },\n  dotInner: {\n    border: '1px solid #88f',\n    background: '#fff',\n    display: 'block',\n    width: 6,\n    height: 6,\n    padding: 0,\n    margin: 0,\n    position: 'absolute'\n  },\n  dotInnerN: {\n    top: -4,\n    left: '50%',\n    marginLeft: -4\n  },\n  dotInnerS: {\n    bottom: -4,\n    left: '50%',\n    marginLeft: -4\n  },\n  dotInnerE: {\n    right: -4,\n    top: '50%',\n    marginTop: -4\n  },\n  dotInnerW: {\n    left: -4,\n    top: '50%',\n    marginTop: -4\n  },\n  dotInnerNE: {\n    top: -4,\n    right: -4\n  },\n  dotInnerSE: {\n    bottom: -4,\n    right: -4\n  },\n  dotInnerNW: {\n    top: -4,\n    left: -4\n  },\n  dotInnerSW: {\n    bottom: -4,\n    left: -4\n  },\n  dotInnerCenterVertical: {\n    position: 'absolute',\n    border: 'none',\n    width: 2,\n    height: 8,\n    backgroundColor: '#88f',\n    top: '50%',\n    left: '50%',\n    marginLeft: -1,\n    marginTop: -4\n  },\n  dotInnerCenterHorizontal: {\n    position: 'absolute',\n    border: 'none',\n    width: 8,\n    height: 2,\n    backgroundColor: '#88f',\n    top: '50%',\n    left: '50%',\n    marginLeft: -4,\n    marginTop: -1\n  },\n  line: {\n    position: 'absolute',\n    display: 'block',\n    zIndex: 100\n  },\n  lineS: {\n    cursor: 's-resize',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    height: 4,\n    background: 'transparent'\n  },\n  lineN: {\n    cursor: 'n-resize',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: 4,\n    background: 'transparent'\n  },\n  lineE: {\n    cursor: 'e-resize',\n    right: 0,\n    top: 0,\n    width: 4,\n    height: '100%',\n    background: 'transparent'\n  },\n  lineW: {\n    cursor: 'w-resize',\n    left: 0,\n    top: 0,\n    width: 4,\n    height: '100%',\n    background: 'transparent'\n  }\n};\nmodule.exports = Cropper;","map":null,"metadata":{},"sourceType":"script"}