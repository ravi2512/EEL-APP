{"ast":null,"code":"import _defineProperty from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Components/ImageCropper/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { Row, Col, Card, CardBody, CardTitle, Button } from 'reactstrap';\nimport { Cropper } from 'react-image-cropper';\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport DemoImg from '../../../assets/utils/images/originals/fence-small.jpg';\n\nvar ImageCropExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageCropExample, _Component);\n\n  function ImageCropExample(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCropExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCropExample).call(this, props));\n    _this.state = {\n      imgSrc: DemoImg,\n      image: '',\n      imageLoaded: false,\n      image1: '',\n      imageL1oaded: false,\n      image2: '',\n      image2Loaded: false,\n      image3: '',\n      image3Loaded: false,\n      image4: '',\n      image4Loaded: false,\n      image4BeforeLoaded: false,\n      image4Values: ''\n    };\n    return _this;\n  }\n\n  _createClass(ImageCropExample, [{\n    key: \"handleImageLoaded\",\n    value: function handleImageLoaded(state) {\n      this.setState(_defineProperty({}, state + 'Loaded', true));\n    }\n  }, {\n    key: \"handleBeforeImageLoad\",\n    value: function handleBeforeImageLoad(state) {\n      this.setState(_defineProperty({}, state + 'BeforeLoaded', true));\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(state) {\n      var node = this[state];\n      this.setState(_defineProperty({}, state, node.crop()));\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(state, values) {\n      this.setState(_defineProperty({}, state + 'Values', values));\n    }\n  }, {\n    key: \"handleGetValues\",\n    value: function handleGetValues(state) {\n      var node = this[state];\n      this.setState(_defineProperty({}, state + 'Values', node.values()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(PageTitle, {\n        heading: \"Image Crop\",\n        subheading: \"You can easily crop and edit images with this React plugin.\",\n        icon: \"pe-7s-signal icon-gradient bg-malibu-beach\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(ReactCSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Basic\"), React.createElement(Cropper, {\n        src: this.state.imgSrc,\n        ref: function ref(_ref) {\n          _this2.image = _ref;\n        },\n        onImgLoad: function onImgLoad() {\n          return _this2.handleImageLoaded('image');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.imageLoaded ? React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleClick('image');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Crop Selection\")) : null, this.state.image ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Cropped Result\")), React.createElement(\"img\", {\n        className: \"after-img rounded\",\n        src: this.state.image,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })) : null))), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Predefined start X, Y origins\"), React.createElement(Cropper, {\n        src: this.state.imgSrc,\n        originX: 100,\n        originY: 100,\n        ref: function ref(_ref2) {\n          _this2.image1 = _ref2;\n        },\n        onImgLoad: function onImgLoad() {\n          return _this2.handleImageLoaded('image1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.state.image1Loaded ? React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleClick('image1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Crop Selection\")) : null, this.state.image1 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Cropped Result\")), React.createElement(\"img\", {\n        className: \"after-img rounded\",\n        src: this.state.image1,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })) : null))), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Disabled\"), React.createElement(Cropper, {\n        src: this.state.imgSrc,\n        ref: function ref(_ref3) {\n          _this2.image3 = _ref3;\n        },\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        lg: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Predefined Ratio\"), React.createElement(Cropper, {\n        src: this.state.imgSrc,\n        ratio: 16 / 9,\n        width: 300,\n        ref: function ref(_ref4) {\n          _this2.image2 = _ref4;\n        },\n        onImgLoad: function onImgLoad() {\n          return _this2.handleImageLoaded('image2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), this.state.image2Loaded ? React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleClick('image2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Crop Selection\")) : null, this.state.image2 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Cropped Result\")), React.createElement(\"img\", {\n        className: \"after-img rounded\",\n        src: this.state.image2,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })) : null)), React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Custom Styles\"), React.createElement(Cropper, {\n        src: this.state.imgSrc,\n        width: 200,\n        height: 500,\n        originX: 200,\n        originY: 50,\n        fixedRatio: false,\n        allowNewSelection: false,\n        onChange: function onChange(values) {\n          return _this2.handleChange('image4', values);\n        },\n        styles: {\n          source_img: {\n            WebkitFilter: 'blur(3.5px)',\n            filter: 'blur(3.5px)'\n          },\n          modal: {\n            opacity: 0.5,\n            backgroundColor: '#fff'\n          },\n          dotInner: {\n            borderColor: '#ff0000'\n          },\n          dotInnerCenterVertical: {\n            backgroundColor: '#ff0000'\n          },\n          dotInnerCenterHorizontal: {\n            backgroundColor: '#ff0000'\n          }\n        },\n        ref: function ref(_ref5) {\n          _this2.image4 = _ref5;\n        },\n        onImgLoad: function onImgLoad() {\n          return _this2.handleImageLoaded('image4');\n        },\n        beforeImgLoad: function beforeImgLoad() {\n          return _this2.handleBeforeImageLoad('image4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, this.state.image4Loaded ? React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleClick('image4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Crop Selection\") : null, this.state.image4 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Cropped Result\")), React.createElement(\"img\", {\n        className: \"after-img rounded\",\n        src: this.state.image4,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })) : null)))))));\n    }\n  }]);\n\n  return ImageCropExample;\n}(Component);\n\n;\nexport default ImageCropExample;","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/Components/ImageCropper/index.js"],"names":["React","Component","Fragment","ReactCSSTransitionGroup","Row","Col","Card","CardBody","CardTitle","Button","Cropper","PageTitle","DemoImg","ImageCropExample","props","state","imgSrc","image","imageLoaded","image1","imageL1oaded","image2","image2Loaded","image3","image3Loaded","image4","image4Loaded","image4BeforeLoaded","image4Values","setState","node","crop","values","ref","handleImageLoaded","handleClick","image1Loaded","handleChange","source_img","WebkitFilter","filter","modal","opacity","backgroundColor","dotInner","borderColor","dotInnerCenterVertical","dotInnerCenterHorizontal","handleBeforeImageLoad"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport {\r\n    Row, Col,\r\n    Card, CardBody,\r\n    CardTitle, Button\r\n} from 'reactstrap';\r\n\r\nimport {Cropper} from 'react-image-cropper'\r\n\r\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\r\n\r\nimport DemoImg from '../../../assets/utils/images/originals/fence-small.jpg';\r\n\r\nclass ImageCropExample extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            imgSrc: DemoImg,\r\n            image: '',\r\n            imageLoaded: false,\r\n            image1: '',\r\n            imageL1oaded: false,\r\n            image2: '',\r\n            image2Loaded: false,\r\n            image3: '',\r\n            image3Loaded: false,\r\n            image4: '',\r\n            image4Loaded: false,\r\n            image4BeforeLoaded: false,\r\n            image4Values: ''\r\n        }\r\n    }\r\n\r\n    handleImageLoaded(state) {\r\n        this.setState({\r\n            [state + 'Loaded']: true\r\n        })\r\n    }\r\n\r\n    handleBeforeImageLoad(state) {\r\n        this.setState({\r\n            [state + 'BeforeLoaded']: true\r\n        })\r\n    }\r\n\r\n    handleClick(state) {\r\n        let node = this[state]\r\n        this.setState({\r\n            [state]: node.crop()\r\n        })\r\n    }\r\n\r\n    handleChange(state, values) {\r\n        this.setState({\r\n            [state + 'Values']: values\r\n        })\r\n    }\r\n\r\n    handleGetValues(state) {\r\n        let node = this[state]\r\n        this.setState({\r\n            [state + 'Values']: node.values()\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <PageTitle\r\n                    heading=\"Image Crop\"\r\n                    subheading=\"You can easily crop and edit images with this React plugin.\"\r\n                    icon=\"pe-7s-signal icon-gradient bg-malibu-beach\"\r\n                />\r\n                <ReactCSSTransitionGroup\r\n                    component=\"div\"\r\n                    transitionName=\"TabsAnimation\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={0}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Basic</CardTitle>\r\n                                    <Cropper src={this.state.imgSrc}\r\n                                             ref={ref => {\r\n                                                 this.image = ref\r\n                                             }}\r\n                                             onImgLoad={() => this.handleImageLoaded('image')}\r\n                                    />\r\n                                    <div className=\"divider\"/>\r\n                                    <div className=\"text-center\">\r\n                                        {\r\n                                            this.state.imageLoaded\r\n                                                ?\r\n                                                <div className=\"text-center\">\r\n                                                    <Button color=\"primary\"\r\n                                                            onClick={() => this.handleClick('image')}\r\n                                                    >\r\n                                                        Crop Selection\r\n                                                    </Button>\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n\r\n                                        {\r\n                                            this.state.image\r\n                                                ?\r\n                                                <div>\r\n                                                    <div className=\"divider\"/>\r\n                                                    <div>\r\n                                                        <h6>Cropped Result</h6>\r\n                                                    </div>\r\n                                                    <img\r\n                                                        className=\"after-img rounded\"\r\n                                                        src={this.state.image}\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Predefined start X, Y origins</CardTitle>\r\n                                    <Cropper\r\n                                        src={this.state.imgSrc}\r\n                                        originX={100}\r\n                                        originY={100}\r\n                                        ref={ref => {\r\n                                            this.image1 = ref\r\n                                        }}\r\n                                        onImgLoad={() => this.handleImageLoaded('image1')}\r\n                                    />\r\n                                    <div className=\"divider\"/>\r\n                                    <div className=\"text-center\">\r\n                                        {\r\n                                            this.state.image1Loaded\r\n                                                ?\r\n                                                <div className=\"text-center\">\r\n                                                    <Button color=\"primary\"\r\n                                                            onClick={() => this.handleClick('image1')}\r\n                                                    >\r\n                                                        Crop Selection\r\n                                                    </Button>\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n                                        {\r\n                                            this.state.image1\r\n                                                ?\r\n                                                <div>\r\n                                                    <div className=\"divider\"/>\r\n                                                    <div>\r\n                                                        <h6>Cropped Result</h6>\r\n                                                    </div>\r\n                                                    <img\r\n                                                        className=\"after-img rounded\"\r\n                                                        src={this.state.image1}\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Disabled</CardTitle>\r\n                                    <Cropper\r\n                                        src={this.state.imgSrc}\r\n                                        ref={ref => {\r\n                                            this.image3 = ref\r\n                                        }}\r\n                                        disabled\r\n                                    />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Predefined Ratio</CardTitle>\r\n                                    <Cropper\r\n                                        src={this.state.imgSrc}\r\n                                        ratio={16 / 9}\r\n                                        width={300}\r\n                                        ref={ref => {\r\n                                            this.image2 = ref\r\n                                        }}\r\n                                        onImgLoad={() => this.handleImageLoaded('image2')}\r\n                                    />\r\n                                    <div className=\"divider\"/>\r\n                                    {\r\n                                        this.state.image2Loaded\r\n                                            ?\r\n                                            <div className=\"text-center\">\r\n                                                <Button color=\"primary\"\r\n                                                        onClick={() => this.handleClick('image2')}\r\n                                                >\r\n                                                    Crop Selection\r\n                                                </Button>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n\r\n                                    {\r\n                                        this.state.image2\r\n                                            ?\r\n                                            <div>\r\n                                                <div className=\"divider\"/>\r\n                                                <div>\r\n                                                    <h6>Cropped Result</h6>\r\n                                                </div>\r\n                                                <img\r\n                                                    className=\"after-img rounded\"\r\n                                                    src={this.state.image2}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <CardTitle>Custom Styles</CardTitle>\r\n                                    <Cropper\r\n                                        src={this.state.imgSrc}\r\n                                        width={200}\r\n                                        height={500}\r\n                                        originX={200}\r\n                                        originY={50}\r\n                                        fixedRatio={false}\r\n                                        allowNewSelection={false}\r\n                                        onChange={values => this.handleChange('image4', values)}\r\n                                        styles={{\r\n                                            source_img: {\r\n                                                WebkitFilter: 'blur(3.5px)',\r\n                                                filter: 'blur(3.5px)'\r\n                                            },\r\n                                            modal: {\r\n                                                opacity: 0.5,\r\n                                                backgroundColor: '#fff'\r\n                                            },\r\n                                            dotInner: {\r\n                                                borderColor: '#ff0000'\r\n                                            },\r\n                                            dotInnerCenterVertical: {\r\n                                                backgroundColor: '#ff0000'\r\n                                            },\r\n                                            dotInnerCenterHorizontal: {\r\n                                                backgroundColor: '#ff0000'\r\n                                            }\r\n                                        }}\r\n                                        ref={ref => {\r\n                                            this.image4 = ref\r\n                                        }}\r\n                                        onImgLoad={() => this.handleImageLoaded('image4')}\r\n                                        beforeImgLoad={() => this.handleBeforeImageLoad('image4')}\r\n                                    />\r\n                                    <div className=\"divider\"/>\r\n                                    <div className=\"text-center\">\r\n                                        {\r\n                                            this.state.image4Loaded\r\n                                                ? <Button color=\"primary\"\r\n                                                          onClick={() => this.handleClick('image4')}\r\n                                                >\r\n                                                    Crop Selection\r\n                                                </Button>\r\n                                                : null\r\n                                        }\r\n                                        {\r\n                                            this.state.image4\r\n                                                ?\r\n                                                <div>\r\n                                                    <div className=\"divider\"/>\r\n                                                    <div>\r\n                                                        <h6>Cropped Result</h6>\r\n                                                    </div>\r\n                                                    <img\r\n                                                        className=\"after-img rounded\"\r\n                                                        src={this.state.image4}\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </ReactCSSTransitionGroup>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageCropExample;"]},"metadata":{},"sourceType":"module"}