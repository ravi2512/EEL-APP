{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Dashboards/Minimal/Examples/Column.jsx\";\nimport React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\n\nvar Column =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Column, _Component);\n\n  function Column(props) {\n    var _this;\n\n    _classCallCheck(this, Column);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Column).call(this, props));\n    _this.state = {\n      options55: {\n        chart: {\n          height: 350,\n          type: 'bar',\n          sparkline: {\n            enabled: true\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            endingShape: 'rounded',\n            columnWidth: '55%'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n        },\n        yaxis: {\n          title: {\n            text: '$ (thousands)'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return \"$ \" + val + \" thousands\";\n            }\n          }\n        }\n      },\n      series55: [{\n        name: 'Net Profit',\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n      }, {\n        name: 'Revenue',\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n      }, {\n        name: 'Free Cash Flow',\n        data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Column, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        options: this.state.options55,\n        series: this.state.series55,\n        type: \"bar\",\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Column;\n}(Component);\n\nexport default Column;","map":{"version":3,"sources":["/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Dashboards/Minimal/Examples/Column.jsx"],"names":["React","Component","Chart","Column","props","state","options55","chart","height","type","sparkline","enabled","plotOptions","bar","horizontal","endingShape","columnWidth","dataLabels","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","series55","name","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAE,GADL;AAEHC,UAAAA,IAAI,EAAE,KAFH;AAGHC,UAAAA,SAAS,EAAE;AACPC,YAAAA,OAAO,EAAE;AADF;AAHR,SADA;AAQPC,QAAAA,WAAW,EAAE;AACTC,UAAAA,GAAG,EAAE;AACDC,YAAAA,UAAU,EAAE,KADX;AAEDC,YAAAA,WAAW,EAAE,SAFZ;AAGDC,YAAAA,WAAW,EAAE;AAHZ;AADI,SARN;AAePC,QAAAA,UAAU,EAAE;AACRN,UAAAA,OAAO,EAAE;AADD,SAfL;AAkBPO,QAAAA,MAAM,EAAE;AACJC,UAAAA,IAAI,EAAE,IADF;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,MAAM,EAAE,CAAC,aAAD;AAHJ,SAlBD;AAuBPC,QAAAA,KAAK,EAAE;AACHC,UAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD;AADT,SAvBA;AA0BPC,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAE;AADH;AADJ,SA1BA;AA+BPC,QAAAA,IAAI,EAAE;AACFC,UAAAA,OAAO,EAAE;AADP,SA/BC;AAmCPC,QAAAA,OAAO,EAAE;AACLC,UAAAA,CAAC,EAAE;AACCC,YAAAA,SAAS,EAAE,mBAAUC,GAAV,EAAe;AACtB,qBAAO,OAAOA,GAAP,GAAa,YAApB;AACH;AAHF;AADE;AAnCF,OADF;AA4CTC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC;AAFC,OAAD,EAGP;AACCD,QAAAA,IAAI,EAAE,SADP;AAECC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,EAAd,EAAkB,EAAlB,EAAsB,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC,EAApC;AAFP,OAHO,EAMP;AACCD,QAAAA,IAAI,EAAE,gBADP;AAECC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC;AAFP,OANO;AA5CD,KAAb;AAHe;AA0DlB;;;;6BAEQ;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAK9B,KAAL,CAAWC,SAA3B;AAAsC,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAW4B,QAAzD;AAAmE,QAAA,IAAI,EAAC,KAAxE;AAA8E,QAAA,KAAK,EAAC,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EArEgBhC,S;;AAwErB,eAAeE,MAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Chart from 'react-apexcharts'\r\n\r\nclass Column extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            options55: {\r\n                chart: {\r\n                    height: 350,\r\n                    type: 'bar',\r\n                    sparkline: {\r\n                        enabled: true,\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        endingShape: 'rounded',\r\n                        columnWidth: '55%',\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\r\n                },\r\n                yaxis: {\r\n                    title: {\r\n                        text: '$ (thousands)'\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n\r\n                },\r\n                tooltip: {\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$ \" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            series55: [{\r\n                name: 'Net Profit',\r\n                data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\r\n            }, {\r\n                name: 'Free Cash Flow',\r\n                data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\r\n            }],\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"column\">\r\n                <Chart options={this.state.options55} series={this.state.series55} type=\"bar\" width=\"100%\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Column;\r\n"]},"metadata":{},"sourceType":"module"}