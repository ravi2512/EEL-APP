{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Components/Maps/Examples/VectorMaps/Markers.js\";\nimport React, { Fragment } from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport world from './Static/world-50m.json';\nvar include = [\"ARG\", \"BOL\", \"BRA\", \"CHL\", \"COL\", \"ECU\", \"GUY\", \"PRY\", \"PER\", \"SUR\", \"URY\", \"VEN\"];\nvar markers = [{\n  markerOffset: -25,\n  name: \"Buenos Aires\",\n  coordinates: [-58.3816, -34.6037]\n}, {\n  markerOffset: -25,\n  name: \"La Paz\",\n  coordinates: [-68.1193, -16.4897]\n}, {\n  markerOffset: 35,\n  name: \"Brasilia\",\n  coordinates: [-47.8825, -15.7942]\n}, {\n  markerOffset: 35,\n  name: \"Santiago\",\n  coordinates: [-70.6693, -33.4489]\n}, {\n  markerOffset: 35,\n  name: \"Bogota\",\n  coordinates: [-74.0721, 4.7110]\n}, {\n  markerOffset: 35,\n  name: \"Quito\",\n  coordinates: [-78.4678, -0.1807]\n}, {\n  markerOffset: -25,\n  name: \"Georgetown\",\n  coordinates: [-58.1551, 6.8013]\n}, {\n  markerOffset: -25,\n  name: \"Asuncion\",\n  coordinates: [-57.5759, -25.2637]\n}, {\n  markerOffset: 35,\n  name: \"Paramaribo\",\n  coordinates: [-55.2038, 5.8520]\n}, {\n  markerOffset: 35,\n  name: \"Montevideo\",\n  coordinates: [-56.1645, -34.9011]\n}, {\n  markerOffset: -25,\n  name: \"Caracas\",\n  coordinates: [-66.9036, 10.4806]\n}];\n\nvar VectorMapsMarkers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VectorMapsMarkers, _React$Component);\n\n  function VectorMapsMarkers() {\n    _classCallCheck(this, VectorMapsMarkers);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VectorMapsMarkers).apply(this, arguments));\n  }\n\n  _createClass(VectorMapsMarkers, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ComposableMap, {\n        projectionConfig: {\n          scale: 605\n        },\n        width: 980,\n        height: 551,\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        center: [-30, -25],\n        disablePanning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: world,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          return include.indexOf(geography.id) !== -1 && React.createElement(Geography, {\n            key: i,\n            geography: geography,\n            projection: projection,\n            style: {\n              default: {\n                fill: \"#e9ecef\",\n                stroke: \"#adb5bd\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#CFD8DC\",\n                stroke: \"#adb5bd\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#3f6ad8\",\n                stroke: \"#adb5bd\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n        });\n      }), React.createElement(Markers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, markers.map(function (marker, i) {\n        return React.createElement(Marker, {\n          key: i,\n          marker: marker,\n          style: {\n            default: {\n              fill: \"#3f6ad8\"\n            },\n            hover: {\n              fill: \"#FFFFFF\"\n            },\n            pressed: {\n              fill: \"#3f6ad8\"\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"circle\", {\n          cx: 0,\n          cy: 0,\n          r: 10,\n          style: {\n            stroke: \"#3f6ad8\",\n            strokeWidth: 3,\n            opacity: 0.9\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"text\", {\n          textAnchor: \"middle\",\n          y: marker.markerOffset,\n          style: {\n            fontFamily: \"Bariol, sans-serif\",\n            fill: \"#adb5bd\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, marker.name));\n      })))));\n    }\n  }]);\n\n  return VectorMapsMarkers;\n}(React.Component);\n\nexport { VectorMapsMarkers as default };","map":{"version":3,"sources":["/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Components/Maps/Examples/VectorMaps/Markers.js"],"names":["React","Fragment","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","world","include","markers","markerOffset","name","coordinates","VectorMapsMarkers","scale","width","height","geographies","projection","map","geography","i","indexOf","id","default","fill","stroke","strokeWidth","outline","hover","pressed","marker","opacity","fontFamily","Component"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\n\r\nimport {\r\n    ComposableMap,\r\n    ZoomableGroup,\r\n    Geographies,\r\n    Geography,\r\n    Markers,\r\n    Marker,\r\n} from \"react-simple-maps\"\r\n\r\nimport world from './Static/world-50m.json';\r\n\r\nconst include = [\r\n    \"ARG\", \"BOL\", \"BRA\", \"CHL\", \"COL\", \"ECU\",\r\n    \"GUY\", \"PRY\", \"PER\", \"SUR\", \"URY\", \"VEN\",\r\n]\r\n\r\nconst markers = [\r\n    { markerOffset: -25, name: \"Buenos Aires\", coordinates: [-58.3816, -34.6037] },\r\n    { markerOffset: -25, name: \"La Paz\", coordinates: [-68.1193, -16.4897] },\r\n    { markerOffset: 35, name: \"Brasilia\", coordinates: [-47.8825, -15.7942] },\r\n    { markerOffset: 35, name: \"Santiago\", coordinates: [-70.6693, -33.4489] },\r\n    { markerOffset: 35, name: \"Bogota\", coordinates: [-74.0721, 4.7110] },\r\n    { markerOffset: 35, name: \"Quito\", coordinates: [-78.4678, -0.1807] },\r\n    { markerOffset: -25, name: \"Georgetown\", coordinates: [-58.1551, 6.8013] },\r\n    { markerOffset: -25, name: \"Asuncion\", coordinates: [-57.5759, -25.2637] },\r\n    { markerOffset: 35, name: \"Paramaribo\", coordinates: [-55.2038, 5.8520] },\r\n    { markerOffset: 35, name: \"Montevideo\", coordinates: [-56.1645, -34.9011] },\r\n    { markerOffset: -25, name: \"Caracas\", coordinates: [-66.9036, 10.4806] },\r\n]\r\n\r\nexport default class VectorMapsMarkers extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <ComposableMap\r\n                    projectionConfig={{scale: 605}}\r\n                    width={980}\r\n                    height={551}\r\n                    style={{\r\n                        width: \"100%\",\r\n                        height: \"auto\",\r\n                    }}\r\n                >\r\n                    <ZoomableGroup center={[ -30, -25 ]} disablePanning>\r\n                        <Geographies geography={world}>\r\n                            {(geographies, projection) =>\r\n                                geographies.map((geography, i) =>\r\n                                    include.indexOf(geography.id) !== -1 && (\r\n                                        <Geography\r\n                                            key={i}\r\n                                            geography={geography}\r\n                                            projection={projection}\r\n                                            style={{\r\n                                                default: {\r\n                                                    fill: \"#e9ecef\",\r\n                                                    stroke: \"#adb5bd\",\r\n                                                    strokeWidth: 0.75,\r\n                                                    outline: \"none\",\r\n                                                },\r\n                                                hover: {\r\n                                                    fill: \"#CFD8DC\",\r\n                                                    stroke: \"#adb5bd\",\r\n                                                    strokeWidth: 0.75,\r\n                                                    outline: \"none\",\r\n                                                },\r\n                                                pressed: {\r\n                                                    fill: \"#3f6ad8\",\r\n                                                    stroke: \"#adb5bd\",\r\n                                                    strokeWidth: 0.75,\r\n                                                    outline: \"none\",\r\n                                                },\r\n                                            }}\r\n                                        />\r\n                                    )\r\n                                )\r\n                            }\r\n                        </Geographies>\r\n                        <Markers>\r\n                            {markers.map((marker, i) => (\r\n                                <Marker\r\n                                    key={i}\r\n                                    marker={marker}\r\n                                    style={{\r\n                                        default: { fill: \"#3f6ad8\" },\r\n                                        hover: { fill: \"#FFFFFF\" },\r\n                                        pressed: { fill: \"#3f6ad8\" },\r\n                                    }}\r\n                                >\r\n                                    <circle\r\n                                        cx={0}\r\n                                        cy={0}\r\n                                        r={10}\r\n                                        style={{\r\n                                            stroke: \"#3f6ad8\",\r\n                                            strokeWidth: 3,\r\n                                            opacity: 0.9,\r\n                                        }}\r\n                                    />\r\n                                    <text\r\n                                        textAnchor=\"middle\"\r\n                                        y={marker.markerOffset}\r\n                                        style={{\r\n                                            fontFamily: \"Bariol, sans-serif\",\r\n                                            fill: \"#adb5bd\",\r\n                                        }}\r\n                                    >\r\n                                        {marker.name}\r\n                                    </text>\r\n                                </Marker>\r\n                            ))}\r\n                        </Markers>\r\n                    </ZoomableGroup>\r\n                </ComposableMap>\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}