{"ast":null,"code":"import _classCallCheck from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ravi/Desktop/Practice-APP/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Forms/Elements/Wizard/Examples/Steps/Step3.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Card, CardBody, CardHeader, Col, Collapse, Row, FormGroup, Label, Input, FormFeedback, FormText } from 'reactstrap';\n\nvar WizardStep3 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WizardStep3, _React$Component);\n\n  function WizardStep3(props) {\n    var _this;\n\n    _classCallCheck(this, WizardStep3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WizardStep3).call(this, props));\n    _this.onEntering = _this.onEntering.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onEntered = _this.onEntered.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onExited = _this.onExited.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleAccordion = _this.toggleAccordion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleCustom = _this.toggleCustom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleFade = _this.toggleFade.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      collapse: false,\n      accordion: [true, false, false],\n      custom: [true, false],\n      status: 'Closed',\n      fadeIn: true,\n      timeout: 300\n    };\n    return _this;\n  }\n\n  _createClass(WizardStep3, [{\n    key: \"onEntering\",\n    value: function onEntering() {\n      this.setState({\n        status: 'Opening...'\n      });\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered() {\n      this.setState({\n        status: 'Opened'\n      });\n    }\n  }, {\n    key: \"onExiting\",\n    value: function onExiting() {\n      this.setState({\n        status: 'Closing...'\n      });\n    }\n  }, {\n    key: \"onExited\",\n    value: function onExited() {\n      this.setState({\n        status: 'Closed'\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        collapse: !this.state.collapse\n      });\n    }\n  }, {\n    key: \"toggleAccordion\",\n    value: function toggleAccordion(tab) {\n      var prevState = this.state.accordion;\n      var state = prevState.map(function (x, index) {\n        return tab === index ? !x : false;\n      });\n      this.setState({\n        accordion: state\n      });\n    }\n  }, {\n    key: \"toggleCustom\",\n    value: function toggleCustom(tab) {\n      var prevState = this.state.custom;\n      var state = prevState.map(function (x, index) {\n        return tab === index ? !x : false;\n      });\n      this.setState({\n        custom: state\n      });\n    }\n  }, {\n    key: \"toggleFade\",\n    value: function toggleFade() {\n      this.setState({\n        fadeIn: !this.state.fadeIn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-wizard-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"accordion\",\n        className: \"accordion-wrapper mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        id: \"headingOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Button, {\n        block: true,\n        color: \"link\",\n        className: \"text-left m-0 p-0\",\n        onClick: function onClick() {\n          return _this2.toggleAccordion(0);\n        },\n        \"aria-expanded\": this.state.accordion[0],\n        \"aria-controls\": \"collapseOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"form-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Account Information\", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Enter your user informations below\")))), React.createElement(Collapse, {\n        isOpen: this.state.accordion[0],\n        \"data-parent\": \"#accordion\",\n        id: \"collapseOne\",\n        \"aria-labelledby\": \"headingOne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleEmail2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail2\",\n        placeholder: \"with a placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"password placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"address\",\n        id: \"exampleAddress\",\n        placeholder: \"1234 Main St\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleAddress2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Address 2\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"address2\",\n        id: \"exampleAddress2\",\n        placeholder: \"Apartment, studio, or floor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(Row, {\n        form: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"city\",\n        id: \"exampleCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"State\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"state\",\n        id: \"exampleState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Zip\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"zip\",\n        id: \"exampleZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))))))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"b-radius-0\",\n        id: \"headingTwo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Button, {\n        block: true,\n        color: \"link\",\n        className: \"text-left m-0 p-0\",\n        onClick: function onClick() {\n          return _this2.toggleAccordion(1);\n        },\n        \"aria-expanded\": this.state.accordion[1],\n        \"aria-controls\": \"collapseTwo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"form-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Credit Card Informations\", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Enter your user informations below\")))), React.createElement(Collapse, {\n        isOpen: this.state.accordion[1],\n        \"data-parent\": \"#accordion\",\n        id: \"collapseTwo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleEmail3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Plain Text (Static)\"), React.createElement(Input, {\n        plaintext: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Some plain text/ static value\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleEmail4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail4\",\n        placeholder: \"with a placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"password placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleUrl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Url\"), React.createElement(Input, {\n        type: \"url\",\n        name: \"url\",\n        id: \"exampleUrl\",\n        placeholder: \"url placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Number\"), React.createElement(Input, {\n        type: \"number\",\n        name: \"number\",\n        id: \"exampleNumber\",\n        placeholder: \"number placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleDatetime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Datetime\"), React.createElement(Input, {\n        type: \"datetime\",\n        name: \"datetime\",\n        id: \"exampleDatetime\",\n        placeholder: \"datetime placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Date\"), React.createElement(Input, {\n        type: \"date\",\n        name: \"date\",\n        id: \"exampleDate\",\n        placeholder: \"date placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Time\"), React.createElement(Input, {\n        type: \"time\",\n        name: \"time\",\n        id: \"exampleTime\",\n        placeholder: \"time placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleColor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Color\"), React.createElement(Input, {\n        type: \"color\",\n        name: \"color\",\n        id: \"exampleColor\",\n        placeholder: \"color placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        id: \"headingThree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Button, {\n        block: true,\n        color: \"link\",\n        className: \"text-left m-0 p-0\",\n        onClick: function onClick() {\n          return _this2.toggleAccordion(2);\n        },\n        \"aria-expanded\": this.state.accordion[2],\n        \"aria-controls\": \"collapseThree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"form-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Personal Details\", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Enter your user informations below\")))), React.createElement(Collapse, {\n        isOpen: this.state.accordion[2],\n        \"data-parent\": \"#accordion\",\n        id: \"collapseThree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleEmail5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Input without validation\"), React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"You will not be able to see this\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Example help text that remains unchanged.\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleEmail6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Valid input\"), React.createElement(Input, {\n        valid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        valid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Sweet! that name is available\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Example help text that remains unchanged.\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Invalid input\"), React.createElement(Input, {\n        invalid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Oh noes! that name is already taken\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Example help text that remains unchanged.\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleEmail7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Input without validation\"), React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        tooltip: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"You will not be able to see this\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Example help text that remains unchanged.\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Valid input\"), React.createElement(Input, {\n        valid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        valid: true,\n        tooltip: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Sweet! that name is available\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Example help text that remains unchanged.\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Invalid input\"), React.createElement(Input, {\n        invalid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        tooltip: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Oh noes! that name is already taken\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Example help text that remains unchanged.\"))))))));\n    }\n  }]);\n\n  return WizardStep3;\n}(React.Component);\n\nexport { WizardStep3 as default };","map":{"version":3,"sources":["/home/ravi/Desktop/Practice-APP/app/src/DemoPages/Forms/Elements/Wizard/Examples/Steps/Step3.js"],"names":["React","Fragment","Button","Card","CardBody","CardHeader","Col","Collapse","Row","FormGroup","Label","Input","FormFeedback","FormText","WizardStep3","props","onEntering","bind","onEntered","onExiting","onExited","toggle","toggleAccordion","toggleCustom","toggleFade","state","collapse","accordion","custom","status","fadeIn","timeout","setState","tab","prevState","map","x","index","Component"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Card, CardBody, CardHeader, Col,\r\n    Collapse, Row, FormGroup, Label, Input, FormFeedback, FormText\r\n} from 'reactstrap';\r\n\r\nexport default class WizardStep3 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onEntering = this.onEntering.bind(this);\r\n        this.onEntered = this.onEntered.bind(this);\r\n        this.onExiting = this.onExiting.bind(this);\r\n        this.onExited = this.onExited.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleAccordion = this.toggleAccordion.bind(this);\r\n        this.toggleCustom = this.toggleCustom.bind(this);\r\n        this.toggleFade = this.toggleFade.bind(this);\r\n        this.state = {\r\n            collapse: false,\r\n            accordion: [true, false, false],\r\n            custom: [true, false],\r\n            status: 'Closed',\r\n            fadeIn: true,\r\n            timeout: 300,\r\n        };\r\n    }\r\n\r\n    onEntering() {\r\n        this.setState({status: 'Opening...'});\r\n    }\r\n\r\n    onEntered() {\r\n        this.setState({status: 'Opened'});\r\n    }\r\n\r\n    onExiting() {\r\n        this.setState({status: 'Closing...'});\r\n    }\r\n\r\n    onExited() {\r\n        this.setState({status: 'Closed'});\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({collapse: !this.state.collapse});\r\n    }\r\n\r\n    toggleAccordion(tab) {\r\n\r\n        const prevState = this.state.accordion;\r\n        const state = prevState.map((x, index) => tab === index ? !x : false);\r\n\r\n        this.setState({\r\n            accordion: state,\r\n        });\r\n    }\r\n\r\n    toggleCustom(tab) {\r\n\r\n        const prevState = this.state.custom;\r\n        const state = prevState.map((x, index) => tab === index ? !x : false);\r\n\r\n        this.setState({\r\n            custom: state,\r\n        });\r\n    }\r\n\r\n    toggleFade() {\r\n        this.setState({fadeIn: !this.state.fadeIn});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"form-wizard-content\">\r\n                    <div id=\"accordion\" className=\"accordion-wrapper mb-3\">\r\n                        <Card>\r\n                            <CardHeader id=\"headingOne\">\r\n                                <Button block color=\"link\" className=\"text-left m-0 p-0\"\r\n                                        onClick={() => this.toggleAccordion(0)}\r\n                                        aria-expanded={this.state.accordion[0]}\r\n                                        aria-controls=\"collapseOne\">\r\n                                    <h3 className=\"form-heading\">\r\n                                        Account Information\r\n                                        <p>Enter your user informations below</p>\r\n                                    </h3>\r\n                                </Button>\r\n                            </CardHeader>\r\n                            <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\"\r\n                                      id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                                <CardBody>\r\n                                    <Row form>\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleEmail2\">Email</Label>\r\n                                                <Input type=\"email\" name=\"email\" id=\"exampleEmail2\"\r\n                                                       placeholder=\"with a placeholder\"/>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"examplePassword\">Password</Label>\r\n                                                <Input type=\"password\" name=\"password\" id=\"examplePassword\"\r\n                                                       placeholder=\"password placeholder\"/>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleAddress\">Address</Label>\r\n                                        <Input type=\"text\" name=\"address\" id=\"exampleAddress\"\r\n                                               placeholder=\"1234 Main St\"/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleAddress2\">Address 2</Label>\r\n                                        <Input type=\"text\" name=\"address2\" id=\"exampleAddress2\"\r\n                                               placeholder=\"Apartment, studio, or floor\"/>\r\n                                    </FormGroup>\r\n                                    <Row form>\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleCity\">City</Label>\r\n                                                <Input type=\"text\" name=\"city\" id=\"exampleCity\"/>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleState\">State</Label>\r\n                                                <Input type=\"text\" name=\"state\" id=\"exampleState\"/>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleZip\">Zip</Label>\r\n                                                <Input type=\"text\" name=\"zip\" id=\"exampleZip\"/>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                            </Collapse>\r\n                        </Card>\r\n                        <Card>\r\n                            <CardHeader className=\"b-radius-0\" id=\"headingTwo\">\r\n                                <Button block color=\"link\" className=\"text-left m-0 p-0\"\r\n                                        onClick={() => this.toggleAccordion(1)}\r\n                                        aria-expanded={this.state.accordion[1]}\r\n                                        aria-controls=\"collapseTwo\">\r\n                                    <h3 className=\"form-heading\">\r\n                                        Credit Card Informations\r\n                                        <p>Enter your user informations below</p>\r\n                                    </h3>\r\n                                </Button>\r\n                            </CardHeader>\r\n                            <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\"\r\n                                      id=\"collapseTwo\">\r\n                                <CardBody>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail3\">Plain Text (Static)</Label>\r\n                                        <Input plaintext>Some plain text/ static value</Input>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail4\">Email</Label>\r\n                                        <Input type=\"email\" name=\"email\" id=\"exampleEmail4\"\r\n                                               placeholder=\"with a placeholder\"/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"examplePassword\">Password</Label>\r\n                                        <Input type=\"password\" name=\"password\" id=\"examplePassword\"\r\n                                               placeholder=\"password placeholder\"/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleUrl\">Url</Label>\r\n                                        <Input type=\"url\" name=\"url\" id=\"exampleUrl\" placeholder=\"url placeholder\"/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleNumber\">Number</Label>\r\n                                        <Input type=\"number\" name=\"number\" id=\"exampleNumber\"\r\n                                               placeholder=\"number placeholder\"/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleDatetime\">Datetime</Label>\r\n                                        <Input type=\"datetime\" name=\"datetime\" id=\"exampleDatetime\"\r\n                                               placeholder=\"datetime placeholder\"/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleDate\">Date</Label>\r\n                                        <Input type=\"date\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\"/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleTime\">Time</Label>\r\n                                        <Input type=\"time\" name=\"time\" id=\"exampleTime\" placeholder=\"time placeholder\"/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleColor\">Color</Label>\r\n                                        <Input type=\"color\" name=\"color\" id=\"exampleColor\"\r\n                                               placeholder=\"color placeholder\"/>\r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Collapse>\r\n                        </Card>\r\n                        <Card>\r\n                            <CardHeader id=\"headingThree\">\r\n                                <Button block color=\"link\" className=\"text-left m-0 p-0\"\r\n                                        onClick={() => this.toggleAccordion(2)}\r\n                                        aria-expanded={this.state.accordion[2]}\r\n                                        aria-controls=\"collapseThree\">\r\n                                    <h3 className=\"form-heading\">\r\n                                        Personal Details\r\n                                        <p>Enter your user informations below</p>\r\n                                    </h3>\r\n                                </Button>\r\n                            </CardHeader>\r\n                            <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\"\r\n                                      id=\"collapseThree\">\r\n                                <CardBody>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail5\">Input without validation</Label>\r\n                                        <Input/>\r\n                                        <FormFeedback>You will not be able to see this</FormFeedback>\r\n                                        <FormText>Example help text that remains unchanged.</FormText>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail6\">Valid input</Label>\r\n                                        <Input valid/>\r\n                                        <FormFeedback valid>Sweet! that name is available</FormFeedback>\r\n                                        <FormText>Example help text that remains unchanged.</FormText>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"examplePassword\">Invalid input</Label>\r\n                                        <Input invalid/>\r\n                                        <FormFeedback>Oh noes! that name is already taken</FormFeedback>\r\n                                        <FormText>Example help text that remains unchanged.</FormText>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail7\">Input without validation</Label>\r\n                                        <Input/>\r\n                                        <FormFeedback tooltip>You will not be able to see this</FormFeedback>\r\n                                        <FormText>Example help text that remains unchanged.</FormText>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleEmail\">Valid input</Label>\r\n                                        <Input valid/>\r\n                                        <FormFeedback valid tooltip>Sweet! that name is available</FormFeedback>\r\n                                        <FormText>Example help text that remains unchanged.</FormText>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"examplePassword\">Invalid input</Label>\r\n                                        <Input invalid/>\r\n                                        <FormFeedback tooltip>Oh noes! that name is already taken</FormFeedback>\r\n                                        <FormText>Example help text that remains unchanged.</FormText>\r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Collapse>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}