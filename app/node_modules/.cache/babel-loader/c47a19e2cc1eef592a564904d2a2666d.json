{"ast":null,"code":"import _regeneratorRuntime from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ravi/Desktop/EEL-APP/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ravi/Desktop/EEL-APP/app/src/DemoPages/SolarDashboards/EscalationDetails/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Row, Col, Button, CardHeader, Container, Card, CardBody, CardFooter, UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Table, Input, FormText, CardTitle } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ReactTable from \"react-table\";\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport $ from 'jquery';\nimport dt from 'datatables.net';\nimport dtstyle from 'datatables.net-bs4'; //  import responsive from 'datatables.net-responsive';\n\nimport dtresponsive from 'datatables.net-responsive-bs4';\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport Rodal from 'rodal';\nimport { faAngleUp, faAngleDown, faCalendarAlt, faEllipsisH, faCheck, faTrashAlt, faBusinessTime, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Select from 'react-select';\nvar options = [{\n  value: '1',\n  label: 'Today'\n}, {\n  value: '2',\n  label: 'Yesterday'\n}, {\n  value: '3',\n  label: 'Select Date'\n}];\n\nvar MyExportCSV = function MyExportCSV(props) {\n  var handleClick = function handleClick() {\n    props.onExport();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Export to CSV\"));\n};\n\nvar customTotal = function customTotal(from, to, size) {\n  return React.createElement(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Showing \", from, \" to \", to, \" of \", size, \" Results\");\n};\n\nvar pageoptions = {\n  paginationSize: 4,\n  pageStartIndex: 1,\n  alwaysShowAllBtns: true,\n  // Always show next and previous button\n  withFirstAndLast: false,\n  // Hide the going to First and Last page button\n  hideSizePerPage: false,\n  // Hide the sizePerPage dropdown always\n  hidePageListOnlyOnePage: false,\n  // Hide the pagination list when only one page\n  firstPageText: 'First',\n  prePageText: 'Back',\n  nextPageText: 'Next',\n  lastPageText: 'Last',\n  nextPageTitle: 'First page',\n  prePageTitle: 'Pre page',\n  firstPageTitle: 'Next page',\n  lastPageTitle: 'Last page',\n  showTotal: true,\n  paginationTotalRenderer: customTotal,\n  sizePerPageList: [{\n    text: '5',\n    value: 5\n  }, {\n    text: '10',\n    value: 10\n  }, {\n    text: '50',\n    value: 50\n  }]\n};\n\nvar EscalationDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EscalationDetails, _Component);\n\n  function EscalationDetails() {\n    var _this;\n\n    _classCallCheck(this, EscalationDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EscalationDetails).call(this));\n\n    _this.onFormAckSubmit = function (e) {\n      e.preventDefault();\n      var data = {\n        'inventoryId': _this.state.ackinventory_id,\n        'acknowledge_by_siil': 'Yes',\n        'remark_by_siil': _this.state.ackreason\n      };\n      console.log('Escalation Admin Form_ack', JSON.stringify(data));\n      fetch('/updateEscalationAcknowledgement', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        if (responseData.code == 200) {\n          alert('Acknowledged Successfully');\n\n          _this.hide();\n\n          _this.callAPI();\n        } else {\n          alert('Something Went wrong');\n        }\n      });\n    };\n\n    _this.handleChange = function (selectedOption) {\n      var today = new Date();\n      var date = new Date().getDate();\n      var month = new Date().getMonth() + 1;\n      var year = new Date().getFullYear();\n      var finaldate = \"Today \" + date + \"/\" + month + \"/\" + year;\n\n      if (selectedOption.value == 1) {\n        _this.setState({\n          currentdate: finaldate,\n          apidate: today\n        }, function () {\n          _this.callAPI();\n        });\n      } else if (selectedOption.value == 2) {\n        finaldate = \"Yesterday \" + (date - 1) + \"/\" + month + \"/\" + year;\n\n        _this.setState({\n          currentdate: finaldate,\n          apidate: today.setDate(today.getDate() - 1)\n        }, function () {\n          _this.callAPI();\n        });\n      } else if (selectedOption.value == 3) {\n        _this.showdatepicker();\n      } //alert(JSON.stringify(selectedOption));\n\n\n      _this.setState({\n        selectedOption: selectedOption\n      });\n    };\n\n    _this.state = {\n      parameter: '',\n      userdetails: '',\n      currentdate: '',\n      apidate: new Date(),\n      data: [],\n      criticaldata: [],\n      Aknowledgedata: [],\n      Dispatchdata: [],\n      Escallatedata: [],\n      selectedOption: null,\n      visible: false,\n      currentprod: '',\n      ackinventory_id: '',\n      ackreason: '',\n      datepickervisible: false,\n      datepickerdate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(EscalationDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var onload = {\n        value: \"1\",\n        label: \"Today\"\n      };\n      this.handleChange(onload);\n      this.setState({\n        parameter: this.props.match.params.type\n      }, function () {\n        _this2.callAPI();\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var _this3 = this;\n\n      this.setState({\n        parameter: props.match.params.type\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this3.callAPI();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    }\n  }, {\n    key: \"callAPI\",\n    value: function callAPI() {\n      var _this4 = this;\n\n      var today = new Date();\n      var data = {\n        'date': this.state.apidate\n      };\n      fetch('/getInventory', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        console.log('Dispatch Details', responseData);\n\n        if (responseData.code == 200) {\n          _this4.setState({\n            data: responseData.data.filter(function (o) {\n              return o.Record.dispatch_details.escalation_status === 'Yes';\n            })\n          }, function () {//this.dataresult();\n          });\n        } else {}\n      });\n    }\n  }, {\n    key: \"showdatepicker\",\n    value: function showdatepicker() {\n      this.setState({\n        datepickervisible: true\n      });\n    }\n  }, {\n    key: \"hidedatepicker\",\n    value: function hidedatepicker() {\n      this.setState({\n        datepickervisible: false\n      });\n    }\n  }, {\n    key: \"setdatepickerdate\",\n    value: function setdatepickerdate() {\n      var _this5 = this;\n\n      var dt = this.state.datepickerdate;\n      var date = new Date(dt).getDate();\n      var month = new Date(dt).getMonth() + 1;\n      var year = new Date(dt).getFullYear();\n      var finaldate = \"Selected Date \" + date + \"/\" + month + \"/\" + year;\n      this.setState({\n        datepickervisible: false,\n        apidate: this.state.datepickerdate,\n        currentdate: finaldate\n      }, function () {\n        _this5.callAPI();\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show(data) {\n      console.log('onclic', data);\n      this.setState({\n        visible: true,\n        currentprod: data.Record.part_no,\n        ackinventory_id: data.Key\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.setState({\n        visible: false,\n        ackinventory_id: ''\n      });\n    }\n  }, {\n    key: \"dataresult\",\n    value: function dataresult() {\n      var _this6 = this;\n\n      if (this.state.parameter == \"critical\") {\n        this.setState({\n          data: this.state.data.filter(function (o) {\n            return o.Record.criticalty === \"Critical\";\n          }),\n          head: 'Critical List'\n        });\n      } else if (this.state.parameter == \"pendingack\") {\n        this.setState({\n          data: this.state.data.filter(function (o) {\n            return o.Record.acknowledgement_details.acknowledgement_status === \"No\";\n          }),\n          head: 'Pending List'\n        });\n      } else if (this.state.parameter == \"dispatch\") {\n        this.setState({\n          data: this.state.data.filter(function (o) {\n            return o.Record.dispatch_details.dispatched_date === _this6.state.apidate;\n          }),\n          head: 'Dispatch List'\n        });\n      } else if (this.state.parameter == \"escalate\") {\n        this.setState({\n          data: this.state.data.filter(function (o) {\n            return o.Record.dispatch_details.escalation_remark != '';\n          }),\n          head: 'Escalate List'\n        });\n      } else if (this.state.parameter == \"today\") {\n        this.setState({\n          head: 'Todays List'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var columns = [{\n        dataField: 'Record.date',\n        text: 'Date'\n      }, {\n        dataField: 'Record.vendor',\n        text: 'Vendor'\n      }, {\n        dataField: 'Record.part_no',\n        text: 'Part No'\n      }, {\n        dataField: 'Record.part_description',\n        text: 'Part Description',\n        style: {\n          width: '45%'\n        }\n      }, {\n        dataField: 'Record.dispatch_details.escalation_remark',\n        text: 'Escalation Remark'\n      }, {\n        dataField: 'Record.dispatch_details.acknowledgement_by_siil',\n        isDummyField: false,\n        align: 'center',\n        text: 'Aknowledgement',\n        formatter: function formatter(cellContent, row) {\n          console.log('row details', row, cellContent);\n\n          if (cellContent === '') {\n            return React.createElement(\"div\", {\n              className: \"d-block w-100 text-center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 353\n              },\n              __self: this\n            }, React.createElement(Button, {\n              className: \"mb-2 mr-2 btn-icon btn-icon-only\",\n              color: \"white\",\n              onClick: _this7.show.bind(_this7, row),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 354\n              },\n              __self: this\n            }, React.createElement(FontAwesomeIcon, {\n              color: \"red\",\n              icon: faTimes,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 355\n              },\n              __self: this\n            })));\n          } else {\n            return React.createElement(\"div\", {\n              className: \"d-block w-100 text-center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 362\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"pr-2 opacity-6\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 363\n              },\n              __self: this\n            }, row.Record.dispatch_details.remark_by_siil));\n          }\n        }\n      }];\n      var selectedOption = this.state.selectedOption;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(PageTitle, {\n        heading: \"Escalation List\",\n        subheading: \"\",\n        icon: \"pe-7s-notebook icon-gradient bg-mixed-hopes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"card-header-tab z-index-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-title font-size-lg text-capitalize font-weight-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"header-icon lnr-charts icon-gradient bg-happy-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \" \"), this.state.currentdate), React.createElement(\"div\", {\n        className: \"btn-actions-pane-right text-capitalize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-inline-block ml-2\",\n        style: {\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChange,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      })))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(ToolkitProvider, {\n        keyField: \"id\",\n        data: this.state.data,\n        columns: columns,\n        exportCSV: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, React.createElement(MyExportCSV, Object.assign({}, props.csvProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }), React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n          pagination: paginationFactory(pageoptions),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        })));\n      })))))), React.createElement(Rodal, {\n        visible: this.state.visible,\n        onClose: this.hide.bind(this),\n        showMask: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Aknowledgement Product With Part No \", this.state.currentprod), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onFormAckSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"Reaon\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"ackreason\",\n        id: \"ackreason\",\n        value: this.state.ackreason,\n        onChange: function onChange(e) {\n          _this7.setState({\n            ackreason: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"link\",\n        onClick: this.hide.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"primary\",\n        className: \"mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, \"Submit\")))), React.createElement(Rodal, {\n        visible: this.state.datepickervisible,\n        onClose: this.hidedatepicker.bind(this),\n        showMask: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, \"Select Date\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        inline: true,\n        selected: this.state.datepickerdate,\n        onChange: function onChange(e) {\n          _this7.setState({\n            datepickerdate: e\n          });\n        },\n        calendarClassName: \"no-shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }))))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"link\",\n        onClick: this.hidedatepicker.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.setdatepickerdate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"Yes\")))));\n    }\n  }]);\n\n  return EscalationDetails;\n}(Component);\n\nexport { EscalationDetails as default };","map":{"version":3,"sources":["/home/ravi/Desktop/EEL-APP/app/src/DemoPages/SolarDashboards/EscalationDetails/index.js"],"names":["React","Component","Fragment","Row","Col","Button","CardHeader","Container","Card","CardBody","CardFooter","UncontrolledButtonDropdown","DropdownItem","DropdownMenu","DropdownToggle","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Table","Input","FormText","CardTitle","DatePicker","VerticalTimeline","VerticalTimelineElement","BootstrapTable","filterFactory","textFilter","ReactTable","PageTitle","$","dt","dtstyle","dtresponsive","ToolkitProvider","CSVExport","paginationFactory","Rodal","faAngleUp","faAngleDown","faCalendarAlt","faEllipsisH","faCheck","faTrashAlt","faBusinessTime","faTimes","FontAwesomeIcon","Select","options","value","label","MyExportCSV","props","handleClick","onExport","customTotal","from","to","size","pageoptions","paginationSize","pageStartIndex","alwaysShowAllBtns","withFirstAndLast","hideSizePerPage","hidePageListOnlyOnePage","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","sizePerPageList","text","EscalationDetails","onFormAckSubmit","e","preventDefault","data","state","ackinventory_id","ackreason","console","log","JSON","stringify","fetch","method","headers","Accept","body","then","response","json","responseData","code","alert","hide","callAPI","handleChange","selectedOption","today","Date","date","getDate","month","getMonth","year","getFullYear","finaldate","setState","currentdate","apidate","setDate","showdatepicker","parameter","userdetails","criticaldata","Aknowledgedata","Dispatchdata","Escallatedata","visible","currentprod","datepickervisible","datepickerdate","onload","match","params","type","filter","o","Record","dispatch_details","escalation_status","part_no","Key","criticalty","head","acknowledgement_details","acknowledgement_status","dispatched_date","escalation_remark","columns","dataField","style","width","isDummyField","align","formatter","cellContent","row","show","bind","remark_by_siil","csvProps","baseProps","target","hidedatepicker","setdatepickerdate"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {\n    Row, Col,\n    Button,\n    CardHeader,\n    Container,\n    Card,\n    CardBody,\n    CardFooter,\n    UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, ModalHeader, ModalBody, ModalFooter, Form,\n    FormGroup, Label,\n    Table,\n    Input, FormText, CardTitle\n} from 'reactstrap';\n\nimport DatePicker from 'react-datepicker';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ReactTable from \"react-table\";\nimport PageTitle from '../../../Layout/AppMain/PageTitle';\nimport $ from 'jquery';\nimport dt from 'datatables.net';\nimport dtstyle from 'datatables.net-bs4';\n//  import responsive from 'datatables.net-responsive';\nimport dtresponsive from 'datatables.net-responsive-bs4'\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport Rodal from 'rodal';\n\nimport {\n    faAngleUp,\n    faAngleDown,\n    faCalendarAlt,\n    faEllipsisH,\n    faCheck,\n    faTrashAlt,\n    faBusinessTime,\n    faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Select from 'react-select';\n\nconst options = [\n    { value: '1', label: 'Today' },\n    { value: '2', label: 'Yesterday' },\n    { value: '3', label: 'Select Date' },\n];\n\nconst MyExportCSV = (props) => {\n    const handleClick = () => {\n        props.onExport();\n    };\n    return (\n        <div>\n            <button className=\"btn btn-success\" onClick={handleClick}>Export to CSV</button>\n        </div>\n    );\n};\n\n\nconst customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n        Showing {from} to {to} of {size} Results\n    </span>\n);\n\nconst pageoptions = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    alwaysShowAllBtns: true, // Always show next and previous button\n    withFirstAndLast: false, // Hide the going to First and Last page button\n    hideSizePerPage: false, // Hide the sizePerPage dropdown always\n    hidePageListOnlyOnePage: false, // Hide the pagination list when only one page\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    paginationTotalRenderer: customTotal,\n    sizePerPageList: [\n        {\n            text: '5', value: 5\n        }, {\n            text: '10', value: 10\n        },\n        {\n            text: '50', value: 50\n        }\n    ]\n};\n\nexport default class EscalationDetails extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            parameter: '',\n            userdetails: '',\n            currentdate: '',\n            apidate: new Date(),\n            data: [],\n            criticaldata: [],\n            Aknowledgedata: [],\n            Dispatchdata: [],\n            Escallatedata: [],\n            selectedOption: null,\n            visible:false,\n            currentprod:'',\n            ackinventory_id:'',\n            ackreason:'',\n            datepickervisible:false,\n            datepickerdate:new Date(),\n        };\n\n    }\n\n    componentDidMount() {\n        var onload = { value: \"1\", label: \"Today\" }\n        this.handleChange(onload)\n        this.setState({\n            parameter: this.props.match.params.type\n        }, () => {\n            this.callAPI();\n\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            parameter: props.match.params.type,\n        }, async () => {\n            this.callAPI()\n        })\n    }\n\n\n    callAPI() {\n        var today = new Date()\n        var data = {\n            'date': this.state.apidate,\n        }\n\n\n        fetch('/getInventory', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }).then((response) => response.json())\n            .then((responseData) => {\n                console.log('Dispatch Details', responseData)\n                if (responseData.code == 200) {\n                    this.setState({\n                        data: responseData.data.filter(o => o.Record.dispatch_details.escalation_status === 'Yes')\n                    }, () => {\n                        //this.dataresult();\n                    });\n                } else {\n\n                }\n\n            });\n\n    }\n\n    showdatepicker() {\n        this.setState({\n            datepickervisible: true,\n        });\n    }\n\n    hidedatepicker() {\n        this.setState({datepickervisible: false});\n    }\n\n    setdatepickerdate(){\n        var dt = this.state.datepickerdate;\n        var date = new Date(dt).getDate();\n        var month = new Date(dt).getMonth() + 1;\n        var year = new Date(dt).getFullYear();\n\n        var finaldate = \"Selected Date \" + date + \"/\" + month + \"/\" + year\n\n        this.setState({\n            datepickervisible: false,\n            apidate:this.state.datepickerdate,\n            currentdate:finaldate,\n        },()=>{\n                this.callAPI()\n        });\n\n    }\n\n     show(data) {\n        console.log('onclic', data)\n        this.setState({\n            visible: true,\n            currentprod: data.Record.part_no,\n            ackinventory_id:data.Key\n        });\n    }\n\n    hide() {\n        this.setState({ \n            visible: false,\n            ackinventory_id:'',\n        });\n    }\n\n    onFormAckSubmit = (e) => {\n        e.preventDefault();\n        var data = {\n            'inventoryId': this.state.ackinventory_id,\n            'acknowledge_by_siil':'Yes',\n            'remark_by_siil': this.state.ackreason,\n        }\n\n        console.log('Escalation Admin Form_ack', JSON.stringify(data))\n\n        fetch('/updateEscalationAcknowledgement', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }).then((response) => response.json())\n            .then((responseData) => {\n                if (responseData.code == 200) {\n                    alert('Acknowledged Successfully');\n                    this.hide();\n                    this.callAPI()\n                    \n                } else {\n                    alert('Something Went wrong');\n                }\n            });\n\n    }\n\n     handleChange = (selectedOption) => {\n\n        var today = new Date();\n        var date = new Date().getDate();\n        var month = new Date().getMonth() + 1;\n        var year = new Date().getFullYear();\n\n        var finaldate = \"Today \" + date + \"/\" + month + \"/\" + year\n        if (selectedOption.value == 1) {\n            this.setState({\n                currentdate: finaldate,\n                apidate: today\n            }, () => {\n                this.callAPI()\n            })\n        } else if (selectedOption.value == 2) {\n            finaldate = \"Yesterday \" + (date - 1) + \"/\" + month + \"/\" + year\n            this.setState({\n                currentdate: finaldate,\n                apidate: today.setDate(today.getDate() - 1)\n            }, () => {\n                this.callAPI()\n            })\n        }else if(selectedOption.value ==3){\n            this.showdatepicker();\n        }\n        //alert(JSON.stringify(selectedOption));\n        this.setState({ selectedOption });\n    };\n\n    dataresult() {\n\n        if (this.state.parameter == \"critical\") {\n            this.setState({\n                data: this.state.data.filter(o => o.Record.criticalty === \"Critical\"),\n                head: 'Critical List'\n\n            })\n        } else if (this.state.parameter == \"pendingack\") {\n            this.setState({\n                data: this.state.data.filter(o => o.Record.acknowledgement_details.acknowledgement_status === \"No\"),\n                head: 'Pending List'\n\n            })\n        } else if (this.state.parameter == \"dispatch\") {\n            this.setState({\n                data: this.state.data.filter(o => o.Record.dispatch_details.dispatched_date === this.state.apidate),\n                head: 'Dispatch List'\n\n            })\n\n        } else if (this.state.parameter == \"escalate\") {\n\n            this.setState({\n                data: this.state.data.filter(o => o.Record.dispatch_details.escalation_remark != ''),\n                head: 'Escalate List'\n\n            })\n\n        } else if (this.state.parameter == \"today\") {\n\n            this.setState({\n                head: 'Todays List'\n\n            })\n\n        }\n    }\n\n    render() {\n        const columns = [\n    {\n        dataField: 'Record.date',\n        text: 'Date'\n    },\n    {\n        dataField: 'Record.vendor',\n        text: 'Vendor'\n    },\n    {\n        dataField: 'Record.part_no',\n        text: 'Part No'\n    },\n    {\n        dataField: 'Record.part_description',\n        text: 'Part Description',\n        style: {\n            width: '45%'\n        }\n    },\n    {\n        dataField: 'Record.dispatch_details.escalation_remark',\n        text: 'Escalation Remark'\n    },\n    {\n                dataField: 'Record.dispatch_details.acknowledgement_by_siil',\n                isDummyField: false,\n                align: 'center',\n                text: 'Aknowledgement',\n                formatter: (cellContent, row) => {\n                    console.log('row details',row,cellContent)\n                    if (cellContent === '') {\n                        return (\n                            <div className=\"d-block w-100 text-center\">\n                                <Button className=\"mb-2 mr-2 btn-icon btn-icon-only\" color=\"white\" onClick={this.show.bind(this,row)}>\n                                    <FontAwesomeIcon color=\"red\" icon={faTimes} />\n                                </Button>\n\n                            </div>\n                        );\n                    } else {\n                        return (\n                            <div className=\"d-block w-100 text-center\">\n                                <span className=\"pr-2 opacity-6\">\n                                    {row.Record.dispatch_details.remark_by_siil}\n                                </span>\n                            </div>\n                        );\n                    }\n\n                }\n            },\n];\nconst { selectedOption } = this.state;\n        return (\n            <Fragment>\n                <PageTitle\n                    heading='Escalation List'\n                    subheading=\"\"\n                    icon=\"pe-7s-notebook icon-gradient bg-mixed-hopes\"\n                />\n                <Container fluid>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card className=\"main-card mb-3\">\n                                <CardHeader className=\"card-header-tab z-index-6\">\n                                    <div\n                                        className=\"card-header-title font-size-lg text-capitalize font-weight-normal\">\n                                        <i className=\"header-icon lnr-charts icon-gradient bg-happy-green\"> </i>\n                                        {this.state.currentdate}\n                                    </div>\n                                    <div className=\"btn-actions-pane-right text-capitalize\">\n                                        <span className=\"d-inline-block ml-2\" style={{ width: 200 }}>\n                                            <Select\n                                                value={selectedOption}\n                                                onChange={this.handleChange}\n                                                options={options}\n                                            />\n                                        </span>\n                                    </div>\n                                </CardHeader>\n                                <CardBody>\n\n                                    <div className=\"table-responsive\">\n                                    <ToolkitProvider\n                                        keyField=\"id\"\n                                        data={this.state.data}\n                                        columns={columns}\n                                        exportCSV\n                                    >\n                                        {\n                                            props => (\n                                                <div>\n\n                                                    <MyExportCSV {...props.csvProps} />\n                                                    <hr />\n\n                                                    <BootstrapTable {...props.baseProps} pagination={paginationFactory(pageoptions)} />\n\n                                                </div>\n                                            )\n                                        }\n                                    </ToolkitProvider>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Rodal visible={this.state.visible}\n                        onClose={this.hide.bind(this)}\n                        showMask={false}\n                    >\n                        <ModalHeader>Aknowledgement Product With Part No {this.state.currentprod}</ModalHeader>\n                        <ModalBody>\n                        <Form onSubmit={this.onFormAckSubmit}>\n                        <FormGroup>\n                            <Label>Reaon</Label>\n                            <Input type=\"text\" name=\"ackreason\" id=\"ackreason\"\n                                value={this.state.ackreason}\n                                onChange={(e) => {\n                                    this.setState({\n                                        ackreason: e.target.value\n                                    })\n                                }}\n                            />\n                        </FormGroup>\n                        <Button color=\"link\" onClick={this.hide.bind(this)}>Cancel</Button>\n                        <Button color=\"primary\" className=\"mt-1\">Submit</Button>\n                        </Form>\n                        </ModalBody>\n                        {/* <ModalFooter>\n                            <Button color=\"link\" onClick={this.hide.bind(this)}>Cancel</Button>\n                            <Button color=\"primary\" onClick={this.UpdateAknowledgement.bind(this)}>Yes</Button>\n                        </ModalFooter> */}\n                    </Rodal>\n\n                    <Rodal visible={this.state.datepickervisible}\n                        onClose={this.hidedatepicker.bind(this)}\n                        showMask={false}\n                    >\n                        <ModalHeader>Select Date</ModalHeader>\n                        <ModalBody>\n                        <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <div className=\"text-center\">\n                                        <DatePicker\n                                            inline\n                                            selected={this.state.datepickerdate}\n                                            onChange={(e) => {\n                                                            this.setState({\n                                                                datepickerdate: e\n                                                            })\n                                                        }}\n                                            calendarClassName=\"no-shadow\"\n                                        />\n                                    </div>\n                                </CardBody>\n                        </Card>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"link\" onClick={this.hidedatepicker.bind(this)}>Cancel</Button>\n                            <Button color=\"primary\" onClick={this.setdatepickerdate.bind(this)}>Yes</Button>\n                        </ModalFooter> \n                    </Rodal>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}