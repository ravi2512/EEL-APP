{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nrequire(\"../style/DateTimeRange.css\");\n\nvar _MonthYearSelector = _interopRequireDefault(require(\"./MonthYearSelector\"));\n\nvar _CalendarHeader = _interopRequireDefault(require(\"./CalendarHeader\"));\n\nvar _CalendarRows = _interopRequireDefault(require(\"./CalendarRows\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _TimeFunctionUtils = require(\"../utils/TimeFunctionUtils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n    _this.state = {\n      month: 0,\n      year: 0\n    };\n    _this.changeMonthCallback = _this.changeMonthCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeYearCallback = _this.changeYearCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeMonthArrowsCallback = _this.changeMonthArrowsCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateMonthYear();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(previousProps) {\n      if (!previousProps.date.isSame(this.props.date) || !previousProps.otherDate.isSame(this.props.otherDate)) {\n        this.updateMonthYear();\n      }\n    }\n  }, {\n    key: \"updateMonthYear\",\n    value: function updateMonthYear() {\n      var newMonth = (0, _TimeFunctionUtils.getMonth)(this.props.date, this.props.otherDate, this.props.mode);\n      var newYear = (0, _TimeFunctionUtils.getYear)(this.props.date, this.props.otherDate, this.props.mode);\n      this.setState({\n        month: newMonth,\n        year: newYear\n      });\n    }\n  }, {\n    key: \"createMonths\",\n    value: function createMonths() {\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      return months;\n    }\n  }, {\n    key: \"createYears\",\n    value: function createYears() {\n      var years = []; //Range from 1900 to 25 years into the future\n\n      var past = (0, _moment.default)(\"19000101\", \"YYYYMMDD\");\n      var yearsToGetFuture = 10;\n      var endYear = (0, _moment.default)().add(yearsToGetFuture, \"years\").get('year');\n      var addedCurrentYear = false;\n\n      while (!addedCurrentYear) {\n        if (past.get(\"years\") === endYear) {\n          addedCurrentYear = true;\n        }\n\n        years.push(past.year());\n        past.add(1, \"years\");\n      }\n\n      return years;\n    }\n  }, {\n    key: \"changeMonthCallback\",\n    value: function changeMonthCallback(event) {\n      for (var i = 0; i < event.target.length; i++) {\n        if (event.target[i].value === event.target.value) {\n          this.setState({\n            month: i\n          });\n        }\n      }\n    }\n  }, {\n    key: \"changeMonthArrowsCallback\",\n    value: function changeMonthArrowsCallback(isPreviousChange, isNextChange) {\n      var years = this.createYears();\n      var monthLocal = parseInt(this.state.month);\n      var yearLocal = parseInt(this.state.year);\n      var newMonthYear;\n\n      if (isPreviousChange) {\n        newMonthYear = this.getPreviousMonth(monthLocal, yearLocal, years);\n      }\n\n      if (isNextChange) {\n        newMonthYear = this.getNextMonth(monthLocal, yearLocal, years);\n      }\n\n      this.setState({\n        year: newMonthYear.yearLocal,\n        month: newMonthYear.monthLocal\n      });\n    }\n  }, {\n    key: \"getPreviousMonth\",\n    value: function getPreviousMonth(monthLocal, yearLocal, years) {\n      var isStartOfMonth = monthLocal === 0;\n      var isFirstYear = parseInt(yearLocal) === years[0];\n\n      if (!(isStartOfMonth && isFirstYear)) {\n        if (monthLocal === 0) {\n          monthLocal = 11;\n          yearLocal -= 1;\n        } else {\n          monthLocal -= 1;\n        }\n      }\n\n      return {\n        monthLocal: monthLocal,\n        yearLocal: yearLocal\n      };\n    }\n  }, {\n    key: \"getNextMonth\",\n    value: function getNextMonth(monthLocal, yearLocal, years) {\n      var isEndOfMonth = monthLocal === 11;\n      var isLastYear = parseInt(yearLocal) === years[years.length - 1];\n\n      if (!(isEndOfMonth && isLastYear)) {\n        if (monthLocal === 11) {\n          monthLocal = 0;\n          yearLocal += 1;\n        } else {\n          monthLocal += 1;\n        }\n      }\n\n      return {\n        monthLocal: monthLocal,\n        yearLocal: yearLocal\n      };\n    }\n  }, {\n    key: \"changeYearCallback\",\n    value: function changeYearCallback(event) {\n      this.setState({\n        year: parseInt(event.target.value)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var months = this.createMonths();\n      var years = this.createYears();\n      var headers;\n      var sundayFirst;\n\n      if (this.props.local && this.props.local.sundayFirst) {\n        sundayFirst = true;\n        headers = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\n      } else {\n        sundayFirst = false;\n        headers = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"];\n      }\n\n      var fourtyTwoDays = (0, _TimeFunctionUtils.getFourtyTwoDays)(this.state.month, this.state.year, sundayFirst);\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_MonthYearSelector.default, {\n        date: this.props.date,\n        mode: this.props.mode,\n        otherDate: this.props.otherDate,\n        months: months,\n        years: years,\n        month: this.state.month,\n        year: this.state.year,\n        changeMonthCallback: this.changeMonthCallback,\n        changeYearCallback: this.changeYearCallback,\n        changeMonthArrowsCallback: this.changeMonthArrowsCallback\n      }), _react.default.createElement(_CalendarHeader.default, {\n        headers: headers\n      }), _react.default.createElement(_CalendarRows.default, {\n        fourtyTwoDays: fourtyTwoDays,\n        date: this.props.date,\n        mode: this.props.mode,\n        otherDate: this.props.otherDate,\n        maxDate: this.props.maxDate,\n        month: this.state.month,\n        year: this.state.year,\n        dateSelectedNoTimeCallback: this.props.dateSelectedNoTimeCallback,\n        keyboardCellCallback: this.props.keyboardCellCallback,\n        focusOnCallback: this.props.focusOnCallback,\n        focusDate: this.props.focusDate,\n        cellFocusedCallback: this.props.cellFocusedCallback\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(_react.default.Component);\n\nvar _default = Calendar;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}