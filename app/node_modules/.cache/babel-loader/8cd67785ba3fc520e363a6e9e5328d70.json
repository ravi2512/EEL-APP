{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _rcHammerjs = require('rc-hammerjs');\n\nvar _rcHammerjs2 = _interopRequireDefault(_rcHammerjs);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _TabContent = require('./TabContent');\n\nvar _TabContent2 = _interopRequireDefault(_TabContent);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar RESISTANCE_COEF = 0.6;\n\nfunction computeIndex(_ref) {\n  var maxIndex = _ref.maxIndex,\n      startIndex = _ref.startIndex,\n      delta = _ref.delta,\n      viewSize = _ref.viewSize;\n  var index = startIndex + -delta / viewSize;\n\n  if (index < 0) {\n    index = Math.exp(index * RESISTANCE_COEF) - 1;\n  } else if (index > maxIndex) {\n    index = maxIndex + 1 - Math.exp((maxIndex - index) * RESISTANCE_COEF);\n  }\n\n  return index;\n}\n\nfunction getIndexByDelta(e) {\n  var delta = (0, _utils.isVertical)(this.props.tabBarPosition) ? e.deltaY : e.deltaX;\n  var otherDelta = (0, _utils.isVertical)(this.props.tabBarPosition) ? e.deltaX : e.deltaY;\n\n  if (Math.abs(delta) < Math.abs(otherDelta)) {\n    return undefined;\n  }\n\n  var currentIndex = computeIndex({\n    maxIndex: this.maxIndex,\n    viewSize: this.viewSize,\n    startIndex: this.startIndex,\n    delta: delta\n  });\n  var showIndex = delta < 0 ? Math.floor(currentIndex + 1) : Math.floor(currentIndex);\n\n  if (showIndex < 0) {\n    showIndex = 0;\n  } else if (showIndex > this.maxIndex) {\n    showIndex = this.maxIndex;\n  }\n\n  if (this.children[showIndex].props.disabled) {\n    return undefined;\n  }\n\n  return currentIndex;\n}\n\nvar SwipeableTabContent = function (_React$Component) {\n  (0, _inherits3['default'])(SwipeableTabContent, _React$Component);\n\n  function SwipeableTabContent() {\n    var _ref2;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3['default'])(this, SwipeableTabContent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, (_ref2 = SwipeableTabContent.__proto__ || Object.getPrototypeOf(SwipeableTabContent)).call.apply(_ref2, [this].concat(args))), _this), _this.onPanStart = function () {\n      var _this$props = _this.props,\n          tabBarPosition = _this$props.tabBarPosition,\n          children = _this$props.children,\n          activeKey = _this$props.activeKey,\n          animated = _this$props.animated;\n      _this.startIndex = (0, _utils.getActiveIndex)(children, activeKey);\n      var startIndex = _this.startIndex;\n\n      if (startIndex === -1) {\n        return;\n      }\n\n      if (animated) {\n        (0, _utils.setTransition)(_this.rootNode.style, 'none');\n      }\n\n      _this.startDrag = true;\n      _this.children = (0, _utils.toArray)(children);\n      _this.maxIndex = _this.children.length - 1;\n      _this.viewSize = (0, _utils.isVertical)(tabBarPosition) ? _this.rootNode.offsetHeight : _this.rootNode.offsetWidth;\n    }, _this.onPan = function (e) {\n      if (!_this.startDrag) {\n        return;\n      }\n\n      var tabBarPosition = _this.props.tabBarPosition;\n      var currentIndex = getIndexByDelta.call(_this, e);\n\n      if (currentIndex !== undefined) {\n        (0, _utils.setTransform)(_this.rootNode.style, (0, _utils.getTransformByIndex)(currentIndex, tabBarPosition));\n      }\n    }, _this.onPanEnd = function (e) {\n      if (!_this.startDrag) {\n        return;\n      }\n\n      _this.end(e);\n    }, _this.onSwipe = function (e) {\n      _this.end(e, true);\n    }, _this.end = function (e, swipe) {\n      var _this$props2 = _this.props,\n          tabBarPosition = _this$props2.tabBarPosition,\n          animated = _this$props2.animated;\n      _this.startDrag = false;\n\n      if (animated) {\n        (0, _utils.setTransition)(_this.rootNode.style, '');\n      }\n\n      var currentIndex = getIndexByDelta.call(_this, e);\n      var finalIndex = _this.startIndex;\n\n      if (currentIndex !== undefined) {\n        if (currentIndex < 0) {\n          finalIndex = 0;\n        } else if (currentIndex > _this.maxIndex) {\n          finalIndex = _this.maxIndex;\n        } else if (swipe) {\n          var delta = (0, _utils.isVertical)(tabBarPosition) ? e.deltaY : e.deltaX;\n          finalIndex = delta < 0 ? Math.ceil(currentIndex) : Math.floor(currentIndex);\n        } else {\n          var floorIndex = Math.floor(currentIndex);\n\n          if (currentIndex - floorIndex > 0.6) {\n            finalIndex = floorIndex + 1;\n          } else {\n            finalIndex = floorIndex;\n          }\n        }\n      }\n\n      if (_this.children[finalIndex].props.disabled) {\n        return;\n      }\n\n      if (_this.startIndex === finalIndex) {\n        if (animated) {\n          (0, _utils.setTransform)(_this.rootNode.style, (0, _utils.getTransformByIndex)(finalIndex, _this.props.tabBarPosition));\n        }\n      } else {\n        _this.props.onChange((0, _utils.getActiveKey)(_this.props.children, finalIndex));\n      }\n    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);\n  }\n\n  (0, _createClass3['default'])(SwipeableTabContent, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.rootNode = _reactDom2['default'].findDOMNode(this);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          tabBarPosition = _props.tabBarPosition,\n          hammerOptions = _props.hammerOptions,\n          animated = _props.animated;\n      var events = {\n        onSwipe: this.onSwipe,\n        onPanStart: this.onPanStart\n      };\n\n      if (animated !== false) {\n        events = (0, _extends3['default'])({}, events, {\n          onPan: this.onPan,\n          onPanEnd: this.onPanEnd\n        });\n      }\n\n      return _react2['default'].createElement(_rcHammerjs2['default'], (0, _extends3['default'])({}, events, {\n        direction: (0, _utils.isVertical)(tabBarPosition) ? 'DIRECTION_ALL' : 'DIRECTION_HORIZONTAL',\n        options: hammerOptions\n      }), _react2['default'].createElement(_TabContent2['default'], this.props));\n    }\n  }]);\n  return SwipeableTabContent;\n}(_react2['default'].Component);\n\nexports['default'] = SwipeableTabContent;\nSwipeableTabContent.propTypes = {\n  tabBarPosition: _propTypes2['default'].string,\n  onChange: _propTypes2['default'].func,\n  children: _propTypes2['default'].node,\n  hammerOptions: _propTypes2['default'].any,\n  animated: _propTypes2['default'].bool,\n  activeKey: _propTypes2['default'].string\n};\nSwipeableTabContent.defaultProps = {\n  animated: true\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}